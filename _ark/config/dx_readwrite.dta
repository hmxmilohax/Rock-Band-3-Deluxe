#define INIT_DX_READER
(
   {foreach $entry {read_file DX_FILE_PATH}
      {if {== {elem $entry 0} {basename mtv_position}}
         {set $mtvpos_0
            {elem {find $entry mtv_position} 1}
         }
         {set $mtvpos_1
            {elem {find $entry mtv_position} 2}
         }
         {set $mtvpos_2
            {elem {find $entry mtv_position} 3}
         }
      }
      {if {== {elem $entry 0} {basename gem_colors}}
         {set $slot1_color
            {elem {find $entry gem_colors} 1}
         }
         {set $slot2_color
            {elem {find $entry gem_colors} 2}
         }
         {set $slot3_color
            {elem {find $entry gem_colors} 3}
         }
         {set $slot4_color
            {elem {find $entry gem_colors} 4}
         }
         {set $slot5_color
            {elem {find $entry gem_colors} 5}
         }
      }
      {if {== {elem $entry 0} {basename sustain_colors}}
         {set $sus1_color
            {elem {find $entry sustain_colors} 1}
         }
         {set $sus2_color
            {elem {find $entry sustain_colors} 2}
         }
         {set $sus3_color
            {elem {find $entry sustain_colors} 3}
         }
         {set $sus4_color
            {elem {find $entry sustain_colors} 4}
         }
         {set $sus5_color
            {elem {find $entry sustain_colors} 5}
         }
      }
      {if {== {elem $entry 0} {basename smasher_colors}}
         {set $fret1_color
            {elem {find $entry smasher_colors} 1}
         }
         {set $fret2_color
            {elem {find $entry smasher_colors} 2}
         }
         {set $fret3_color
            {elem {find $entry smasher_colors} 3}
         }
         {set $fret4_color
            {elem {find $entry smasher_colors} 4}
         }
         {set $fret5_color
            {elem {find $entry smasher_colors} 5}
         }
      }
      {if {== {elem $entry 0} {basename drum_smasher_colors}}
         {set $smasher1_color
            {elem {find $entry drum_smasher_colors} 1}
         }
         {set $smasher2_color
            {elem {find $entry drum_smasher_colors} 2}
         }
         {set $smasher3_color
            {elem {find $entry drum_smasher_colors} 3}
         }
         {set $smasher4_color
            {elem {find $entry drum_smasher_colors} 4}
         }
      }
      {if {== {elem $entry 0} {basename drum_tom_colors}}
         {set $drum1_color
            {elem {find $entry drum_tom_colors} 1}
         }
         {set $drum2_color
            {elem {find $entry drum_tom_colors} 2}
         }
         {set $drum3_color
            {elem {find $entry drum_tom_colors} 3}
         }
         {set $drum4_color
            {elem {find $entry drum_tom_colors} 4}
         }
      }
      {if {== {elem $entry 0} {basename drum_cymbal_color}}
         {set $cym1_color
            {elem {find $entry drum_cymbal_color} 1}
         }
         {set $cym2_color
            {elem {find $entry drum_cymbal_color} 2}
         }
         {set $cym3_color
            {elem {find $entry drum_cymbal_color} 3}
         }
         {set $cym4_color
            {elem {find $entry drum_cymbal_color} 4}
         }
      }
      {if {== {elem $entry 0} {basename kick_color}}
         {set $kick_color
            {elem {find $entry kick_color} 1}
         }
      }
      {if {== {elem $entry 0} {basename main_menu_screen}}
         {set $svnumber
            {elem {find $entry main_menu_screen} 1}
         }
      }
      {if {== {elem $entry 0} {basename emulate_fps}}
         {set $emulatefps
            {elem {find $entry emulate_fps} 1}
         }
      }
      {if {== {elem $entry 0} {basename track_speed}}
         {set $trackspeed
            {elem {find $entry track_speed} 1}
         }
      }
      {if {== {elem $entry 0} {basename song_speed}}
         {set $speedmod
            {elem {find $entry song_speed} 1}
         }
      }
      {if {== {elem $entry 0} {basename animated_gem_texture}}
         {set $animatedgemname
            {elem {find $entry animated_gem_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename gem_texture}}
         {set $gem
            {elem {find $entry gem_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename sustain_texture}}
         {set $sustain
            {elem {find $entry sustain_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename smasher_texture}}
         {set $smasher
            {elem {find $entry smasher_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename crowdmeter_texture}}
         {set $crowdmeter
            {elem {find $entry crowdmeter_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename multiring_texture}}
         {set $multiring
            {elem {find $entry multiring_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename odbar_texture}}
         {set $odbar
            {elem {find $entry odbar_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename rails_texture}}
         {set $rails
            {elem {find $entry rails_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename score_texture}}
         {set $scoretex
            {elem {find $entry score_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename flames_texture}}
         {set $flames
            {elem {find $entry flames_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename voxarrow_texture}}
         {set $voxarrow
            {elem {find $entry voxarrow_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename voxhw_texture}}
         {set $voxhw
            {elem {find $entry voxhw_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename keyboard_texture}}
         {set $keyboard
            {elem {find $entry keyboard_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename emissive_texture}}
         {set $emissive
            {elem {find $entry emissive_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename emissive_color}}
         {set $emissive_r
            {elem {find $entry emissive_color} 1}
         }
         {set $emissive_g
            {elem {find $entry emissive_color} 2}
         }
         {set $emissive_b
            {elem {find $entry emissive_color} 3}
         }
      }
      {if {== {elem $entry 0} {basename emissive_gtr_texture}}
         {set $emissivegtr
            {elem {find $entry emissive_gtr_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename emissive_bass_texture}}
         {set $emissivebass
            {elem {find $entry emissive_bass_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename emissive_drum_texture}}
         {set $emissivedrum
            {elem {find $entry emissive_drum_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename emissive_keys_texture}}
         {set $emissivekeys
            {elem {find $entry emissive_keys_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_texture}}
         {set $spotlight
            {elem {find $entry spotlight_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_gtr_texture}}
         {set $spotlightgtr
            {elem {find $entry spotlight_gtr_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_bass_texture}}
         {set $spotlightbass
            {elem {find $entry spotlight_bass_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_drum_texture}}
         {set $spotlightdrum
            {elem {find $entry spotlight_drum_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_keys_texture}}
         {set $spotlightkeys
            {elem {find $entry spotlight_keys_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename highway_texture}}
         {set $highway
            {elem {find $entry highway_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename highway_gtr_texture}}
         {set $highwaygtr
            {elem {find $entry highway_gtr_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename highway_bass_texture}}
         {set $highwaybass
            {elem {find $entry highway_bass_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename highway_drum_texture}}
         {set $highwaydrum
            {elem {find $entry highway_drum_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename highway_keys_texture}}
         {set $highwaykeys
            {elem {find $entry highway_keys_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename multi_angle}}
         {set $multiangle
            {elem {find $entry multi_angle} 1}
         }
      }
      {if {== {elem $entry 0} {basename fullcombo_sfx}}
         {set $fcsfx
            {elem {find $entry fullcombo_sfx} 1}
         }
      }
      {if {== {elem $entry 0} {basename rb3_venue}}
         {set $venue
            {elem {find $entry rb3_venue} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_nosustain}}
         {if {== {elem {find $entry mod_nosustain} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nosustain}
         }
      }
      {if {== {elem $entry 0} {basename mod_rb2sustain}}
         {if {== {elem {find $entry mod_rb2sustain} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_rb2sustain}
         }
      }
      {if {== {elem $entry 0} {basename mod_rb4sustain}}
         {if {== {elem {find $entry mod_rb4sustain} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_rb4sustain}
         }
      }
      {if {== {elem $entry 0} {basename mod_rb4os}}
         {if {== {elem {find $entry mod_rb4os} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_rb4os}
         }
      }
      {if {== {elem $entry 0} {basename mod_xboxos}}
         {if {== {elem {find $entry mod_xboxos} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_xboxos}
         }
      }
      {if {== {elem $entry 0} {basename mod_ps3os}}
         {if {== {elem {find $entry mod_ps3os} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_ps3os}
         }
      }
      {if {== {elem $entry 0} {basename mod_wiios}}
         {if {== {elem {find $entry mod_wiios} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_wiios}
         }
      }
   }
)
#define INIT_DX_WRITER
(
   {write_file DX_FILE_PATH
      {array
         (
            (mtv_position
               (mtv_position $mtvpos_0 $mtvpos_1 $mtvpos_2)
            )
            (gem_colors
               (gem_colors $slot1_color $slot2_color $slot3_color $slot4_color $slot5_color)
            )
            (sustain_colors
               (sustain_colors $sus1_color $sus2_color $sus3_color $sus4_color $sus5_color)
            )
            (smasher_colors
               (smasher_colors $fret1_color $fret2_color $fret3_color $fret4_color $fret5_color)
            )
            (drum_smasher_colors
               (drum_smasher_colors $smasher1_color $smasher2_color $smasher3_color $smasher4_color)
            )
            (drum_tom_colors
               (drum_tom_colors $drum1_color $drum2_color $drum3_color $drum4_color)
            )
            (drum_cymbal_color
               (drum_cymbal_color $cym1_color $cym2_color $cym3_color $cym4_color )
            )
            (kick_color
               (kick_color $kick_color)
            )
            (main_menu_screen
               (main_menu_screen $svnumber)
            )
            (emulate_fps
               (emulate_fps $emulatefps)
            )
            (track_speed
               (track_speed $trackspeed)
            )
            (song_speed
               (song_speed $speedmod)
            )
            (animated_gem_texture
               (animated_gem_texture $animatedgemname)
            )
            (gem_texture
               (gem_texture $gem)
            )
            (sustain_texture
               (sustain_texture $sustain)
            )
            (smasher_texture
               (smasher_texture $smasher)
            )
            (crowdmeter_texture
               (crowdmeter_texture $crowdmeter)
            )
            (multiring_texture
               (multiring_texture $multiring)
            )
            (odbar_texture
               (odbar_texture $odbar)
            )
            (rails_texture
               (rails_texture $rails)
            )
            (score_texture
               (score_texture $scoretex)
            )
            (flames_texture
               (flames_texture $flames)
            )
            (voxarrow_texture
               (voxarrow_texture $voxarrow)
            )
            (voxhw_texture
               (voxhw_texture $voxhw)
            )
            (keyboard_texture
               (keyboard_texture $keyboard)
            )
            (emissive_texture
               (emissive_texture $emissive)
            )
            (emissive_color
               (emissive_color $emissive_r $emissive_g $emissive_b)
            )
            (emissive_gtr_texture
               (emissive_gtr_texture $emissivegtr)
            )
            (emissive_bass_texture
               (emissive_bass_texture $emissivebass)
            )
            (emissive_drum_texture
               (emissive_drum_texture $emissivedrum)
            )
            (emissive_keys_texture
               (emissive_keys_texture $emissivekeys)
            )
            (spotlight_texture
               (spotlight_texture $spotlight)
            )
            (spotlight_gtr_texture
               (spotlight_gtr_texture $spotlightgtr)
            )
            (spotlight_bass_texture
               (spotlight_bass_texture $spotlightbass)
            )
            (spotlight_drum_texture
               (spotlight_drum_texture $spotlightdrum)
            )
            (spotlight_keys_texture
               (spotlight_keys_texture $spotlightkeys)
            )
            (highway_texture
               (highway_texture $highway)
            )
            (highway_gtr_texture
               (highway_gtr_texture $highwaygtr)
            )
            (highway_bass_texture
               (highway_bass_texture $highwaybass)
            )
            (highway_drum_texture
               (highway_drum_texture $highwaydrum)
            )
            (highway_keys_texture
               (highway_keys_texture $highwaykeys)
            )
            (multi_angle
               (multi_angle $multiangle)
            )
            (fullcombo_sfx
               (fullcombo_sfx $fcsfx)
            )
            (toggle_postfx
               (toggle_postfx $toggle_postfx)
            )
            (rb3_venue
               (rb3_venue
                  {if_else {&& {== $force TRUE}
                                {||
                                   {== $venue small_venues} {== $venue big_venues} {== $venue arena_venues}
                                   {== $venue festival_venues} {== $venue venues_video}
                                   {== $venue small_club_01} {== $venue small_club_02} {== $venue small_club_03}
                                   {== $venue small_club_04} {== $venue small_club_05} {== $venue small_club_06}
                                   {== $venue small_club_10} {== $venue small_club_11} {== $venue small_club_13}
                                   {== $venue small_club_14} {== $venue small_club_15} {== $venue big_club_01}
                                   {== $venue big_club_02} {== $venue big_club_04} {== $venue big_club_05}
                                   {== $venue big_club_06} {== $venue big_club_07} {== $venue big_club_08}
                                   {== $venue big_club_09} {== $venue big_club_10} {== $venue big_club_11}
                                   {== $venue big_club_12} {== $venue big_club_13} {== $venue big_club_14}
                                   {== $venue big_club_15} {== $venue big_club_17} {== $venue arena_01}
                                   {== $venue arena_02} {== $venue arena_03} {== $venue arena_04}
                                   {== $venue arena_06} {== $venue arena_07} {== $venue arena_10}
                                   {== $venue arena_11} {== $venue arena_12} {== $venue festival_01}
                                   {== $venue festival_02} {== $venue none}
                                }
                            }
                     $venue
                     FALSE
                  }
               )
            )
            (mod_nosustain
               (mod_nosustain {modifier_mgr is_modifier_active mod_nosustain})
            )
            (mod_rb2sustain
               (mod_rb2sustain {modifier_mgr is_modifier_active mod_rb2sustain})
            )
            (mod_rb4sustain
               (mod_rb4sustain {modifier_mgr is_modifier_active mod_rb4sustain})
            )
            (mod_rb4os
               (mod_rb4os {modifier_mgr is_modifier_active mod_rb4os})
            )
            (mod_xboxos
               (mod_xboxos {modifier_mgr is_modifier_active mod_xboxos})
            )
            (mod_ps3os
               (mod_ps3os {modifier_mgr is_modifier_active mod_ps3os})
            )
            (mod_wiios
               (mod_wiios {modifier_mgr is_modifier_active mod_wiios})
            )
         )
      }
   }
)
#define INIT_MOD_READER
(
   {foreach $entry {read_file MOD_FILE_PATH}
      {if {== {elem $entry 0} {basename mod_staticfills}}
         {if {== {elem {find $entry mod_staticfills} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_staticfills}
         }
      }
      {if {== {elem $entry 0} {basename mod_chord_numbers}}
         {if {== {elem {find $entry mod_chord_numbers} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_chord_numbers}
         }
      }
      {if {== {elem $entry 0} {basename mod_nohud}}
         {if {== {elem {find $entry mod_nohud} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nohud}
         }
      }
      {if {== {elem $entry 0} {basename mod_miss_sounds}}
         {if {== {elem {find $entry mod_miss_sounds} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_miss_sounds}
         }
      }
      {if {== {elem $entry 0} {basename mod_songtitle}}
         {if {== {elem {find $entry mod_songtitle} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_songtitle}
         }
      }
      {if {== {elem $entry 0} {basename mod_songtitlestats}}
         {if {== {elem {find $entry mod_songtitlestats} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_songtitlestats}
         }
      }
      {if {== {elem $entry 0} {basename mod_whammyfx}}
         {if {== {elem {find $entry mod_whammyfx} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_whammyfx}
         }
      }
      {if {== {elem $entry 0} {basename mod_songselectnoise}}
         {if {== {elem {find $entry mod_songselectnoise} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_songselectnoise}
         }
      }
      {if {== {elem $entry 0} {basename mod_practiceoverdrive}}
         {if {== {elem {find $entry mod_practiceoverdrive} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_practiceoverdrive}
         }
      }
      {if {== {elem $entry 0} {basename mod_nolanes}}
         {if {== {elem {find $entry mod_nolanes} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nolanes}
         }
      }
      {if {== {elem $entry 0} {basename mod_rb4lanes}}
         {if {== {elem {find $entry mod_rb4lanes} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_rb4lanes}
         }
      }
      {if {== {elem $entry 0} {basename mod_nomv}}
         {if {== {elem {find $entry mod_nomv} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nomv}
         }
      }
      {if {== {elem $entry 0} {basename blur_restored}}
         {set $blurisbackon
            {elem {find $entry blur_restored} 1}
         }
      }
      {if {== {elem $entry 0} {basename crust_restored}}
         {set $crustisbackon
            {elem {find $entry crust_restored} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_blackmenu}}
         {if {== {elem {find $entry mod_blackmenu} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_blackmenu}
         }
      }
	   {if {== {elem $entry 0} {basename mod_nointro}}
         {if {== {elem {find $entry mod_nointro} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nointro}
         }
      }
      {if {== {elem $entry 0} {basename mod_nosfx}}
         {if {== {elem {find $entry mod_nosfx} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nosfx}
         }
      }
      {if {== {elem $entry 0} {basename mod_auto_kick}}
         {if {== {elem {find $entry mod_auto_kick} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_auto_kick}
         }
      }
      {if {== {elem $entry 0} {basename mod_fcclip}}
         {if {== {elem {find $entry mod_fcclip} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_fcclip}
         }
      }
      {if {== {elem $entry 0} {basename mod_nojurgen}}
         {if {== {elem {find $entry mod_nojurgen} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nojurgen}
         }
      }
      {if {== {elem $entry 0} {basename mod_synced_track_speeds}}
         {if {== {elem {find $entry mod_synced_track_speeds} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_synced_track_speeds}
         }
      }
      {if {== {elem $entry 0} {basename mod_nopause}}
         {if {== {elem {find $entry mod_nopause} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nopause}
         }
      }
      {if {== {elem $entry 0} {basename mod_skipsavemsg}}
         {if {== {elem {find $entry mod_skipsavemsg} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_skipsavemsg}
         }
      }
      {if {== {elem $entry 0} {basename mod_doublespeed}}
         {if {== {elem {find $entry mod_doublespeed} 1} 1}
            {unless {modifier_mgr is_modifier_active mod_doublespeed}
               {modifier_mgr toggle_modifier_enabled mod_doublespeed}
            }
         }
      }
      {if {== {elem $entry 0} {basename mod_dx_showbpm}}
         {if {== {elem {find $entry mod_dx_showbpm} 1} 1}
            {unless {modifier_mgr is_modifier_active mod_dx_showbpm}
               {modifier_mgr toggle_modifier_enabled mod_dx_showbpm}
            }
         }
      }
      {if {== {elem $entry 0} {basename mod_dx_no_overdrive}}
         {if {== {elem {find $entry mod_dx_no_overdrive} 1} 1}
            {unless {modifier_mgr is_modifier_active mod_dx_no_overdrive}
               {modifier_mgr toggle_modifier_enabled mod_dx_no_overdrive}
            }
         }
      }
   }
)
#define INIT_MOD_WRITER
(
   {write_file MOD_FILE_PATH
      {array
         (
            (mod_doublespeed
              (mod_doublespeed {modifier_mgr is_modifier_active mod_doublespeed})
            )
            (mod_staticfills
               (mod_staticfills {modifier_mgr is_modifier_active mod_staticfills})
            )
            (mod_chord_numbers
               (mod_chord_numbers {modifier_mgr is_modifier_active mod_chord_numbers})
            )
            (mod_nohud
               (mod_nohud {modifier_mgr is_modifier_active mod_nohud})
            )
            (mod_miss_sounds
               (mod_miss_sounds {! {modifier_mgr is_modifier_active mod_miss_sounds}}) ;swapped TRUE/FALSE due to modifier being on by default
            )
            (mod_songtitle
               (mod_songtitle {modifier_mgr is_modifier_active mod_songtitle})
            )
            (mod_songtitlestats
               (mod_songtitlestats {modifier_mgr is_modifier_active mod_songtitlestats})
            )
            (mod_whammyfx
               (mod_whammyfx {modifier_mgr is_modifier_active mod_whammyfx})
            )
            (mod_songselectnoise
               (mod_songselectnoise {modifier_mgr is_modifier_active mod_songselectnoise})
            )
            (mod_practiceoverdrive
               (mod_practiceoverdrive {modifier_mgr is_modifier_active mod_practiceoverdrive})
            )
            (mod_nolanes
               (mod_nolanes {modifier_mgr is_modifier_active mod_nolanes})
            )
            (mod_rb4lanes
               (mod_rb4lanes {modifier_mgr is_modifier_active mod_rb4lanes})
            )
            (mod_nomv
               (mod_nomv {modifier_mgr is_modifier_active mod_nomv})
            )
            (blur_restored
               (blur_restored $blurisbackon)
            )
            (crust_restored
               (crust_restored $crustisbackon)
            )
            (mod_blackmenu
               (mod_blackmenu {modifier_mgr is_modifier_active mod_blackmenu})
            )
            (mod_nointro
               (mod_nointro {modifier_mgr is_modifier_active mod_nointro})
            )
            (mod_nosfx
               (mod_nosfx {modifier_mgr is_modifier_active mod_nosfx})
            )
            (mod_auto_kick
               (mod_auto_kick {modifier_mgr is_modifier_active mod_auto_kick})
            )
            (mod_fcclip
               (mod_fcclip {modifier_mgr is_modifier_active mod_fcclip})
            )
            (mod_nojurgen
               (mod_nojurgen {modifier_mgr is_modifier_active mod_nojurgen})
            )
            (mod_synced_track_speeds
               (mod_synced_track_speeds {modifier_mgr is_modifier_active mod_synced_track_speeds})
            )
            (mod_nopause
               (mod_nopause {modifier_mgr is_modifier_active mod_nopause})
            )
            (mod_skipsavemsg
               (mod_skipsavemsg {modifier_mgr is_modifier_active mod_skipsavemsg})
            )
            (mod_dx_showbpm
               (mod_dx_showbpm {modifier_mgr is_modifier_active mod_dx_showbpm})
            )
            (mod_dx_no_overdrive
               (mod_dx_no_overdrive {modifier_mgr is_modifier_active mod_dx_no_overdrive})
            )
         )
      }
   }
)
#define INIT_VAL_READER
(
   {foreach $entry {read_file VAL_FILE_PATH}
      {if {== {elem $entry 0} {basename mic_vols}}
         {set $mic_vol_1
            {elem {find $entry mic_vols} 1}
         }
         {set $mic_vol_2
            {elem {find $entry mic_vols} 2}
         }
         {set $mic_vol_3
            {elem {find $entry mic_vols} 3}
         }
      }
      {if {== {elem $entry 0} {basename default_slot0}}
         {set $default_slot0
            {elem {find $entry default_slot0} 1}
         }
      }
      {if {== {elem $entry 0} {basename default_slot1}}
         {set $default_slot1
            {elem {find $entry default_slot1} 1}
         }
      }
      {if {== {elem $entry 0} {basename default_slot2}}
         {set $default_slot2
            {elem {find $entry default_slot2} 1}
         }
      }
      {if {== {elem $entry 0} {basename default_slot3}}
         {set $default_slot3
            {elem {find $entry default_slot3} 1}
         }
      }
   }
)
#define INIT_VAL_WRITER
(
   {write_file VAL_FILE_PATH
      {array
         (
            (mic_vols
               (mic_vols {profile_mgr get_mic_vol 0} {profile_mgr get_mic_vol 1} {profile_mgr get_mic_vol 2})
            )
            (default_slot0
               (default_slot0 $default_slot0)
            )
            (default_slot1
               (default_slot1 $default_slot1)
            )
            (default_slot2
               (default_slot2 $default_slot2)
            )
            (default_slot3
               (default_slot3 $default_slot3)
            )
         )
      }
   }
)