;#define FORCE_PAD (1) ;forces normal controllers to act as guitar controllers for pad play
;#define PAD_IS_ACTUAL_GUITAR (1)
;#define STOCK_PAD (1) ;restores ghwt drums and rock revolution mapping on ps3
;#define RB3E (1) ;mod to test RB3e gates
#define CUSTOMSOURCE (1) ;we can use custom sources
; #define KEYS_ENABLED (1); toggle this for legacy key upgrades
;#define STORE_ENABLED (1) ;show music store on main menu
#define BLACK_VENUE
(none)
#define SMALL_CLUB_01
(small_club_01)
#define SMALL_CLUB_02
(small_club_02)
#define SMALL_CLUB_03
(small_club_03)
#define SMALL_CLUB_04
(small_club_04)
#define SMALL_CLUB_05
(small_club_05)
#define SMALL_CLUB_06
(small_club_06)
#define SMALL_CLUB_10
(small_club_10)
#define SMALL_CLUB_11
(small_club_11)
#define SMALL_CLUB_13
(small_club_13)
#define SMALL_CLUB_14
(small_club_14)
#define SMALL_CLUB_15
(small_club_15)
#define BIG_CLUB_01
(big_club_01)
#define BIG_CLUB_02
(big_club_02)
#define BIG_CLUB_04
(big_club_04)
#define BIG_CLUB_05
(big_club_05)
#define BIG_CLUB_06
(big_club_06)
#define BIG_CLUB_07
(big_club_07)
#define BIG_CLUB_08
(big_club_08)
#define BIG_CLUB_09
(big_club_09)
#define BIG_CLUB_10
(big_club_10)
#define BIG_CLUB_11
(big_club_11)
#define BIG_CLUB_12
(big_club_12)
#define BIG_CLUB_13
(big_club_13)
#define BIG_CLUB_14
(big_club_14)
#define BIG_CLUB_15
(big_club_15)
#define BIG_CLUB_17
(big_club_17)
#define ARENA_01
(arena_01)
#define ARENA_02
(arena_02)
#define ARENA_03
(arena_03)
#define ARENA_04
(arena_04)
#define ARENA_06
(arena_06)
#define ARENA_07
(arena_07)
#define ARENA_10
(arena_10)
#define ARENA_11
(arena_11)
#define ARENA_12
(arena_12)
#define FESTIVAL_01
(festival_01)
#define FESTIVAL_02
(festival_02)
#define VIDEO_01
(video_01)
#define VIDEO_02
(video_02)
#define VIDEO_03
(video_03)
#define VIDEO_04
(video_04)
#define VIDEO_05
(video_05)
#define VIDEO_06
(video_06)
#define VIDEO_07
(video_07)
#define ALL_VENUES
(small_club_01 small_club_02 small_club_03 small_club_04 small_club_05 small_club_06 small_club_10 small_club_11 small_club_13 small_club_14 small_club_15 big_club_01 big_club_02 big_club_04 big_club_05 big_club_06 big_club_07 big_club_08 big_club_09 big_club_10 big_club_11 big_club_12 big_club_13 big_club_14 big_club_15 big_club_17 arena_01 arena_02 arena_03 arena_04 arena_06 arena_07 arena_10 arena_11 arena_12 festival_01 festival_02)
#define DX_ALL_BOTS_ENABLED
(
   {&& 
      $dx_bot_1
      {&&
         {&&
            $dx_bot_2
            $dx_bot_3
         }
         {&&
            $dx_bot_4
            $dx_bot_5
         }
      }
   }
)
#define DX_BOT_OVERDRIVE_HANDLER
(
   {if {&& $dx_bot_overdrive {! DX_ALL_BOTS_ENABLED}}
      {do
         {set $dx_tmp FALSE}
         {beatmatch foreach_active_player $player
            {if {$player is_deploying} {set $dx_tmp TRUE}}
         }
         {if {&& {>= {beatmatch num_active_players} 1} $dx_bot_1}
            {set $player {beatmatch active_player 0}}
            {if $dx_tmp {$player deploy_if_possible}}
            {if {>= {$player band_energy} 1} {$player deploy_if_possible}}
         }
         {if {&& {>= {beatmatch num_active_players} 2} $dx_bot_2}
            {set $player {beatmatch active_player 1}}
            {if $dx_tmp {$player deploy_if_possible}}
            {if {>= {$player band_energy} 1} {$player deploy_if_possible}}
         }
         {if {&& {>= {beatmatch num_active_players} 3} $dx_bot_3}
            {set $player {beatmatch active_player 2}}
            {if $dx_tmp {$player deploy_if_possible}}
            {if {>= {$player band_energy} 1} {$player deploy_if_possible}}
         }
         {if {&& {>= {beatmatch num_active_players} 4} $dx_bot_4}
            {set $player {beatmatch active_player 3}}
            {if $dx_tmp {$player deploy_if_possible}}
            {if {>= {$player band_energy} 1} {$player deploy_if_possible}}
         }
         {if {&& {>= {beatmatch num_active_players} 5} $dx_bot_5}
            {set $player {beatmatch active_player 4}}
            {if $dx_tmp {$player deploy_if_possible}}
            {if {>= {$player band_energy} 1} {$player deploy_if_possible}}
         }
      }
   }
)
#define DX_ROLL_INTERVAL_COMMON
(
   {if_else {modifier_mgr is_modifier_active mod_nolanes}
      -100
      0
   }
   {if_else {modifier_mgr is_modifier_active mod_nolanes}
      -100
      0
   }
   {if_else {modifier_mgr is_modifier_active mod_nolanes}
      -100
      {if_else {modifier_mgr is_modifier_active mod_rb4lanes}
         190
         165
      }
   }
   {if_else {modifier_mgr is_modifier_active mod_nolanes}
      -100
      {if_else {modifier_mgr is_modifier_active mod_rb4lanes}
         190
         165
      }
   }
)
#define DX_SET_SPEEDS
(
   {unless
      {||
         {gamemode in_mode pro_song_lessons_keyboard} {gamemode in_mode pro_song_lessons_real_guitar}
         {gamemode in_mode pro_song_lessons_real_bass} {gamemode in_mode drum_freestyle}
         {gamemode in_mode trainer} {gamemode in_mode trainer_drums} {gamemode in_mode trainer_pro_drums}
         {gamemode in_mode trainer_real_guitar} {gamemode in_mode trainer_pro_keyboard}
         #ifdef HX_XBOX {gamemode in_mode audition} #endif {&& {gamemode in_mode practice} {> {gamecfg get practice_speed} 0}}
      }
      {if {is_leader_local} {session send_msg_to_all {` (beatmatch set_music_speed {, $speedmod}) kNetReliable}}}
      {beatmatch set_music_speed $speedmod}
   }
)
#define DX_ADDED_SOURCES
(
   (kFilterSource rb1_dlc)
   (kFilterSource rb3_dlc)
   (kFilterSource rb4_dlc)
   (kFilterSource rb3dlc)
   (kFilterSource rb4dlc)
   (kFilterSource rbtp_acdc)
   (kFilterSource rbtp_classic_rock)
   (kFilterSource rbtp_country_1)
   (kFilterSource rbtp_country_2)
   (kFilterSource rbtp_metal)
   (kFilterSource rbtp_vol_1)
   (kFilterSource rbtp_vol_2)
   (kFilterSource beatles)
   (kFilterSource rb_blitz)
)
#define DX_ADDED_UGC
(
   (kFilterSource ugc1)
   (kFilterSource ugc2)
   (kFilterSource ugc_plus)
)

#define GEMCOLOR_SET
(green red yellow blue orange)
#define DRUMCOLOR_SET
(red yellow blue green)
#define NORMALGEM_SET
(gem_green.wid gem_red.wid gem_yellow.wid gem_blue.wid gem_orange.wid star_gem.wid)
#define HOPOGEM_SET
(gem_green_hopo.wid gem_red_hopo.wid gem_yellow_hopo.wid gem_blue_hopo.wid gem_orange_hopo.wid star_hopo.wid)
#define KICK_SET
(gem_kick.wid star_kick.wid)
#define DRUMGEM_SET
(drum_red.wid drum_yellow.wid drum_blue.wid drum_green.wid drum_star.wid)
#define CYM_SET
(cymbal_gem_red.wid cymbal_gem_yellow.wid cymbal_gem_blue.wid cymbal_gem_green.wid cymbal_gem_star.wid)
#define DRUMGEM_SLOT1
(
   {elem (DRUMGEM_SET)
      {if_else {modifier_mgr is_modifier_active mod_mhx_color_shuffle}
         {random_int 0 4}
         $drum1_color
      }
   }
)
#define DRUMGEM_SLOT2
(
   {elem (DRUMGEM_SET)
      {if_else {modifier_mgr is_modifier_active mod_mhx_color_shuffle}
         {random_int 0 4}
         $drum2_color
      }
   }
)
#define DRUMGEM_SLOT3
(
   {elem (DRUMGEM_SET)
      {if_else {modifier_mgr is_modifier_active mod_mhx_color_shuffle}
         {random_int 0 4}
         $drum3_color
      }
   }
)
#define DRUMGEM_SLOT4
(
   {elem (DRUMGEM_SET)
      {if_else {modifier_mgr is_modifier_active mod_mhx_color_shuffle}
         {random_int 0 4}
         $drum4_color
      }
   }
)
#define CYMGEM_SLOT1
(
   {elem (CYM_SET)
      {if_else {modifier_mgr is_modifier_active mod_mhx_color_shuffle}
         {random_int 0 4}
         $cym1_color
      }
   }
)
#define CYMGEM_SLOT2
(
   {elem (CYM_SET)
      {if_else {modifier_mgr is_modifier_active mod_mhx_color_shuffle}
         {random_int 0 4}
         $cym2_color
      }
   }
)
#define CYMGEM_SLOT3
(
   {elem (CYM_SET)
      {if_else {modifier_mgr is_modifier_active mod_mhx_color_shuffle}
         {random_int 0 4}
         $cym3_color
      }
   }
)
#define CYMGEM_SLOT4
(
   {elem (CYM_SET)
      {if_else {modifier_mgr is_modifier_active mod_mhx_color_shuffle}
         {random_int 0 4}
         $cym4_color
      }
   }
)
#define KICKGEM_SLOT
(
   {elem
      (KICK_SET)
      $kick_color
   }
)
#define DX_SLOT_COLORS
(
   {elem (GEMCOLOR_SET)
      {if_else {modifier_mgr is_modifier_active mod_mhx_color_shuffle}
         {random_int 0 5}
         $sus1_color
      }
   }
   {elem (GEMCOLOR_SET)
      {if_else {modifier_mgr is_modifier_active mod_mhx_color_shuffle}
         {random_int 0 5}
         $sus2_color
      }
   }
   {elem (GEMCOLOR_SET)
      {if_else {modifier_mgr is_modifier_active mod_mhx_color_shuffle}
         {random_int 0 5}
         $sus3_color
      }
   }
   {elem (GEMCOLOR_SET)
      {if_else {modifier_mgr is_modifier_active mod_mhx_color_shuffle}
         {random_int 0 5}
         $sus4_color
      }
   }
   {elem (GEMCOLOR_SET)
      {if_else {modifier_mgr is_modifier_active mod_mhx_color_shuffle}
         {random_int 0 5}
         $sus5_color
      }
   }
)