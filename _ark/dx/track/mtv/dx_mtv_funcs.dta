{func
   dx_author_finder_var_reset
   {set $song_title FALSE} {set $namevar FALSE} {set $artistvar FALSE} {set $yearvar FALSE} {set $albumvar FALSE} {set $rankvar FALSE} {set $mastervar TRUE}
   {set $authorvar FALSE} {set $stringsauthorvar FALSE} {set $keysauthorvar FALSE} {set $genrevar FALSE} {set $subgenrevar FALSE} {set $sourcevar FALSE}
   {set $dx_readdtaonce FALSE} {set $dx_mtv_dta_reader_once FALSE} {set $dx_mtv_formatted_once FALSE} {set $dx_mtv_written_once FALSE} {set $dx_mtv_read_once FALSE} {set $dx_hmxcheckedonce FALSE}
   {set $dx_path_failed FALSE} {set $dx_vocal_tonic_note_var FALSE} {set $dx_song_tonality_var FALSE} {set $dx_song_key_var FALSE}
   {set $guitarrankvar -1} {set $bassrankvar -1} {set $drumrankvar -1} {set $keysrankvar -1} {set $vocalsrankvar -1} {set $bandrankvar -1}
   {set $real_guitarrankvar -1} {set $real_bassrankvar -1} {set $real_keysrankvar -1}
   {set $actual_guitarrankvar -1} {set $actual_bassrankvar -1} {set $actual_keysrankvar -1} {set $actual_drumrankvar -1} {set $actual_vocalsrankvar -1} {set $actual_bandrankvar -1}
   {set $actual_real_guitarrankvar -1} {set $actual_real_bassrankvar -1} {set $actual_real_keysrankvar -1}
}
{func
   dx_rank_var_finder
   ($instrument $rank_threshold_0 $rank_threshold_1 $rank_threshold_2 $rank_threshold_3 $rank_threshold_4 $rank_threshold_5)
   {if {&& {> {size $songdtareader} 0} $instrument}
      {if {find_exists $songdtareader rank $instrument}
         {set $var_actual_rankvar {elem {find $songdtareader rank $instrument} 1}}
      }
      {if $var_actual_rankvar
         {cond
            ({< $var_actual_rankvar $rank_threshold_0}
               {set $var_instrument_rankvar 0})
            ({&& {>= $var_actual_rankvar $rank_threshold_0} {< $var_actual_rankvar $rank_threshold_1}}
               {set $var_instrument_rankvar 1})
            ({&& {>= $var_actual_rankvar $rank_threshold_1} {< $var_actual_rankvar $rank_threshold_2}}
               {set $var_instrument_rankvar 2})
            ({&& {>= $var_actual_rankvar $rank_threshold_2} {< $var_actual_rankvar $rank_threshold_3}}
               {set $var_instrument_rankvar 3})
            ({&& {>= $var_actual_rankvar $rank_threshold_3} {< $var_actual_rankvar $rank_threshold_4}}
               {set $var_instrument_rankvar 4})
            ({&& {>= $var_actual_rankvar $rank_threshold_4} {< $var_actual_rankvar $rank_threshold_5}}
               {set $var_instrument_rankvar 5})
            ({>= $var_actual_rankvar $rank_threshold_5}
               {set $var_instrument_rankvar 6})
         }
      }
      {switch $instrument
         (guitar {set $guitarrankvar $var_instrument_rankvar})
         (bass {set $bassrankvar $var_instrument_rankvar})
         (drum {set $drumrankvar $var_instrument_rankvar})
         (vocals {set $vocalsrankvar $var_instrument_rankvar})
         (band {set $bandrankvar $var_instrument_rankvar})
         (keys {set $keysrankvar $var_instrument_rankvar})
         (real_keys {set $real_keysrankvar $var_instrument_rankvar})
         (real_guitar {set $real_guitarrankvar $var_instrument_rankvar})
         (real_bass {set $real_bassrankvar $var_instrument_rankvar})
      }
   }
}
{func
   dx_current_section_fetcher
   ($enabled)
   {if {&& $dx_mtvup $enabled}
      {set_this {coop_track_panel find mtv_overlay}}
      {$current_section_label set_token_fmt {beatmatch get_section_at_ms {{beatmatch main_performer} progress_ms}}}
   }
}
{func
   dx_bpm_fetcher
   ($enabled)
   {if {&& $enabled $dx_mtvup}
      {set $dx_tmp {int {+ 0.5 {seconds_to_beat {/ {beatmatch get_song_ms} 1000}}}}}
      {set $dx_bpm_counter {* {* 60 {/ 1 {- {beat_to_seconds {+ $dx_tmp 1}} {beat_to_seconds $dx_tmp}}}} $speedmod}}
      {set_this {coop_track_panel find mtv_overlay}}
      {$bpm_label set_token_fmt bpm_report $dx_bpm_counter}
   }
}
{func
   dx_acceleration_mode
   ($enabled $miss_or_hit)
   {if $enabled ;check if we are in acceleration mode
      {switch $miss_or_hit
         (0
            {unless {<= $speedmod $leaderspeed}
               {set $speedmod {- $speedmod 0.004}}
            }
         )
         (1
            {unless {>= $speedmod $speedmod_cap}
               {set $speedmod {+ $speedmod 0.002}}
            }
         )
      }
      {beatmatch set_music_speed $speedmod}
      {set_this {coop_track_panel find mtv_overlay}}
      {$acceleration_label set_token_fmt speed_string_mode {{song_mgr get_meta_data {meta_performer song}} title} {localize mod_fastermode} {int {'+' 0.5 {'*' $speedmod 100}}}}
   }
}