{func
   dx_track_bre_reset
   ;{dx_log_writer info {sprint "func: dx_track_bre_reset"}}
   ;{dx_log_writer info
   ;   {sprintf "Executed dx_track_bre_reset - time: %.4fms"
         {time
            {if {&& {modifier_mgr is_modifier_active mod_nobre} $imabigboy} ;check if we have no bre active, and we havent restarted already on this song
               {if {! $dx_already_restarted} ;cheap attempt to fix the "notes too quick bug" by restarting once automatically on initial song start, this will at least work in black bg
                  {do ;do
                     {set $imabigboy FALSE} ;tell the logic we have restarted once to switch to expert
                     {set $dx_already_restarted TRUE} ;also tell the logic we
                     {{{beatmatch active_player 0} get_user} set_difficulty kDifficultyExpert} ;since we have entered the track on easy, set the player to expert to enable no bre behavior
                     {game_restart} ;quick restart the song
                  }
               }
            }
         }
   ;   }
   ;}
}
{func
   dx_track_streak_reset
   ;{dx_log_writer info {sprint "func: dx_track_streak_reset"}}
   ;{dx_log_writer info
   ;   {sprintf "Executed dx_track_streak_reset - time: %.4fms"
         {time
            {if
               {&&
                  {exists gamemode}
                  {! {gamemode in_mode practice}}
                  {! {gamemode in_mode trainer}}
               }
               {dx_toggle_fail_feedback}
               {dx_game_hud_label dx_hud_label_band_streak $dx_hud_band_streak_text_size $dx_hud_band_streak_text_font $dx_hud_band_streak_text_alignment $dx_hud_band_streak_text_kerning $dx_hud_band_streak_text_x $dx_hud_band_streak_text_z $dx_hud_band_streak_text_y $dx_hud_band_streak_text_r $dx_hud_band_streak_text_g $dx_hud_band_streak_text_b TRUE}
               {{coop_track_panel find scoreboard} set_showing $dx_score_meter_visibility}
            }
         }
   ;   }
   ;}
}
{func
   dx_bassgroove_reset
   {beatmatch foreach_active_player $player
      {unless {== {$player instrument} vocals}
         {set_this {find_obj DX_GEMTRACKDIR player_feedback}}
         {bass_super_streak.lbl set_token_fmt bass_streak}
      }
   }
}
{func
   dx_reset_time_remaining_position
   {unless $dx_fetched_time_remaining_pos ;gate this block to run once
      {set $dx_fetched_time_remaining_pos TRUE}
      {set $dx_stored_time_remaining_pos {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} get_local_pos_index 2}} ;store the base position
      {set $dx_song_label_scale_x {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} get_local_scale_index 0}}
      {set $dx_song_label_scale_y {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} get_local_scale_index 2}}
   }
   {if {|| {== $dx_time_remaining down} {== $dx_time_remaining up}}
      {{{coop_track_panel find scoreboard} find tracker_band_display} iterate Mesh $m {$m set_showing TRUE}} ;ensure that it is visible at a base level
      {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_middle.lbl} set_showing TRUE} ;ensure that it is visible at a base level
      #ifdef HX_WII ;the label is too big on wii so we shrink it
      {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} set_local_scale_index 0 {- $dx_song_label_scale_x 0.50}}
      {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} set_local_scale_index 2 {- $dx_song_label_scale_y 0.50}}
      #endif
      {cond
         ({&& {|| $dx_active_vocals {! $dx_time_remaining_on_top}} {== $dx_streak_counter single} {> $dx_num_active_instruments 1}} ;handle this stupid case specifically
            {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} set_local_pos_index 2 {+ $dx_stored_time_remaining_pos 1.4}}
         )
         ({&& {! $dx_time_remaining_on_top} {|| {== $dx_streak_counter single} {== $dx_streak_counter multi}}} ;if vocals are active, move the label to the bottom again because it looks bad on top
            {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} set_local_pos_index 2 $dx_stored_time_remaining_pos}
         )
         ({&& {|| {== $dx_streak_counter single} {== $dx_streak_counter multi}} $dx_active_vocals} ;if vocals are active, move the label to the bottom again because it looks bad on top
            {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} set_local_pos_index 2 $dx_stored_time_remaining_pos}
         )
         ({&& {! $dx_time_remaining_on_top} {== $dx_streak_counter off}} ;if vocals are active, move the label to the bottom but slightly up to account for missing streak
            {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} set_local_pos_index 2 {+ $dx_stored_time_remaining_pos 1.4}}
         )
         ({&& {== $dx_streak_counter off} $dx_active_vocals} ;if vocals are active, move the label to the bottom but slightly up to account for missing streak
            {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} set_local_pos_index 2 {+ $dx_stored_time_remaining_pos 1.4}}
         )
         ({&& $dx_time_remaining_on_top {! $dx_active_vocals}} ;if we need to move the label to the top
            {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} set_local_pos_index 2 {+ $dx_stored_time_remaining_pos 4.66}} ;move it up
         )
      }
   }
   {if {|| {== $dx_streak_counter off} {&& {== $dx_streak_counter single} {> $dx_num_active_instruments 1}}}
      {do
         {{{coop_track_panel find scoreboard} find tracker_band_display} iterate Mesh $m {$m set_showing FALSE}} ;ensure that it is visible at a base level
         {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_middle.lbl} set_showing FALSE} ;ensure that it is visible at a base level
      }
   }
   {if {|| {gamemode in_mode tour} {gamemode in_mode campaign}}
      {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} set_local_pos_index 2 $dx_stored_time_remaining_pos}
      {set $dx_current_time_remaining_pos {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_top.lbl} get_local_pos_index 2}}
   }
}
{func
   dx_track_fc_reset
   {if $dx_fc_glow
      {beatmatch foreach_active_player $player ;dx - add our custom fc checking callbacks to the currently loaded player
         {unless {== {$player instrument} vocals}
            {set_this {find_obj DX_GEMTRACKDIR streak_meter}}
            {peak_state.trig trigger}
            {star_deploy.trig trigger}
         }
      }
   }
}
{func
   dx_note_streak_remover
   ($player $instrument)
   {unless {== {$player instrument} vocals}
      {if {== {$player instrument} $instrument}
         {set_this {find_obj DX_GEMTRACKDIR player_feedback}}
         {super_streak_end.trig trigger}
      }
   }
}
{func
   dx_poll_inst_info
   ($instrument)
   {switch $instrument
      (guitar
         {set $polled_gems_miss $num_gems_miss_guitar}
         {set $polled_gems_pass $num_gems_pass_guitar}
         {set $polled_gems_combo $num_gems_combo_guitar}
      )
      (bass
         {set $polled_gems_miss $num_gems_miss_bass}
         {set $polled_gems_pass $num_gems_pass_bass}
         {set $polled_gems_combo $num_gems_combo_bass}
      )
      (real_guitar
         {set $polled_gems_miss $num_gems_miss_real_guitar}
         {set $polled_gems_pass $num_gems_pass_real_guitar}
         {set $polled_gems_combo $num_gems_combo_real_guitar}
      )
      (real_bass
         {set $polled_gems_miss $num_gems_miss_real_bass}
         {set $polled_gems_pass $num_gems_pass_real_bass}
         {set $polled_gems_combo $num_gems_combo_real_bass}
      )
      (keys
         {set $polled_gems_miss $num_gems_miss_keys}
         {set $polled_gems_pass $num_gems_pass_keys}
         {set $polled_gems_combo $num_gems_combo_keys}
      )
      (real_keys
         {set $polled_gems_miss $num_gems_miss_real_keys}
         {set $polled_gems_pass $num_gems_pass_real_keys}
         {set $polled_gems_combo $num_gems_combo_real_keys}
      )
      (drum
         {set $polled_gems_miss $num_gems_miss_drum}
         {set $polled_gems_pass $num_gems_pass_drum}
         {set $polled_gems_combo $num_gems_combo_drum}
      )
      (real_drum
         {set $polled_gems_miss $num_gems_miss_real_drum}
         {set $polled_gems_pass $num_gems_pass_real_drum}
         {set $polled_gems_combo $num_gems_combo_real_drum}
      )
   }
}
; displays the streak of each individual instrument at the bottom of each track
{func
   dx_indv_note_streak
   ($enabled $instrument)
   {if $enabled
      {beatmatch foreach_active_player $player
         {if {== {$player instrument} $instrument}
            {set_this {find_obj DX_GEMTRACKDIR band_power_meter}}
            {set $track_label_inst {sprint "dx_track_label_streak" {{$player get_user} get_slot_num} ".lbl"}}
            {dx_poll_inst_info $instrument}
            {if_else {== {+ $polled_gems_miss $polled_gems_pass} 0}
               {dx_track_label_streak dx_track_label_streak $dx_highway_streak_text_size $dx_highway_streak_text_font $dx_highway_streak_text_alignment $dx_highway_streak_text_kerning $dx_gold_ui_r $dx_gold_ui_g $dx_gold_ui_b FALSE}
               {dx_track_label_streak dx_track_label_streak $dx_highway_streak_text_size $dx_highway_streak_text_font $dx_highway_streak_text_alignment $dx_highway_streak_text_kerning $dx_highway_streak_text_r $dx_highway_streak_text_g $dx_highway_streak_text_b FALSE}
            }
            {if_else {> $polled_gems_combo {if_else $dx_highway_streak_text_gh3_delay 24 0}}
               {$track_label_inst set_token_fmt dx_indv_combo $polled_gems_combo}
               {$track_label_inst set_token_fmt os_blnk}
            }
         }
      }
   }
}
{func
   dx_sanitize_player_name
   ($name)
   ;remove gross ps3 local user tags
   #ifdef HX_PS3
   {search_replace $name " (1)" "" $name}
   {search_replace $name " (2)" "" $name}
   {search_replace $name " (3)" "" $name}
   {search_replace $name " (4)" "" $name}
   {search_replace $name " (5)" "" $name}
   {search_replace $name " (6)" "" $name}
   {search_replace $name " (7)" "" $name}
   {search_replace $name "*" "" $name}
   #endif
   {set $dx_current_player_name_sanitized $name}
}
{func
   dx_get_localized_diff
   ($instrument)
   {localize
      {sprint
         "dx_diff_" 
         {switch $instrument
            (guitar $guitarrankvar)
            (bass $bassrankvar)
            (drum $drumrankvar)
            (keys $keysrankvar)
            (real_guitar $real_guitarrankvar)
            (real_bass $real_bassrankvar)
            (real_drum $drumrankvar)
            (real_keys $real_keysrankvar)
         }
      }
   }
}
{func
   dx_set_player_names
   ($enabled)
   {if $enabled
      {beatmatch foreach_active_player $player
         {if {!= {$player instrument} vocals}
            {dx_sanitize_player_name {get_user_name_from_player $player}}
            (cond
               ({gamemode in_mode trainer} kDataUnhandled) ;do nothing in training mode
               ({&& {! $dx_path_failed} $dx_author_finder_is_enabled}
                  ;set up yarg diff rings on player intro icon
                  {set_this {find_obj DX_GEMTRACKDIR player_intro}}
                  {player_name.lbl set alt_style_enabled TRUE}
                  {player_name.lbl set alt_font_resource_name instruments_icons_rings}
                  {player_name.lbl set markup TRUE}
                  {player_name.lbl set width 100}
                  {player_name.lbl set height 100}
                  {player_name.lbl set alt_text_size 3.3}
                  {player_name.lbl set alt_z_offset 0}
                  {if {! $got_playericon_pos}
                     {set $got_playericon_pos TRUE}
                     {set $player_icon_pos {icon.lbl get_local_pos_index 0}}
                  }
                  {icon.lbl set_local_pos_index 0 {+ $player_icon_pos 0.01}}
                  {player_name.lbl set_token_fmt
                     {sprint
                        {if_else $dx_highway_username_text ;dont show username twice if track username is enabled
                           {localize os_blnk}
                           $dx_current_player_name_sanitized
                        }
                        "\n\n"
                        {dx_get_localized_diff {$player instrument}}
                     }
                  }
               )
               ;dont put rings at all
               {player_name.lbl set_token_fmt stringify $dx_current_player_name_sanitized}
            )
         }
      }
   }
}
; shows the username of each player at the bottom of their respective highways
{func
   dx_show_track_username
   {if $dx_highway_username_text
      {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
         {unless {== {$player instrument} vocals}
            {dx_sanitize_player_name {{$player get_user} get_user_name}}
            {dx_track_label dx_track_label_username $dx_highway_username_text_size $dx_highway_username_text_font $dx_highway_username_text_alignment $dx_highway_username_text_kerning $dx_highway_username_text_x $dx_highway_username_text_y $dx_highway_username_text_r $dx_highway_username_text_g $dx_highway_username_text_b FALSE}
            {dx_track_label_instrument dx_track_label_instrument {$player instrument} {{$player get_user} get_slot_num} TRUE}
            {set_this {find_obj DX_GEMTRACKDIR}}
            {set $this_track_username_label {sprint "dx_track_label_username" {{$player get_user} get_slot_num} ".lbl"}}
            {if_else $dx_current_player_name_sanitized
               {$this_track_username_label set_token_fmt {sprint $dx_current_player_name_sanitized}}
               {$this_track_username_label set_token_fmt os_blnk}
            }
         }
      }
   }
}
; whether not to darken the highway of remote players
{func
   dx_dim_remote_players
   {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
      {unless {== {$player instrument} vocals}
         {set_this {find_obj DX_GEMTRACKDIR}}
         {if_else {{$player get_user} is_local}
            {network_local.trig trigger}
            {if_else $dx_dim_remote_players
               {network_remote.trig trigger}
               {network_local.trig trigger}
            }
         }
      }
   }
}
; shows the current overdrive of each player at the bottom of their respective highways
{func
   dx_show_user_overdrive
   {if $dx_highway_overdrive_text
      {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
         {unless {== {$player instrument} vocals}
            {if_else {|| {$player is_deploying} {>= {$player band_energy} 0.50}}
               {dx_track_label dx_track_label_overdrive $dx_highway_overdrive_text_size $dx_highway_overdrive_text_font $dx_highway_overdrive_text_alignment $dx_highway_overdrive_text_kerning $dx_highway_overdrive_text_x $dx_highway_overdrive_text_y $dx_gold_ui_r $dx_gold_ui_g $dx_gold_ui_b FALSE}
               {dx_track_label dx_track_label_overdrive $dx_highway_overdrive_text_size $dx_highway_overdrive_text_font $dx_highway_overdrive_text_alignment $dx_highway_overdrive_text_kerning $dx_highway_overdrive_text_x $dx_highway_overdrive_text_y $dx_highway_overdrive_text_r $dx_highway_overdrive_text_g $dx_highway_overdrive_text_b FALSE}
            }
            {if_else {>= {$player band_energy} 0.01}
               {{{find_obj DX_GEMTRACKDIR} find {sprint "dx_track_label_overdrive" {{$player get_user} get_slot_num} ".lbl"}} set_token_fmt dx_overdrive_report {* {$player band_energy} 100}}
               {{{find_obj DX_GEMTRACKDIR} find {sprint "dx_track_label_overdrive" {{$player get_user} get_slot_num} ".lbl"}} set_token_fmt os_blnk}
            }
         }
      }
   }
}
; prep od ready popup
{func
   dx_calc_overdrive
   ($instrument)
   {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
      {unless {== {$player instrument} vocals}
         {if {== {$player instrument} $instrument}
            ;fire popup once and then gate firing again until drained
            {if {>= {$player band_energy} 0.5}
               {switch $instrument
                  (bass {unless $dx_stop_bass_od {dx_od_ready_popup $instrument}} {set $dx_stop_bass_od TRUE})
                  (real_bass {unless $dx_stop_real_bass_od {dx_od_ready_popup $instrument}} {set $dx_stop_real_bass_od TRUE})
                  (guitar {unless $dx_stop_guitar_od {dx_od_ready_popup $instrument}} {set $dx_stop_guitar_od TRUE})
                  (real_guitar {unless $dx_stop_real_guitar_od {dx_od_ready_popup $instrument}} {set $dx_stop_real_guitar_od TRUE})
                  (drum {unless $dx_stop_drum_od {dx_od_ready_popup $instrument}} {set $dx_stop_drum_od TRUE})
                  (real_drum {unless $dx_stop_real_drum_od {dx_od_ready_popup $instrument}} {set $dx_stop_real_drum_od TRUE})
                  (keys {unless $dx_stop_keys_od {dx_od_ready_popup $instrument}} {set $dx_stop_keys_od TRUE})
                  (real_keys {unless $dx_stop_real_keys_od {dx_od_ready_popup $instrument}} {set $dx_stop_real_keys_od TRUE})
               }
            }
            ;once we are drained, allow popups to fire again when ready
            {if {<= {$player band_energy} 0.01}
               {switch $instrument
                  (bass {set $dx_stop_bass_od FALSE})
                  (real_bass {set $dx_stop_real_bass_od FALSE})
                  (guitar {set $dx_stop_guitar_od FALSE})
                  (real_guitar {set $dx_stop_real_guitar_od FALSE})
                  (drum {set $dx_stop_drum_od FALSE})
                  (real_drum {set $dx_stop_real_drum_od FALSE})
                  (keys {set $dx_stop_keys_od FALSE})
                  (real_keys {set $dx_stop_real_keys_od FALSE})
               }
            }
         }
      }
   }
}
; shows an "overdrive ready!" popup when od is ready
{func
   dx_od_ready_popup
   ($instrument)
   {if {&& $dx_od_ready_popups {! {gamemode in_mode trainer}}}
      {do
         {set $dx_bpm {* {* 60 {/ 1 {- {beat_to_seconds {+ {int {+ 0.5 {seconds_to_beat {/ {beatmatch get_song_ms} 1000}}}} 1}} {beat_to_seconds {int {+ 0.5 {seconds_to_beat {/ {beatmatch get_song_ms} 1000}}}}}}}} $speedmod}} ;grab current bpm same way the bpm counter does but not dependent on it
         {set $dx_streak_timer 4} ;fallback if somehow the cond fails to set something
         {cond
            ({< $dx_bpm 100} {set $dx_streak_timer 3})
            ({&& {> $dx_bpm 100} {< $dx_bpm 160}} {set $dx_streak_timer 4})
            ({&& {> $dx_bpm 160} {< $dx_bpm 220}} {set $dx_streak_timer 6})
            ({&& {> $dx_bpm 220} {< $dx_bpm 280}} {set $dx_streak_timer 8})
            ({&& {> $dx_bpm 280} {< $dx_bpm 340}} {set $dx_streak_timer 12})
            ({> $dx_bpm 340} {set $dx_streak_timer 18})
         }
         {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
            {if {&& {!= {$player instrument} vocals} {== {$player instrument} $instrument}}
               {set_this {{find_obj DX_GEMTRACKDIR} find player_feedback}}
               {super_streak_start.trig trigger}
               {bass_super_streak.lbl set_token_fmt dx_overdrive_ready}
               {script_task
                  kTaskBeats
                  (delay $dx_streak_timer)
                  (script {dx_note_streak_remover $player $instrument})
               }
            }
         }
      }
   }
}
; each local player of a session will send their current instrument's track speed to online players
{func
   dx_apply_remote_track_speeds
   {unless {session_mgr is_local}
      {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
         {if {{$player get_user} is_local}
            {switch {$player instrument}
               (guitar
                  {set $remote_trackspeed_guitar FALSE}
                  {session send_msg_to_all {'`' ({set $remote_trackspeed_guitar {',' $trackspeed_guitar}}) kNetReliable}}
               )
               (bass
                  {set $remote_trackspeed_bass FALSE}
                  {session send_msg_to_all {'`' ({set $remote_trackspeed_bass {',' $trackspeed_bass}}) kNetReliable}}
               )
               (real_guitar
                  {set $remote_trackspeed_real_guitar FALSE}
                  {session send_msg_to_all {'`' ({set $remote_trackspeed_real_guitar {',' $trackspeed_real_guitar}}) kNetReliable}}
               )
               (real_bass
                  {set $remote_trackspeed_real_bass FALSE}
                  {session send_msg_to_all {'`' ({set $remote_trackspeed_real_bass {',' $trackspeed_real_bass}}) kNetReliable}}
               )
               ((drum real_drum)
                  {set $remote_trackspeed_drum FALSE}
                  {session send_msg_to_all {'`' ({set $remote_trackspeed_drum {',' $trackspeed_drum}}) kNetReliable}}
               )
               (keys
                  {set $remote_trackspeed_keys FALSE}
                  {session send_msg_to_all {'`' ({set $remote_trackspeed_keys {',' $trackspeed_keys}}) kNetReliable}}
               )
               (real_bass
                  {set $remote_trackspeed_real_keys FALSE}
                  {session send_msg_to_all {'`' ({set $remote_trackspeed_real_keys {',' $trackspeed_real_keys}}) kNetReliable}}
               )
               (vocals kDataUnhandled) ;lol vox
            }
         }
      }
   }
}
{func
   dx_track_configurer
   {if {&& {session is_in_game} $dx_track_config_changed}
      {beatmatch foreach_active_player $player
         {unless {== {$player instrument} vocals}
            {set_this {find_obj DX_GEMTRACKDIR}}
            {$this set_pitch $dx_pitch}
            {$this set_fov $dx_fov}
            {$this set_cam_pos $dx_x_pos $dx_y_pos $dx_z_pos}
         }
      }
   }
}
; used to unhide tracks incase the user quit the last song mid-countdown
{func
   dx_reset_track_meshes
   {set $track_out_0 FALSE}
   {set $track_out_1 FALSE}
   {set $track_out_2 FALSE}
   {set $track_out_3 FALSE}
   {beatmatch foreach_active_player $player
      {unless {== {$player instrument} vocals}
         ;make sure to show the correct rails if the same slot was on a different instrument last song
         {{{find_obj DX_GEMTRACKDIR} find guitar_draw.grp} set showing {|| {== {$player instrument} guitar} {== {$player instrument} bass} {== {$player instrument} keys}}}
         {{{find_obj DX_GEMTRACKDIR} find drum_draw.grp} set showing {|| {== {$player instrument} drum} {== {$player instrument} real_drum}}}
         {{{find_obj DX_GEMTRACKDIR} find keyboard_draw.grp} set showing {== {$player instrument} real_keys}}
         {{{{find_obj DX_GEMTRACKDIR} get star_power_meter} find power_meter.grp} set showing TRUE}
         {{{{find_obj DX_GEMTRACKDIR} get streak_meter} find draw.grp} set showing TRUE}
         {{{{find_obj DX_GEMTRACKDIR} get streak_meter} find streak_meter.grp} set showing TRUE}
         {{{{find_obj DX_GEMTRACKDIR} get streak_meter} find peak_state_sm_mesh.mesh} set showing TRUE}
         {{{{find_obj DX_GEMTRACKDIR} get streak_meter} find peak_state_sm_mesh_counter.mesh} set showing TRUE}
         {{{find_obj DX_GEMTRACKDIR} find overdrive_plane.mesh} set showing TRUE}
         {{{find_obj DX_GEMTRACKDIR} find rig.grp} set_local_pos 0 0 0}
      }
   }
}
{func dx_check_for_high_score
   ($enabled)
   {if $enabled
      {cond
         ($dx_reported_highscore kDataUnhandled) ;do nothing if highscore has been seen or no highscore
         ({|| {> $dx_num_active_instruments 1} {< $current_solo_highscore 10}} kDataUnhandled) ;do nothing if multiplayer or a low highscore
         ({gamemode in_mode qp_coop} ;only run in single player quickplay
            {beatmatch foreach_active_player $player
               {if {&& {{$player get_user} is_local} {> {$player score} $current_solo_highscore}}
                  {set $dx_reported_highscore TRUE}
                  {set_this {coop_track_panel find tracker_broadcast_display}}
                  {$this set_showing TRUE}
                  {band_message.lbl set_showing TRUE}
                  {band_message.lbl set markdown TRUE}
                  {band_message.lbl set alt_style_enabled TRUE}
                  {band_message.lbl set alt_font_resource_name instrument_icons_small}
                  {band_message.lbl set alt_z_offset 0.08}
                  {set $pickadisplay {random_int 0 4}}
                  {switch $pickadisplay
                     (1 {set $picked_display kTrackerChallengeType_Streak})
                     (2 {set $picked_display kTrackerChallengeType_Accuracy})
                     (3 {set $picked_display kTrackerChallengeType_Overdrive})
                     {set $picked_display kTrackerChallengeType_Streak}
                  }
                  {$this set_challenge_type $picked_display}
                  {$this set_display_type kBroadcastTrackerDisplay_BandMessage}
                  {$this show_brief_band_message {sprint {localize {sprint "inst_icon_" {$player instrument}}} {localize dx_highscore_best}}}
               }
            }
         )
         kDataUnhandled
      }
   }
}