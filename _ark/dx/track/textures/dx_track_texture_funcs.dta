#define EXTERNAL_CUSTOM_TEX_PATH_FINDER
(
   #ifdef HX_PS3
   {sprint "GD:/dev_hdd0/game/" DX_TITLE_ID "/USRDIR/custom_textures/" $path "/gen/" $customtex ".png_ps3"}
   #endif
   #ifdef HX_WII
   {sprint "SD:/custom_textures/" $path "/gen/" $customtex ".png_wii"}
   #endif
   #ifdef HX_XBOX
   {sprint "GAME:/custom_textures/" $path "/gen/" $customtex ".png_xbox"}
   #endif
)
#define EXTERNAL_CUSTOM_TEX_PATH
(
   #ifdef HX_PS3
   {$sourcetex set_bitmap {sprint "GD:/dev_hdd0/game/" DX_TITLE_ID "/USRDIR/custom_textures/" $path "/" $customtex ".png"}}
   #endif
   #ifdef HX_WII
   {$sourcetex set_bitmap {sprint "SD:/custom_textures/" $path "/" $customtex ".png"}}
   #endif
   #ifdef HX_XBOX
   {$sourcetex set_bitmap {sprint "GAME:/custom_textures/" $path "/" $customtex ".png"}}
   #endif
)
#define INTERNAL_CUSTOM_TEX_PATH_FINDER
(
   {sprint "dx/custom_textures/" $path "/gen/" $customtex #ifdef HX_PS3 ".png_ps3" #endif #ifdef HX_WII ".png_wii" #endif #ifdef HX_XBOX ".png_xbox" #endif}
)
#define EXTERNAL_CUSTOM_TEX_PATH_FINDER_CATEGORY
(
   #ifdef HX_PS3
   {sprint "GD:/dev_hdd0/game/" DX_TITLE_ID "/USRDIR/custom_textures/" $category "/" $path "/gen/" $customtex ".png_ps3"}
   #endif
   #ifdef HX_WII
   {sprint "GAME:/custom_textures/" $category "/" $path "/gen/" $customtex ".png_wii"}
   #endif
   #ifdef HX_XBOX
   {sprint "GAME:/custom_textures/" $category "/" $path "/gen/" $customtex ".png_xbox"}
   #endif
)
#define EXTERNAL_CUSTOM_TEX_PATH_CATEGORY
(
   
   #ifdef HX_PS3
   {$sourcetex set_bitmap {sprint "GD:/dev_hdd0/game/" DX_TITLE_ID "/USRDIR/custom_textures/" $category "/" $path "/" $customtex ".png"}}
   #endif
   #ifdef HX_WII
   {$sourcetex set_bitmap {sprint "SD:/custom_textures/" $category "/" $path "/" $customtex ".png"}}
   #endif
   #ifdef HX_XBOX
   {$sourcetex set_bitmap {sprint "GAME:/custom_textures/" $category "/" $path "/" $customtex ".png"}}
   #endif
)
#define INTERNAL_CUSTOM_TEX_PATH_FINDER_CATEGORY
(
   {sprint "dx/custom_textures/" $category "/" $path "/gen/" $customtex #ifdef HX_PS3 ".png_ps3" #endif #ifdef HX_WII ".png_wii" #endif #ifdef HX_XBOX ".png_xbox" #endif}
)
{func
   dx_custom_texture_setter
   ($category $path $sourcetex $customtex)
   ;{dx_log_writer insane {sprint "func: dx_custom_texture_setter" " - " $category ", " $path ", " $sourcetex ", " $customtex}}
   ;{dx_log_writer insane
   ;   {sprintf "Executed dx_custom_texture_setter - time: %.4fms"
         {time
            {search_replace $customtex "'" "" $customtex}
            {set $dx_failover_tex FALSE}
            {if {&& {exists beatmatch} $dx_customizer $dx_refresh_beatmatch}
               {set $dx_refresh_beatmatch FALSE}
               {beatmatch set_paused TRUE}
            }
            {unless
               #ifdef _SHIP
               {|| {! {find_exists $customtex}} {== $customtex none}} ;check the texture is not set to default
               #else
               {== $customtex none}
               #endif
               {dx_log_writer insane {sprint "Setting " $sourcetex " to: " $customtex}}
               {if_else $category
                  {if_else {file_exists EXTERNAL_CUSTOM_TEX_PATH_FINDER_CATEGORY}
                     EXTERNAL_CUSTOM_TEX_PATH_CATEGORY
                     {if_else {file_exists INTERNAL_CUSTOM_TEX_PATH_FINDER_CATEGORY}
                        {$sourcetex set_bitmap {sprint "dx/custom_textures/" $category "/" $path "/" $customtex ".png"}}
                        {set $dx_failover_tex TRUE}
                     }
                  }
                  {if_else {file_exists EXTERNAL_CUSTOM_TEX_PATH_FINDER}
                     EXTERNAL_CUSTOM_TEX_PATH
                     {if_else {file_exists INTERNAL_CUSTOM_TEX_PATH_FINDER}
                        {$sourcetex set_bitmap {sprint "dx/custom_textures/" $path "/" $customtex ".png"}}
                        {set $dx_failover_tex TRUE}
                     }
                  }
               }
               {if $dx_failover_tex
                  {if_else $category
                     {$sourcetex set_bitmap {sprint "dx/custom_textures/" $category "/" $path "/rock band 3.png"}}
                     {$sourcetex set_bitmap {sprint "dx/custom_textures/" $path "/rock band 3.png"}}
                  }
               }
               {if {&& {exists beatmatch} $dx_customizer}
                  {beatmatch set_paused FALSE}
               }
            }
         }
   ;   }
   ;}
}
; this function will re-apply the local player's texture setting if it was previously changed by a remote player 
{func
   dx_resync_local_textures
   ($instrument)
   {do
      {dx_log_writer info {sprint "dx_resync_local_textures"}}
      {switch $instrument
         ((kTrackGuitar kTrackRealGuitar)
            {dx_log_writer info {sprint "dx_resync_local_textures: resetting guitar texture to local setting"}}
            {unless {== $dx_highway_guitar $dx_local_highway_guitar}
               {set $dx_highway_guitar $dx_local_highway_guitar}
               {set $dx_highway_guitar_needs_reset TRUE}
            }
            {unless {== $dx_streak_guitar $dx_local_streak_guitar}
               {set $dx_streak_guitar $dx_local_streak_guitar}
               {set $dx_streak_guitar_needs_reset TRUE}
            }
            {unless {== $dx_overdrive_guitar $dx_local_overdrive_guitar}
               {set $dx_overdrive_guitar $dx_local_overdrive_guitar}
               {set $dx_overdrive_guitar_needs_reset TRUE}
            }
         )
         ((kTrackBass kTrackRealBass)
            {dx_log_writer info {sprint "dx_resync_local_textures: resetting bass texture to local setting"}}
            {unless {== $dx_highway_bass $dx_local_highway_bass}
               {set $dx_highway_bass $dx_local_highway_bass}
               {set $dx_highway_bass_needs_reset TRUE}
            }
            {unless {== $dx_streak_bass $dx_local_streak_bass}
               {set $dx_streak_bass $dx_local_streak_bass}
               {set $dx_streak_bass_needs_reset TRUE}
            }
            {unless {== $dx_overdrive_bass $dx_local_overdrive_bass}
               {set $dx_overdrive_bass $dx_local_overdrive_bass}
               {set $dx_overdrive_bass_needs_reset TRUE}
            }
         )
         (kTrackDrum
            {dx_log_writer info {sprint "dx_resync_local_textures: resetting drum texture to local setting"}}
            {unless {== $dx_highway_drum $dx_local_highway_drum}
               {set $dx_highway_drum $dx_local_highway_drum}
               {set $dx_highway_drum_needs_reset TRUE}
            }
            {unless {== $dx_streak_drum $dx_local_streak_drum}
               {set $dx_streak_drum $dx_local_streak_drum}
               {set $dx_streak_drum_needs_reset TRUE}
            }
            {unless {== $dx_overdrive_drum $dx_local_overdrive_drum}
               {set $dx_overdrive_drum $dx_local_overdrive_drum}
               {set $dx_overdrive_drum_needs_reset TRUE}
            }
         )
         (kTrackKeys
            {dx_log_writer info {sprint "dx_resync_local_textures: resetting keys texture to local setting"}}
            {unless {== $dx_highway_keys $dx_local_highway_keys}
               {set $dx_highway_keys $dx_local_highway_keys}
               {set $dx_highway_keys_needs_reset TRUE}
            }
            {unless {== $dx_streak_keys $dx_local_streak_keys}
               {set $dx_streak_keys $dx_local_streak_keys}
               {set $dx_streak_keys_needs_reset TRUE}
            }
            {unless {== $dx_overdrive_keys $dx_local_overdrive_keys}
               {set $dx_overdrive_keys $dx_local_overdrive_keys}
               {set $dx_overdrive_keys_needs_reset TRUE}
            }
         )
         (kTrackRealKeys
            {dx_log_writer info {sprint "dx_resync_local_textures: resetting real_keys texture to local setting"}}
            {unless {== $dx_keyboard $dx_local_keyboard}
               {set $dx_keyboard $dx_local_keyboard}
               {set $dx_keyboard_needs_reset TRUE}
            }
            {unless {== $dx_streak_prokeys $dx_local_streak_prokeys}
               {set $dx_streak_prokeys $dx_local_streak_prokeys}
               {set $dx_streak_prokeys_needs_reset TRUE}
            }
            {unless {== $dx_overdrive_prokeys $dx_local_overdrive_prokeys}
               {set $dx_overdrive_prokeys $dx_local_overdrive_prokeys}
               {set $dx_overdrive_prokeys_needs_reset TRUE}
            }
         )
         (kTrackVocals
            {dx_log_writer info {sprint "dx_resync_local_textures: resetting vocals texture to local setting"}}
            {unless {== $dx_vocal_arrow $dx_local_vocal_arrow}
               {set $vocal_arrow $dx_local_vocal_arrowd}
               {set $dx_vocal_arrow_needs_reset TRUE}
            }
            {unless {== $dx_vocal_highway $dx_local_vocal_highway}
               {set $dx_vocal_highway $dx_local_vocal_highway}
               {set $dx_vocal_highway_needs_reset TRUE}
            }
            {unless {== $dx_vocal_notes $dx_local_vocal_notes}
               {set $dx_vocal_notes $dx_local_vocal_notes}
               {set $dx_vocal_notes_needs_reset TRUE}
            }
            {unless {== $dx_vocal_overdrive $dx_local_vocal_overdrive}
               {set $dx_vocal_overdrive $dx_local_vocal_overdrive}
               {set $dx_vocal_overdrive_needs_reset TRUE}
            }
         )
         ; checks every instrument texture if playing offline or if modifier was disabled
         (all
            {dx_log_writer info {sprint "dx_resync_local_textures: resetting every texture to local setting"}}
            {unless {== $dx_highway_guitar $dx_local_highway_guitar}
               {set $dx_highway_guitar $dx_local_highway_guitar}
               {set $dx_highway_guitar_needs_reset TRUE}
            }
            {unless {== $dx_streak_guitar $dx_local_streak_guitar}
               {set $dx_streak_guitar $dx_local_streak_guitar}
               {set $dx_streak_guitar_needs_reset TRUE}
            }
            {unless {== $dx_overdrive_guitar $dx_local_overdrive_guitar}
               {set $dx_overdrive_guitar $dx_local_overdrive_guitar}
               {set $dx_overdrive_guitar_needs_reset TRUE}
            }
            {unless {== $dx_highway_bass $dx_local_highway_bass}
               {set $dx_highway_bass $dx_local_highway_bass}
               {set $dx_highway_bass_needs_reset TRUE}
            }
            {unless {== $dx_streak_bass $dx_local_streak_bass}
               {set $dx_streak_bass $dx_local_streak_bass}
               {set $dx_streak_bass_needs_reset TRUE}
            }
            {unless {== $dx_overdrive_bass $dx_local_overdrive_bass}
               {set $dx_overdrive_bass $dx_local_overdrive_bass}
               {set $dx_overdrive_bass_needs_reset TRUE}
            }
            {unless {== $dx_highway_drum $dx_local_highway_drum}
               {set $dx_highway_drum $dx_local_highway_drum}
               {set $dx_highway_drum_needs_reset TRUE}
            }
            {unless {== $dx_streak_drum $dx_local_streak_drum}
               {set $dx_streak_drum $dx_local_streak_drum}
               {set $dx_streak_drum_needs_reset TRUE}
            }
            {unless {== $dx_overdrive_drum $dx_local_overdrive_drum}
               {set $dx_overdrive_drum $dx_local_overdrive_drum}
               {set $dx_overdrive_drum_needs_reset TRUE}
            }
            {unless {== $dx_highway_keys $dx_local_highway_keys}
               {set $dx_highway_keys $dx_local_highway_keys}
               {set $dx_highway_keys_needs_reset TRUE}
            }
            {unless {== $dx_streak_keys $dx_local_streak_keys}
               {set $dx_streak_keys $dx_local_streak_keys}
               {set $dx_streak_keys_needs_reset TRUE}
            }
            {unless {== $dx_overdrive_keys $dx_local_overdrive_keys}
               {set $dx_overdrive_keys $dx_local_overdrive_keys}
               {set $dx_overdrive_keys_needs_reset TRUE}
            }
            {unless {== $dx_keyboard $dx_local_keyboard}
               {set $dx_keyboard $dx_local_keyboard}
               {set $dx_keyboard_needs_reset TRUE}
            }
            {unless {== $dx_streak_prokeys $dx_local_streak_prokeys}
               {set $dx_streak_prokeys $dx_local_streak_prokeys}
               {set $dx_streak_prokeys_needs_reset TRUE}
            }
            {unless {== $dx_overdrive_prokeys $dx_local_overdrive_prokeys}
               {set $dx_overdrive_prokeys $dx_local_overdrive_prokeys}
               {set $dx_overdrive_prokeys_needs_reset TRUE}
            }
            {unless {== $dx_vocal_arrow $dx_local_vocal_arrow}
               {set $vocal_arrow $dx_local_vocal_arrowd}
               {set $dx_vocal_arrow_needs_reset TRUE}
            }
            {unless {== $dx_vocal_highway $dx_local_vocal_highway}
               {set $dx_vocal_highway $dx_local_vocal_highway}
               {set $dx_vocal_highway_needs_reset TRUE}
            }
            {unless {== $dx_vocal_notes $dx_local_vocal_notes}
               {set $dx_vocal_notes $dx_local_vocal_notes}
               {set $dx_vocal_notes_needs_reset TRUE}
            }
            {unless {== $dx_vocal_overdrive $dx_local_vocal_overdrive}
               {set $dx_vocal_overdrive $dx_local_vocal_overdrive}
               {set $dx_vocal_overdrive_needs_reset TRUE}
            }
         )
      }
   }
}
{func
   dx_apply_remote_textures
   {if_else {modifier_mgr is_modifier_active mod_remote_texture_sync}
      {do
         {user_mgr
            foreach_user
            $user
            {switch {$user get_track_type}
               ((kTrackGuitar kTrackRealGuitar)
                  {if_else {$user is_local}
                     ; if the local player is on guitar, run function to (re)apply their own theme if needed
                     {dx_resync_local_textures kTrackGuitar}
                     ; otherwise apply a new guitar texture if one was received from a remote player
                     {do
                        {unless {== $dx_remote_highway_guitar $dx_highway_guitar}
                           {set $dx_highway_guitar $dx_remote_highway_guitar}
                           {set $dx_highway_guitar_needs_reset TRUE}
                        }
                        {unless {> $dx_num_active_strings 1} ; don't apply streaks/overdrive if multiple strings players are active
                           {do
                              {unless {== $dx_remote_streak_guitar $dx_streak_guitar}
                                 {set $dx_streak_guitar $dx_remote_streak_guitar}
                                 {set $dx_streak_guitar_needs_reset TRUE}
                              }
                              {unless {== $dx_remote_overdrive_guitar $dx_overdrive_guitar}
                                 {set $dx_overdrive_guitar $dx_remote_overdrive_guitar}
                                 {set $dx_overdrive_guitar_needs_reset TRUE}
                              }
                           }
                        }
                     }
                  }
               )
               ((kTrackBass kTrackRealBass)
                  {if_else {$user is_local}
                     ; if the local player is on bass, run function to (re)apply their own theme if needed
                     {dx_resync_local_textures kTrackBass}
                     ; otherwise apply a new bass texture if one was received from a remote player
                     {do
                        {unless {== $dx_remote_highway_bass $dx_highway_bass}
                           {set $dx_highway_bass $dx_remote_highway_bass}
                           {set $dx_highway_bass_needs_reset TRUE}
                        }
                        {unless {> $dx_num_active_strings 1} ; don't apply streaks/overdrive if multiple strings players are active
                           {do
                              {unless {== $dx_remote_streak_bass $dx_streak_bass}
                                 {set $dx_streak_bass $dx_remote_streak_bass}
                                 {set $dx_streak_bass_needs_reset TRUE}
                              }
                              {unless {== $dx_remote_overdrive_bass $dx_overdrive_bass}
                                 {set $dx_overdrive_bass $dx_remote_overdrive_bass}
                                 {set $dx_overdrive_bass_needs_reset TRUE}
                              }
                           }
                        }
                     }
                  }
               )
               (kTrackDrum
                  {if_else {$user is_local}
                     ; if the local player is on drums, run function to (re)apply their own theme if needed
                     {dx_resync_local_textures kTrackDrum}
                     ; otherwise apply a new drum texture if one was received from a remote player
                     {do
                        {unless {== $dx_remote_highway_drum $dx_highway_drum}
                           {set $dx_highway_drum $dx_remote_highway_drum}
                           {set $dx_highway_drum_needs_reset TRUE}
                        }
                        {unless {== $dx_remote_streak_drum $dx_streak_drum}
                           {set $dx_streak_drum $dx_remote_streak_drum}
                           {set $dx_streak_drum_needs_reset TRUE}
                        }
                        {unless {== $dx_remote_overdrive_drum $dx_overdrive_drum}
                           {set $dx_overdrive_drum $dx_remote_overdrive_drum}
                           {set $dx_overdrive_drum_needs_reset TRUE}
                        }
                     }
                  }
               )
               (kTrackKeys
                  {if_else {$user is_local}
                     ; if the local player is on keys, run function to (re)apply their own theme if needed
                     {dx_resync_local_textures kTrackKeys}
                     ; otherwise apply a new keys texture if one was received from a remote player
                     {do
                        {unless {== $dx_remote_highway_keys $dx_highway_keys}
                           {set $dx_highway_keys $dx_remote_highway_keys}
                           {set $dx_highway_keys_needs_reset TRUE}
                        }
                        {unless {== $dx_remote_streak_keys $dx_streak_keys}
                           {set $dx_streak_keys $dx_remote_streak_keys}
                           {set $dx_streak_keys_needs_reset TRUE}
                        }
                        {unless {== $dx_remote_overdrive_keys $dx_overdrive_keys}
                           {set $dx_overdrive_keys $dx_remote_overdrive_keys}
                           {set $dx_overdrive_keys_needs_reset TRUE}
                        }
                     }
                  }
               )
               (kTrackRealKeys
                  {if_else {$user is_local}
                     ; if the local player is on pro keys, run function to (re)apply their own theme if needed
                     {dx_resync_local_textures kTrackRealKeys}
                     ; otherwise apply a new pro keys texture if one was received from a remote player
                     {do
                        {unless {== $dx_remote_keyboard $dx_keyboard}
                           {set $dx_keyboard $dx_remote_keyboard}
                           {set $dx_keyboard_needs_reset TRUE}
                        }
                        {unless {== $dx_remote_streak_prokeys $dx_streak_prokeys}
                           {set $dx_streak_prokeys $dx_remote_streak_prokeys}
                           {set $dx_streak_prokeys_needs_reset TRUE}
                        }
                        {unless {== $dx_remote_overdrive_prokeys $dx_overdrive_prokeys}
                           {set $dx_overdrive_prokeys $dx_remote_overdrive_prokeys}
                           {set $dx_overdrive_prokeys_needs_reset TRUE}
                        }
                     }
                  }
               )
               (kTrackVocals
                  {if_else {$user is_local}
                     ; if the local player is on vocals, run function to (re)apply their own theme if needed
                     {dx_resync_local_textures kTrackVocals}
                     ; otherwise apply a new vocals texture if one was received from a remote player
                     {do
                        {unless {== $dx_remote_vocal_arrow $dx_vocal_arrow}
                           {set $dx_vocal_arrow $dx_remote_vocal_arrow}
                           {set $dx_vocal_arrow_needs_reset TRUE}
                        }
                        {unless {== $dx_remote_vocal_highway $dx_vocal_highway}
                           {set $dx_vocal_highway $dx_remote_vocal_highway}
                           {set $dx_vocal_highway_needs_reset TRUE}
                        }
                        {unless {== $dx_remote_vocal_notes $dx_vocal_notes}
                           {set $dx_vocal_notes $dx_remote_vocal_notes}
                           {set $dx_vocal_notes_needs_reset TRUE}
                        }
                        {unless {== $dx_remote_vocal_overdrive $dx_vocal_overdrive}
                           {set $dx_vocal_overdrive $dx_remote_vocal_overdrive}
                           {set $dx_vocal_overdrive_needs_reset TRUE}
                        }
                     }
                  }
               )
            }
         }
      }
      {dx_resync_local_textures all}
   }
}
; function to tell remote players what texture(s) the local player has
{func
   dx_sync_remote_textures
   ($instrument)
   {do
      {dx_log_writer info {sprint "dx_sync_remote_textures"}}
      {if_else {session_mgr is_local}
         {dx_resync_local_textures all} ; automatically use local user's own theme if playing offline
         {do
            {dx_log_writer info {sprint "dx_sync_remote_textures: PREPPING TO SEND TEXTURES"}}
            {dx_resync_local_textures $instrument} ; makes sure the local user is using their own theme on their instrument
            {switch $instrument
               ((kTrackGuitar kTrackRealGuitar)
                  {do
                     {dx_log_writer info {sprint "dx_sync_remote_textures: SENDING GUITAR MESSAGE"}}
                     {session send_msg_to_all
                        {'`' 
                           (
                              {do
                                 {dx_log_writer info {sprint "dx_sync_remote_textures: RECEIVED GUITAR TEXTURES"}}
                                 {set $dx_remote_highway_guitar {',' $dx_local_highway_guitar}}
                                 {set $dx_remote_streak_guitar {',' $dx_local_streak_guitar}}
                                 {set $dx_remote_overdrive_guitar {',' $dx_local_overdrive_guitar}}
                              }
                           )
                           kNetReliable
                        }
                     }
                  }
               )
               ((kTrackBass kTrackRealBass)
                  {do
                     {dx_log_writer info {sprint "dx_sync_remote_textures: SENDING bass MESSAGE"}}
                     {session send_msg_to_all
                        {'`' 
                           (
                              {do
                                 {dx_log_writer info {sprint "dx_sync_remote_textures: RECEIVED bass TEXTURES"}}
                                 {set $dx_remote_highway_bass {',' $dx_local_highway_bass}}
                                 {set $dx_remote_streak_bass {',' $dx_local_streak_bass}}
                                 {set $dx_remote_overdrive_bass {',' $dx_local_overdrive_bass}}
                              }
                           )
                           kNetReliable
                        }
                     }
                  }
               )
               (kTrackDrum
                  {do
                     {dx_log_writer info {sprint "dx_sync_remote_textures: SENDING drum MESSAGE"}}
                     {session send_msg_to_all
                        {'`' 
                           (
                              {do
                                 {dx_log_writer info {sprint "dx_sync_remote_textures: RECEIVED drum TEXTURES"}}
                                 {set $dx_remote_highway_drum {',' $dx_local_highway_drum}}
                                 {set $dx_remote_streak_drum {',' $dx_local_streak_drum}}
                                 {set $dx_remote_overdrive_drum {',' $dx_local_overdrive_drum}}
                              }
                           )
                           kNetReliable
                        }
                     }
                  }
               )
               (kTrackKeys
                  {do
                     {dx_log_writer info {sprint "dx_sync_remote_textures: SENDING keys MESSAGE"}}
                     {session send_msg_to_all
                        {'`' 
                           (
                              {do
                                 {dx_log_writer info {sprint "dx_sync_remote_textures: RECEIVED keys TEXTURES"}}
                                 {set $dx_remote_highway_keys {',' $dx_local_highway_keys}}
                                 {set $dx_remote_streak_keys {',' $dx_local_streak_keys}}
                                 {set $dx_remote_overdrive_keys {',' $dx_local_overdrive_keys}}
                              }
                           )
                           kNetReliable
                        }
                     }
                  }
               )
               (kTrackRealKeys
                  {do
                     {dx_log_writer info {sprint "dx_sync_remote_textures: SENDING prokeys MESSAGE"}}
                     {session send_msg_to_all
                        {'`' 
                           (
                              {do
                                 {dx_log_writer info {sprint "dx_sync_remote_textures: RECEIVED prokeys TEXTURES"}}
                                 {set $dx_remote_keyboard {',' $dx_local_keyboard}}
                                 {set $dx_remote_streak_prokeys {',' $dx_local_streak_prokeys}}
                                 {set $dx_remote_overdrive_prokeys {',' $dx_local_overdrive_prokeys}}
                              }
                           )
                           kNetReliable
                        }
                     }
                  }
               )
               (kTrackVocals
                  {do
                     {dx_log_writer info {sprint "dx_sync_remote_textures: SENDING vocals MESSAGE"}}
                     {session send_msg_to_all
                        {'`' 
                           (
                              {do
                                 {dx_log_writer info {sprint "dx_sync_remote_textures: RECEIVED vocals TEXTURES"}}
                                 {set $dx_remote_vocal_arrow {',' $dx_local_vocal_arrow}}
                                 {set $dx_remote_vocal_highway {',' $dx_local_vocal_highway}}
                                 {set $dx_remote_vocal_notes {',' $dx_local_vocal_notes}}
                                 {set $dx_remote_vocal_overdrive {',' $dx_local_vocal_overdrive}}
                              }
                           )
                           kNetReliable
                        }
                     }
                  }
               )
            }
         }
      }
   }
}