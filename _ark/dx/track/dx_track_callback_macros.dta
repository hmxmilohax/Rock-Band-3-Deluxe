#define FASTERMODE_FASTER
(
   {if {modifier_mgr is_modifier_active mod_fastermode} ;check if we are in acceleration mode
      {unless {>= $speedmod $speedmod_cap} ;only run the following script if we are currently below our max speed cap
         {set $speedmod {+ $speedmod 0.002}} ;add a small amount of speed to the current song speed on note hit
         {beatmatch set_music_speed $speedmod} ;apply that speed in game
         ;{{{gamemode get track_panel} loaded_dir} set view_time_expert {* {/ 1.2 $trackspeed} $speedmod}} ;try (and fail) to match track speed to the current song speed
         DX_MTV_SETUP_TEXT
         {if {> $speedmod $speedmod_top} ;if our current speed is higher than the top speed the player has reached in this run
            {set $speedmod_top $speedmod} ;set the top reached speed to the current speed
         }
      }
   }
)
#define FASTERMODE_SLOWER
(
   {if {modifier_mgr is_modifier_active mod_fastermode} ;check if we are in acceleration mode
      {unless {<= $speedmod $leaderspeed} ;only run the following script if we are currently above our original speed
         {set $speedmod {- $speedmod 0.004}} ;remove a greater amount of speed than we add, to the current song speed on note miss/pass
         {beatmatch set_music_speed $speedmod} ;apply that speed in game
         ;{{{gamemode get track_panel} loaded_dir} set view_time_expert {* {/ 1.2 $trackspeed} $speedmod}} ;try (and fail) to match track speed to the current song speed
         DX_MTV_SETUP_TEXT
      }
   }
)
#define RESET_GEM_CALLBACK
(
   {set [num_gems_hit] 0} ;reset our current callback tracker back to 0 to begin new tracking
   {set [num_gems_miss] 0} ;reset our current callback tracker back to 0 to begin new tracking
   {set [num_gems_pass] 0} ;reset our current callback tracker back to 0 to begin new tracking
   {set [num_gems_combo] 0} ;reset our current callback tracker back to 0 to begin new tracking
)
#define FRAME_CATCHER
(
   {{coop_track_panel find fcframe.tex} iterate_refs $ref {$ref set diffuse_tex {coop_track_panel find multframe.tex}}} ;remove the FC ring and replace it with the normal ring (the player just missed)
)
#define MISS_CATCHER
(
   {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
      {switch {$player instrument} ;switch based off the currently loaded instrument
         (bass {if {! $bass_caughtmissed} {set $bass_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
         (real_guitar {if {! $real_guitar_caughtmissed} {set $real_guitar_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
         (real_bass {if {! $real_bass_caughtmissed} {set $real_bass_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
         (keys {if {! $keys_caughtmissed} {set $keys_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
         (real_keys {if {! $real_keys_caughtmissed} {set $real_keys_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
         (guitar {if {! $guitar_caughtmissed} {set $guitar_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
         (drum {if {! $drum_caughtmissed} {set $drum_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
         (real_drum {if {! $real_drum_caughtmissed} {set $real_drum_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
      }
   }
)
#define ADD_GOLD_STATE
(  
   {if $dx_fc_glow
      {switch {{$player get_user} get_slot_num}
         (0
            {{{{find_obj {{get_track_panel} loaded_dir} track_0} find streak_meter} find star_deploy.trig} trigger}
         )
         (1
            {{{{find_obj {{get_track_panel} loaded_dir} track_1} find streak_meter} find star_deploy.trig} trigger}
         )
         (2
            {{{{find_obj {{get_track_panel} loaded_dir} track_2} find streak_meter} find star_deploy.trig} trigger}
         )
         (3
            {{{{find_obj {{get_track_panel} loaded_dir} track_3} find streak_meter} find star_deploy.trig} trigger}
         )
      }
   }
)
#define REMOVE_GOLD_STATE
(
   {if $dx_fc_glow
      {switch {{$player get_user} get_slot_num}
         (0
            {{{{find_obj {{get_track_panel} loaded_dir} track_0} find streak_meter} find star_deploy_stop.trig} trigger}
         )
         (1
            {{{{find_obj {{get_track_panel} loaded_dir} track_1} find streak_meter} find star_deploy_stop.trig} trigger}
         )
         (2
            {{{{find_obj {{get_track_panel} loaded_dir} track_2} find streak_meter} find star_deploy_stop.trig} trigger}
         )
         (3
            {{{{find_obj {{get_track_panel} loaded_dir} track_3} find streak_meter} find star_deploy_stop.trig} trigger}
         )
      }
   }
)
#define RESET_STREAK_BLOWN
(
   {switch {{$player get_user} get_slot_num}
      (0
         {{{{find_obj {{get_track_panel} loaded_dir} track_0} find streak_meter} find end_streak.trig} trigger}
         {{{{find_obj {{get_track_panel} loaded_dir} track_0} find streak_meter} find star_deploy_stop.trig} trigger}
         {{{{find_obj {{get_track_panel} loaded_dir} track_0} find streak_meter} find reset.trig} trigger}
      )
      (1
         {{{{find_obj {{get_track_panel} loaded_dir} track_1} find streak_meter} find end_streak.trig} trigger}
         {{{{find_obj {{get_track_panel} loaded_dir} track_1} find streak_meter} find star_deploy_stop.trig} trigger}
         {{{{find_obj {{get_track_panel} loaded_dir} track_1} find streak_meter} find reset.trig} trigger}
      )
      (2
         {{{{find_obj {{get_track_panel} loaded_dir} track_2} find streak_meter} find end_streak.trig} trigger}
         {{{{find_obj {{get_track_panel} loaded_dir} track_2} find streak_meter} find star_deploy_stop.trig} trigger}
         {{{{find_obj {{get_track_panel} loaded_dir} track_2} find streak_meter} find reset.trig} trigger}
      )
      (3
         {{{{find_obj {{get_track_panel} loaded_dir} track_3} find streak_meter} find end_streak.trig} trigger}
         {{{{find_obj {{get_track_panel} loaded_dir} track_3} find streak_meter} find star_deploy_stop.trig} trigger}
         {{{{find_obj {{get_track_panel} loaded_dir} track_3} find streak_meter} find reset.trig} trigger}
      )
   }
)
