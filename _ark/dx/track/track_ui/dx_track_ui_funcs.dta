{func
   dx_vanilla_track_text_reset
   ($player $instrument)
   ;resets things like bass groove text and points text for cleanup
   {if_else {== {$player instrument} vocals} ;set proper context
      {set_this {find_obj DX_VOCALDIR player_feedback}}
      {set_this {find_obj DX_GEMTRACKDIR player_feedback}}
   }
   ;clean up object text
   {bass_super_streak.lbl set_token_fmt bass_streak} ;this doesnt exist in vox but who cares? not the game!
   {points.lbl set_token_fmt dx_points} ;this exists in all dirs, its for solos
}
;clean up ps3 names
{func
   dx_sanitize_player_name
   ($name)
   {foreach_int $i 0 9 ;for every number
      {search_replace $name {sprint " (" $i ")"} "" $name} ;remove the ps3 user text
   }
   {search_replace $name "*" "" $name} ;this indicates a system problem but who cares? we dont!
   $name ;return name
}
;constructs track icon to support difficulty rings
{func
   dx_setup_player_icon
   ($player $name)
   {do
      ($label "player_name.lbl")
      {set_this {find_obj DX_GEMTRACKDIR player_intro}}
      ;set up label for yarg diff rings on player name label
      {$label set alt_style_enabled TRUE}
      {$label set alt_font_resource_name instruments_icons_rings} ;custom font
      {$label set markup TRUE}
      {$label set width 100}
      {$label set height 100}
      {$label set alt_text_size 3.3}
      {$label set alt_z_offset 0}
      {icon.lbl set_local_pos_index 0 0.01}
      ;setup text for this label
      {$label set_token_fmt stringify ;this will always complain in notify so string it
         {sprint
            {if_else $dx_track_username ;dont show username here if track username is enabled
               {localize os_blnk} ;empty line, must keep to line up diff rings
               $name ;user name
            }
            "\n\n" ;add two lines for proper spacing on the icon (scuffed)
            {localize {sprint "dx_diff_" {eval {var {sprint {$player instrument} "rankvar"}}}}} ;token for icon diff rank
         }
      }
   }
}
;player track icon popups, constructs name and optionally difficulty icon
{func
   dx_set_player_names
   ($enabled $player)
   {do
      ($label "player_name.lbl")
      ($name {dx_sanitize_player_name {{$player get_user} get_user_name}}) ;construct name
      {cond
         ({&& $enabled {! $dx_path_failed}} ;bool is for diff rings
            {dx_setup_player_icon $player $name} ;adapt label and apply diff rings
         )
         ($dx_track_username
            {$label set_token_fmt os_blnk} ;dont show name AND dont show icons
         )
         {$label set_token_fmt stringify $name} ;only set player name
      }
   }
}
; shows the username of each player at the bottom of their respective highways
{func
   dx_show_track_username
   ($enabled $player)
   {do
      ($label {sprint "dx_track_label_username" {{$player get_user} get_slot_num} ".lbl"}) ;construct label name
      ($name {dx_sanitize_player_name {{$player get_user} get_user_name}}) ;get username
      ($icon {sprint "inst_icon_" {$player instrument}}) ;localized icon letter
      {set_this {find_obj DX_GEMTRACKDIR}}
      {cond
         ({|| {! $enabled} {! $name}} {$label set_token_fmt os_blnk}) ;dont show username on highway
         ({! $dx_highway_username_inst} ;if icon is disabled
            {$label set_token_fmt stringify {sprint $name}} ;dont show icon
         )
         ({&& {== {beatmatch num_active_players} 1} {! $dx_highway_username_sp_inst}} ;if one player and sp icon disabled
            {$label set_token_fmt stringify {sprint $name}} ;dont show icon
         )
         {$label set_token_fmt stringify {sprint $name " - " {localize $icon}}} ;otherwise show name and icon
      }
   }
}
;solo box/countdown positon
{func
   dx_set_solo_box_pos
   ($player $x $z $y)
   {if {|| $x $z $y} ;default is 0, if any are not 0
      {set_this {find_obj DX_GEMTRACKDIR player_feedback}}
      {feedback.grp set_local_pos $x $z $y} ;move the solo box
   }
}
{func dx_track_label
   ($name $size $font $alignment $kerning $slot $x $y $r $g $b $reset)
   {do
      ($label {sprint $name $slot ".lbl"})
      ($color {sprint $name $slot ".color"})
      {set_this {find_obj {{get_track_panel} loaded_dir} {sprint "track_" $slot}}} ;change context to the current checked player
      {if $reset ;if we need to destroy and rebuild this label
         {if {exists $label}
            {delete $label} {delete $color} ;destroy label
         }
         {new BandLabel $label} {new UIColor $color} ;rebuild label
         ;set up default properties
         {$label set resource_name $font}
         {$label set color_override $color}
         {$label set_showing TRUE}
         {$label set_local_scale 1 1 1}
         {$label set_local_rot 0 0 0}
         {$label set width 500}
         {$label set height 500}
         ;set up alt properties
         {$label set alt_font_resource_name instruments_icons}
         {$label set alt_style_enabled TRUE}
         {$label set markup TRUE}
         {$label set alt_text_size 2}
         {$label set alt_z_offset 0}
         {$label set_token_fmt os_blnk}
         {meters.grp add_object $label} ;tie it into a basic grp
      }
      ;these properties are user controllable via overshell
      ;when configured in-game they do not destroy the label
      ;so we should run these when the func is called always
      {$label set alignment $alignment}
      {$label set text_size $size}
      {$label set kerning $kerning}
      {$label set color {pack_color $r $g $b}}
      {$label set_local_pos $x 0 $y} ;don't allow user configuration of Z space because it sucks
   }
}