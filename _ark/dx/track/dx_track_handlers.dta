#define DX_NO_BRE_HANDLER
(
   {if {&& {modifier_mgr is_modifier_active mod_nobre} $imabigboy} ;check if we have no bre active, and we havent restarted already on this song
      {if {! $dx_already_restarted} ;cheap attempt to fix the "notes too quick bug" by restarting once automatically on initial song start, this will at least work in black bg
         {do ;do
            {set $imabigboy FALSE} ;tell the logic we have restarted once to switch to expert
            {set $dx_already_restarted TRUE} ;also tell the logic we
            {{{beatmatch active_player 0} get_user} set_difficulty kDifficultyExpert} ;since we have entered the track on easy, set the player to expert to enable no bre behavior
            {game_restart} ;quick restart the song
         }
      }
   }
)
#define RESET_GEM_CALLBACK
(
   {set [num_gems_hit] 0} ;reset our current callback tracker back to 0 to begin new tracking
   {set [num_gems_miss] 0} ;reset our current callback tracker back to 0 to begin new tracking
   {set [num_gems_pass] 0} ;reset our current callback tracker back to 0 to begin new tracking
   {set [num_gems_combo] 0} ;reset our current callback tracker back to 0 to begin new tracking
)
#define FRAME_CATCHER
(
   {{coop_track_panel find fcframe.tex} iterate_refs $ref {$ref set diffuse_tex {coop_track_panel find multframe.tex}}} ;remove the FC ring and replace it with the normal ring (the player just missed)
)
#define MISS_CATCHER
(
   {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
      {switch {$player instrument} ;switch based off the currently loaded instrument
         (bass {if {! $bass_caughtmissed} {set $bass_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
         (real_guitar {if {! $real_guitar_caughtmissed} {set $real_guitar_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
         (real_bass {if {! $real_bass_caughtmissed} {set $real_bass_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
         (keys {if {! $keys_caughtmissed} {set $keys_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
         (real_keys {if {! $real_keys_caughtmissed} {set $real_keys_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
         (guitar {if {! $guitar_caughtmissed} {set $guitar_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
         (drum {if {! $drum_caughtmissed} {set $drum_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
         (real_drum {if {! $real_drum_caughtmissed} {set $real_drum_caughtmissed TRUE} FRAME_CATCHER}) ;if the player has not missed yet, track that the player just missed, remove fc ring as in macro above
      }
   }
)
#define DX_ANIMATED_TASK_KILLER
(
   {if {exists animated_gems} ;check if the above task is running
      {delete animated_gems} ;delete the task if running
   }
)

#define DX_TRACK_TEXTURE_HANDLER
(
;{dx_log_writer FALSE {sprint "Setting Custom Track Textures"}}
{unless {modifier_mgr is_modifier_active mod_nohud} ;don't run anything if performance mode is enabled

{if_else $fcringonce ;check if we have already generated new textures for the fc ring
   {do ;if we have
      {{coop_track_panel find fcframe.tex} set_bitmap {if_else {== $dx_multiplier_ring none} {sprint "ui/track/multiplier_ring/streak_meter_plate_fc_rb3.png"} {sprint "ui/track/multiplier_ring/streak_meter_plate_fc_" $dx_multiplier_ring ".png"}}} ;load texture onto the generated texture
      {{coop_track_panel find multframe.tex} set_bitmap {if_else {== $dx_multiplier_ring none} {sprint "ui/track/multiplier_ring/streak_meter_plate_rb3.png"} {sprint "ui/track/multiplier_ring/streak_meter_plate_" $dx_multiplier_ring ".png"}}} ;load texture onto the generated texture
      {{coop_track_panel find streak_meter_plate.tex} iterate_refs $ref {$ref set diffuse_tex fcframe.tex}} ;apply the fc texture to the ring material
      {{coop_track_panel find fcframe.tex} iterate_refs $ref {$ref set diffuse_tex fcframe.tex}} ;apply the fc texture to the ring material
      ;{{coop_track_panel find fcframe.tex} iterate_refs $ref {$ref set emissive_map fcframe.tex}} ;apply the fc texture to the ring material
      ;{{coop_track_panel find fcframe.tex} iterate_refs $ref {$ref set normal_map fcframe.tex}} ;apply the fc texture to the ring material
      {{coop_track_panel find multframe.tex} iterate_refs $ref {$ref set diffuse_tex fcframe.tex}} ;apply the multiplier texture to the second ring material
      ;{{coop_track_panel find multframe.tex} iterate_refs $ref {$ref set emissive_map fcframe.tex}} ;apply the multiplier texture to the second ring material
      ;{{coop_track_panel find multframe.tex} iterate_refs $ref {$ref set normal_map fcframe.tex}} ;apply the multiplier texture to the second ring material
   }
   {do ;if we havent
      {set $fcringonce TRUE} ;ensure this task does not run again until reboot (texture stays in memory)
      {new Tex fcframe.tex} ;generate a new texture to hold the fc indicator
      {new Tex multframe.tex} ;generate a new texture to hold the non fc texture
      {{coop_track_panel find streak_meter_plate.tex} iterate_refs $ref {$ref set diffuse_tex fcframe.tex}} ;apply the fc texture to the ring material
      ;{{coop_track_panel find streak_meter_plate.tex} iterate_refs $ref {$ref set emissive_map fcframe.tex}} ;apply the fc texture to the ring material
      ;{{coop_track_panel find streak_meter_plate.tex} iterate_refs $ref {$ref set normal_map fcframe.tex}} ;apply the fc texture to the ring material
      {{coop_track_panel find fcframe.tex} set_bitmap {if_else {== $dx_multiplier_ring none} {sprint "ui/track/multiplier_ring/streak_meter_plate_fc_rb3.png"} {sprint "ui/track/multiplier_ring/streak_meter_plate_fc_" $dx_multiplier_ring ".png"}}} ;load texture onto the generated texture
      {{coop_track_panel find multframe.tex} set_bitmap {if_else {== $dx_multiplier_ring none} {sprint "ui/track/multiplier_ring/streak_meter_plate_rb3.png"} {sprint "ui/track/multiplier_ring/streak_meter_plate_" $dx_multiplier_ring ".png"}}} ;load texture onto the generated texture
   }
}

{unless $dx_fc_ring
   FRAME_CATCHER ;immediately kill the fc ring if its disabled
}

{if $dx_highway_guitar_needs_reset ;if we are queued to update a per instrument highway texture
   {unless {== $dx_highway_guitar none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Guitar Highway to: " $dx_highway_guitar}}
      {watermark_bass.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/highways/gen/" $dx_highway_guitar ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/highways/" $dx_highway_guitar ".png"}
            {sprint "ui/track/highways/" $dx_highway_guitar ".png"}
         }
      } ;load selected texture into tex memory
      {watermark_bass.tex iterate_refs $ref {$ref set diffuse_tex watermark_bass.tex}} ;load the tex into the material
      {watermark_bass.tex iterate_refs $ref {$ref set emissive_map watermark_bass.tex}} ;apply the emissive map as well so it looks proper
      {watermark_bass.tex iterate_refs $ref {$ref set normal_map watermark_bass.tex}} ;apply the emissive map as well so it looks proper
      {watermark_bass.tex iterate_refs $ref {$ref set emissive_multiplier 0.8}} ;make the texture pop a bit, this also might not actually do anything for the highway idk
   }
}

{if $dx_highway_bass_needs_reset ;if we are queued to update a per instrument highway texture
   {unless {== $dx_highway_bass none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Bass Highway to: " $dx_highway_bass}}
      {watermark_guitar.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/highways/gen/" $dx_highway_bass ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/highways/" $dx_highway_bass ".png"}
            {sprint "ui/track/highways/" $dx_highway_bass ".png"}
         }
      } ;load selected texture into tex memory
      {watermark_guitar.tex iterate_refs $ref {$ref set diffuse_tex watermark_guitar.tex}} ;load the tex into the material
      {watermark_guitar.tex iterate_refs $ref {$ref set emissive_map watermark_guitar.tex}} ;apply the emissive map as well so it looks proper
      {watermark_guitar.tex iterate_refs $ref {$ref set normal_map watermark_guitar.tex}} ;apply the emissive map as well so it looks proper
      {watermark_guitar.tex iterate_refs $ref {$ref set emissive_multiplier 0.8}} ;make the texture pop a bit, this also might not actually do anything for the highway idk
   }
}

{if $dx_highway_drum_needs_reset ;if we are queued to update a per instrument highway texture
   {unless {== $dx_highway_drum none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Drum Highway to: " $dx_highway_drum}}
      {watermark_drum.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/highways/gen/" $dx_highway_drum ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/highways/" $dx_highway_drum ".png"}
            {sprint "ui/track/highways/" $dx_highway_drum ".png"}
         }
      } ;load selected texture into tex memory
      {watermark_drum.tex iterate_refs $ref {$ref set diffuse_tex watermark_drum.tex}} ;load the tex into the material
      {watermark_drum.tex iterate_refs $ref {$ref set emissive_map watermark_drum.tex}} ;apply the emissive map as well so it looks proper
      {watermark_drum.tex iterate_refs $ref {$ref set normal_map watermark_drum.tex}} ;apply the emissive map as well so it looks proper
      {watermark_drum.tex iterate_refs $ref {$ref set emissive_multiplier 0.8}} ;make the texture pop a bit, this also might not actually do anything for the highway idk
   }
}

{if $dx_highway_keys_needs_reset ;if we are queued to update a per instrument highway texture
   {unless {== $dx_highway_keys none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Keys Highway to: " $dx_highway_keys}}
      {watermark_keys.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/highways/gen/" $dx_highway_keys ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/highways/" $dx_highway_keys ".png"}
            {sprint "ui/track/highways/" $dx_highway_keys ".png"}
         }
      } ;load selected texture into tex memory
      {watermark_keys.tex iterate_refs $ref {$ref set diffuse_tex watermark_keys.tex}} ;load the tex into the material
      {watermark_keys.tex iterate_refs $ref {$ref set emissive_map watermark_keys.tex}} ;apply the emissive map as well so it looks proper
      {watermark_keys.tex iterate_refs $ref {$ref set normal_map watermark_keys.tex}} ;apply the emissive map as well so it looks proper
      {watermark_keys.tex iterate_refs $ref {$ref set emissive_multiplier 0.8}} ;make the texture pop a bit, this also might not actually do anything for the highway idk
   }
}

{if $dx_streak_guitar_needs_reset ;if we are queued to update a per instrument spotlight texture
   {unless {== $dx_streak_guitar none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Guitar Spotlight to: " $dx_streak_guitar}}
      {spotlight_bass_track.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/spotlights/gen/" $dx_streak_guitar ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/spotlights/" $dx_streak_guitar ".png"}
            {sprint "ui/track/spotlights/" $dx_streak_guitar ".png"}
         }
      } ;load selected texture into tex memory
      {spotlight_bass_track.tex iterate_refs $ref {$ref set diffuse_tex spotlight_bass_track.tex}} ;load the tex into the material
      {spotlight_bass_track.tex iterate_refs $ref {$ref set emissive_map spotlight_bass_track.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_bass_track.tex iterate_refs $ref {$ref set normal_map spotlight_bass_track.tex}} ;apply the emissive map as well so it looks proper
      ;{spotlight_bass_track.tex iterate_refs $ref {$ref set color {pack_color $spotlight_r $spotlight_g $spotlight_b}}} ;apply the custom color selected to the material
      ;{spotlight_bass_track.tex iterate_refs $ref {$ref set intensify TRUE}} ;double the intensity of the material so it looks brighter and vibrant
   }
}

{if $dx_streak_bass_needs_reset ;if we are queued to update a per instrument spotlight texture
   {unless {== $dx_streak_bass none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Bass Spotlight to: " $dx_streak_bass}}
      {spotlight_bass_track.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/spotlights/gen/" $dx_streak_bass ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/spotlights/" $dx_streak_bass ".png"}
            {sprint "ui/track/spotlights/" $dx_streak_bass ".png"}
         }
      } ;load selected texture into tex memory
      {spotlight_bass_track.tex iterate_refs $ref {$ref set diffuse_tex spotlight_bass_track.tex}} ;load the tex into the material
      {spotlight_bass_track.tex iterate_refs $ref {$ref set emissive_map spotlight_bass_track.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_bass_track.tex iterate_refs $ref {$ref set normal_map spotlight_bass_track.tex}} ;apply the emissive map as well so it looks proper
      ;{spotlight_bass_track.tex iterate_refs $ref {$ref set color {pack_color $spotlight_r $spotlight_g $spotlight_b}}} ;apply the custom color selected to the material
      ;{spotlight_bass_track.tex iterate_refs $ref {$ref set intensify TRUE}} ;double the intensity of the material so it looks brighter and vibrant
   }
}

{if $dx_streak_drum_needs_reset ;if we are queued to update a per instrument spotlight texture
   {unless {== $dx_streak_drum none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Drum Spotlight to: " $dx_streak_drum}}
      {spotlight_drums_track.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/spotlights/gen/" $dx_streak_drum ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/spotlights/" $dx_streak_drum ".png"}
            {sprint "ui/track/spotlights/" $dx_streak_drum ".png"}
         }
      } ;load selected texture into tex memory
      {spotlight_drum_track.tex iterate_refs $ref {$ref set diffuse_tex spotlight_drum_track.tex}} ;load the tex into the material
      {spotlight_drum_track.tex iterate_refs $ref {$ref set emissive_map spotlight_drum_track.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_drum_track.tex iterate_refs $ref {$ref set normal_map spotlight_drum_track.tex}} ;apply the emissive map as well so it looks proper
      ;{spotlight_drum_track.tex iterate_refs $ref {$ref set color {pack_color $spotlight_r $spotlight_g $spotlight_b}}} ;apply the custom color selected to the material
      ;{spotlight_drum_track.tex iterate_refs $ref {$ref set intensify TRUE}} ;double the intensity of the material so it looks brighter and vibrant
   }
}

{if $dx_streak_keys_needs_reset ;if we are queued to update a per instrument spotlight texture
   {unless {== $dx_streak_keys none}
      {dx_log_writer FALSE {sprint "Setting Keys Spotlight to: " $dx_streak_keys}}
      {spotlight_prokeys_track.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/spotlights/gen/" $dx_streak_keys ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/spotlights/" $dx_streak_keys ".png"}
            {sprint "ui/track/spotlights/" $dx_streak_keys ".png"}
         }
      } ;load selected texture into tex memory
      {spotlight_keys_track.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/spotlights/gen/" $dx_streak_keys ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/spotlights/" $dx_streak_keys ".png"}
            {sprint "ui/track/spotlights/" $dx_streak_keys ".png"}
         }
      } ;load selected texture into tex memory
      {spotlight_prokeys_track.tex iterate_refs $ref {$ref set diffuse_tex spotlight_prokeys_track.tex}} ;load the tex into the material
      {spotlight_keys_track.tex iterate_refs $ref {$ref set diffuse_tex spotlight_keys_track.tex}} ;load the tex into the material
      {spotlight_keys_track.tex iterate_refs $ref {$ref set normal_map spotlight_keys_track.tex}} ;load the tex into the material
      {spotlight_prokeys_track.tex iterate_refs $ref {$ref set emissive_map spotlight_prokeys_track.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_keys_track.tex iterate_refs $ref {$ref set emissive_map spotlight_keys_track.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_keys_track.tex iterate_refs $ref {$ref set normal_map spotlight_keys_track.tex}} ;apply the emissive map as well so it looks proper
      ;{spotlight_prokeys_track.tex iterate_refs $ref {$ref set color {pack_color $spotlight_r $spotlight_g $spotlight_b}}} ;apply the custom color selected to the material
      ;{spotlight_keys_track.tex iterate_refs $ref {$ref set color {pack_color $spotlight_r $spotlight_g $spotlight_b}}} ;apply the custom color selected to the material
      ;{spotlight_prokeys_track.tex iterate_refs $ref {$ref set intensify TRUE}} ;double the intensity of the material so it looks brighter and vibrant
      ;{spotlight_keys_track.tex iterate_refs $ref {$ref set intensify TRUE}} ;double the intensity of the material so it looks brighter and vibrant
   }
}

{if $dx_overdrive_guitar_needs_reset ;if we are queued to update a per instrument emissive texture
   {unless {== $dx_overdrive_guitar none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Guitar Emissive to: " $dx_overdrive_guitar}}
      {spotlight_bass_track_emissive.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/emissives/gen/" $dx_overdrive_guitar ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/emissives/" $dx_overdrive_guitar ".png"}
            {sprint "ui/track/emissives/" $dx_overdrive_guitar ".png"}
         }
      } ;load selected texture into tex memory
      {spotlight_bass_track_emissive.tex iterate_refs $ref {$ref set diffuse_tex spotlight_bass_track_emissive.tex}} ;load the tex into the material
      {spotlight_bass_track_emissive.tex iterate_refs $ref {$ref set emissive_map spotlight_bass_track_emissive.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_bass_track_emissive.tex iterate_refs $ref {$ref set normal_map spotlight_bass_track_emissive.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_bass_track_emissive.tex iterate_refs $ref {$ref set intensify TRUE}} ;double the intensity of the material so it looks brighter and vibrant
      {set $dx_overdrive_color_needs_reset TRUE}
   }
}

{if $dx_overdrive_bass_needs_reset ;if we are queued to update a per instrument emissive texture
   {unless {== $dx_overdrive_bass none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Bass Emissive to: " $dx_overdrive_bass}}
      {spotlight_guitar_track_emmissive.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/emissives/gen/" $dx_overdrive_bass ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/emissives/" $dx_overdrive_bass ".png"}
            {sprint "ui/track/emissives/" $dx_overdrive_bass ".png"}
         }
      } ;load selected texture into tex memory
      {spotlight_guitar_track_emmissive.tex iterate_refs $ref {$ref set diffuse_tex spotlight_guitar_track_emmissive.tex}} ;load the tex into the material
      {spotlight_guitar_track_emmissive.tex iterate_refs $ref {$ref set emissive_map spotlight_guitar_track_emmissive.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_guitar_track_emmissive.tex iterate_refs $ref {$ref set normal_map spotlight_guitar_track_emmissive.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_guitar_track_emmissive.tex iterate_refs $ref {$ref set intensify TRUE}} ;double the intensity of the material so it looks brighter and vibrant
      {set $dx_overdrive_color_needs_reset TRUE}
   }
}

{if $dx_overdrive_drum_needs_reset ;if we are queued to update a per instrument emissive texture
   {unless {== $dx_overdrive_drum none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Drum Emissive to: " $dx_overdrive_drum}}
      {spotlight_drums_track_emissive.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/emissives/gen/" $dx_overdrive_drum ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/emissives/" $dx_overdrive_drum ".png"}
            {sprint "ui/track/emissives/" $dx_overdrive_drum ".png"}
         }
      } ;load selected texture into tex memory
      {spotlight_drums_track_emissive.tex iterate_refs $ref {$ref set diffuse_tex spotlight_drums_track_emissive.tex}} ;load the tex into the material
      {spotlight_drums_track_emissive.tex iterate_refs $ref {$ref set emissive_map spotlight_drums_track_emissive.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_drums_track_emissive.tex iterate_refs $ref {$ref set normal_map spotlight_drums_track_emissive.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_drums_track_emissive.tex iterate_refs $ref {$ref set intensify TRUE}} ;double the intensity of the material so it looks brighter and vibrant
      {set $dx_overdrive_color_needs_reset TRUE}
   }
}

{if $dx_overdrive_keys_needs_reset ;if we are queued to update a per instrument emissive texture
   {unless {== $dx_overdrive_keys none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Keys Emissive to: " $dx_overdrive_keys}}
      {spotlight_keys_track_emissive.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/emissives/gen/" $dx_overdrive_keys ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/emissives/" $dx_overdrive_keys ".png"}
            {sprint "ui/track/emissives/" $dx_overdrive_keys ".png"}
         }
      } ;load selected texture into tex memory
      {spotlight_prokeys_track_emissive.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/emissives/gen/" $dx_overdrive_keys ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/emissives/" $dx_overdrive_keys ".png"}
            {sprint "ui/track/emissives/" $dx_overdrive_keys ".png"}
         }
      } ;load selected texture into tex memory
      {spotlight_keys_track_emissive.tex iterate_refs $ref {$ref set diffuse_tex spotlight_keys_track_emissive.tex}} ;load the tex into the material
      {spotlight_prokeys_track_emissive.tex iterate_refs $ref {$ref set diffuse_tex spotlight_prokeys_track_emissive.tex}} ;load the tex into the material
      {spotlight_keys_track_emissive.tex iterate_refs $ref {$ref set emissive_map spotlight_keys_track_emissive.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_keys_track_emissive.tex iterate_refs $ref {$ref set normal_map spotlight_keys_track_emissive.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_prokeys_track_emissive.tex iterate_refs $ref {$ref set emissive_map spotlight_prokeys_track_emissive.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_prokeys_track_emissive.tex iterate_refs $ref {$ref set normal_map spotlight_prokeys_track_emissive.tex}} ;apply the emissive map as well so it looks proper
      {spotlight_keys_track_emissive.tex iterate_refs $ref {$ref set intensify TRUE}} ;double the intensity of the material so it looks brighter and vibrant
      {spotlight_prokeys_track_emissive.tex iterate_refs $ref {$ref set intensify TRUE}} ;double the intensity of the material so it looks brighter and vibrant
      {set $dx_overdrive_color_needs_reset TRUE}
   }
}

{if $dx_overdrive_color_needs_reset ;if we are queued to update a per instrument emissive texture
   {unless {== $dx_overdrive_color none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Emissive Color to: " {pack_color $dx_overdrive_r $dx_overdrive_g $dx_overdrive_b}}}
      {spotlight_bass_track_emissive.tex iterate_refs $ref {$ref set color {pack_color $dx_overdrive_r $dx_overdrive_g $dx_overdrive_b}}} ;apply the custom color selected to the material
      {spotlight_guitar_track_emmissive.tex iterate_refs $ref {$ref set color {pack_color $dx_overdrive_r $dx_overdrive_g $dx_overdrive_b}}} ;apply the custom color selected to the material
      {spotlight_drums_track_emissive.tex iterate_refs $ref {$ref set color {pack_color $dx_overdrive_r $dx_overdrive_g $dx_overdrive_b}}} ;apply the custom color selected to the material
      {spotlight_keys_track_emissive.tex iterate_refs $ref {$ref set color {pack_color $dx_overdrive_r $dx_overdrive_g $dx_overdrive_b}}} ;apply the custom color selected to the material
      {spotlight_prokeys_track_emissive.tex iterate_refs $ref {$ref set color {pack_color $dx_overdrive_r $dx_overdrive_g $dx_overdrive_b}}} ;apply the custom color selected to the material
   }
}

{if $dx_gem_needs_reset ;check if a new texture is queued
   {unless {== $dx_gem none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Gem Texture to: " $dx_gem}}
      {gem_cymbal_diffuse.tex set_bitmap {sprint "ui/track/gems/gem_cymbal_diffuse_" $dx_gem ".png"}}
      {gem_cymbal_ems.tex set_bitmap {sprint "ui/track/gems/gem_cymbal_ems_" $dx_gem ".png"}}
      {gliss_gems.tex set_bitmap {sprint "ui/track/gems/gliss_gems_" $dx_gem ".png"}}
      {prism_gems.tex set_bitmap {sprint "ui/track/gems/prism_gems_" $dx_gem ".png"}}
      {prism_gem_emissive.tex set_bitmap {sprint "ui/track/gems/prism_gem_emissive_" $dx_gem ".png"}}
      {prism_gem_emissive_dynamic.tex set_bitmap {sprint "ui/track/gems/prism_gem_emissive_dynamic_" $dx_gem ".png"}}
      {prism_gem_keyboard_style.tex set_bitmap {sprint "ui/track/gems/prism_gem_keyboard_style_" $dx_gem ".png"}}
   }
}

{if $dx_smasher_needs_reset ;check if a new texture is queued
   {unless {== $dx_smasher none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Smasher Texture to: " $dx_smasher}}
      {if_else {|| {!= $dx_smasher rb4v2} {!= $dx_smasher rb2}}
      {do
         {gem_smashers_guitar_nomip.tex iterate_refs $ref {$ref set prelit TRUE}}
         {gem_smashers_guitar.tex iterate_refs $ref {$ref set prelit TRUE}}
         {gem_smashers_drum_nomip.tex iterate_refs $ref {$ref set prelit TRUE}}
         {gem_smashers_drum.tex iterate_refs $ref {$ref set prelit TRUE}}
      }
      {do
         {gem_smashers_guitar_nomip.tex iterate_refs $ref {$ref set prelit FALSE}}
         {gem_smashers_guitar.tex iterate_refs $ref {$ref set prelit FALSE}}
         {gem_smashers_drum_nomip.tex iterate_refs $ref {$ref set prelit FALSE}}
         {gem_smashers_drum.tex iterate_refs $ref {$ref set prelit FALSE}}
      }}
      {gem_smashers_guitar_nomip.tex set_bitmap {sprint "ui/track/smashers/gem_smashers_guitar_" $dx_smasher ".png"}}
      {gem_smashers_guitar.tex set_bitmap {sprint "ui/track/smashers/gem_smashers_guitar_" $dx_smasher ".png"}}
      {gem_smashers_drum_nomip.tex set_bitmap {sprint "ui/track/smashers/gem_smashers_drum_" $dx_smasher ".png"}}
      {gem_smashers_drum.tex set_bitmap {sprint "ui/track/smashers/gem_smashers_drum_" $dx_smasher ".png"}}
      {square_smasher_bright_green.tex set_bitmap {sprint "ui/track/smashers/square_smasher_bright_green_" $dx_smasher ".png"}}
      {square_smasher_bright_red.tex set_bitmap {sprint "ui/track/smashers/square_smasher_bright_red_" $dx_smasher ".png"}}
      {square_smasher_bright_yellow.tex set_bitmap {sprint "ui/track/smashers/square_smasher_bright_yellow_" $dx_smasher ".png"}}
      {square_smasher_bright_blue.tex set_bitmap {sprint "ui/track/smashers/square_smasher_bright_blue_" $dx_smasher ".png"}}
      {square_smasher_bright_orange.tex set_bitmap {sprint "ui/track/smashers/square_smasher_bright_orange_" $dx_smasher ".png"}}
   }
}

{if $dx_flames_needs_reset ;check if a new texture is queued
   {unless {== $dx_flames none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Flames Texture to: " $dx_flames}}
      {gem_cap.tex set_bitmap {sprint "ui/track/flames/gem_cap_" $dx_flames ".png"}}
      {broken_glass01.tex set_bitmap {sprint "ui/track/flames/broken_glass01_" $dx_flames ".png"}}
      {broken_glass01_neg.tex set_bitmap {sprint "ui/track/flames/broken_glass01_neg_" $dx_flames ".png"}}
      {broken_glass02.tex set_bitmap {sprint "ui/track/flames/broken_glass02_" $dx_flames ".png"}}
      {flare_gtr_inner.tex set_bitmap {sprint "ui/track/flames/flare_gtr_inner_" $dx_flames ".png"}}
      {flare_gtr_outer.tex set_bitmap {sprint "ui/track/flames/flare_gtr_outer_" $dx_flames ".png"}}
      {flare_gtr_style.tex set_bitmap {sprint "ui/track/flames/flare_gtr_style_" $dx_flames ".png"}}
      {flare_inner.tex set_bitmap {sprint "ui/track/flames/flare_inner_" $dx_flames ".png"}}
      {flare_outer.tex set_bitmap {sprint "ui/track/flames/flare_outer_" $dx_flames ".png"}}
      {flare_style.tex set_bitmap {sprint "ui/track/flames/flare_style_" $dx_flames ".png"}}
      {fx_smasher_smoke.tex set_bitmap {sprint "ui/track/flames/fx_smasher_smoke_" $dx_flames ".png"}}
      {radial_shockwave.tex set_bitmap {sprint "ui/track/flames/radial_shockwave_" $dx_flames ".png"}}
      {spark.tex set_bitmap {sprint "ui/track/flames/sparks_" $dx_flames ".png"}}
      {sparks_radial.tex set_bitmap {sprint "ui/track/flames/sparks_radial_" $dx_flames ".png"}}
      {sparks_vertical.tex set_bitmap {sprint "ui/track/flames/sparks_vertical_" $dx_flames ".png"}}
   }
}

{if $dx_sustain_needs_reset ;check if a new texture is queued
   {unless {== $dx_sustain rb3} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Sustain Texture to: " $dx_sustain}}
      {gem_tails.tex set_bitmap {sprint "ui/track/sustains/gem_tails_" $dx_sustain ".png"}}
   }
}

{if $dx_lanes_needs_reset ;check if a new texture is queued
   {unless {== $dx_lanes none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Lanes Texture to: " $dx_lanes}}
      {gem_mash_green_emmisive.tex set_bitmap {sprint "ui/track/lanes/gem_mash_green_emmisive_" $dx_lanes ".png"}}
      {gem_mash_red_emmisive.tex set_bitmap {sprint "ui/track/lanes/gem_mash_red_emmisive_" $dx_lanes ".png"}}
      {gem_mash_yellow_emmisive.tex set_bitmap {sprint "ui/track/lanes/gem_mash_yellow_emmisive_" $dx_lanes ".png"}}
      {gem_mash_blue_emmisive.tex set_bitmap {sprint "ui/track/lanes/gem_mash_blue_emmisive_" $dx_lanes ".png"}}
      {gem_mash_orange_emmisive.tex set_bitmap {sprint "ui/track/lanes/gem_mash_orange_emmisive_" $dx_lanes ".png"}}
   }
}

{if $dx_score_box_needs_reset ;check if a new texture is queued
   {unless {== $dx_score_box none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Score Box Texture to: " $dx_score_box}}
      {scoreboard_frame.tex set_bitmap {sprint "ui/track/score_box/scoreboard_frame_" $dx_score_box ".png"}}
      {scoreboard_lens.tex set_bitmap {sprint "ui/track/score_box/scoreboard_lens_" $dx_score_box ".png"}}
      {star_multiplier_meter_frame.tex set_bitmap {sprint "ui/track/score_box/star_multiplier_meter_frame_" $dx_score_box ".png"}}
      {star_multiplier_meter_lens.tex set_bitmap {sprint "ui/track/score_box/star_multiplier_meter_lens_" $dx_score_box ".png"}}
   }
}

{if $dx_stars_needs_reset ;check if a new texture is queued
   {unless {== $dx_stars none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Stars Texture to: " $dx_stars}}
      {score_meter_wipe.tex set_bitmap {sprint "ui/track/stars/score_meter_wipe_" $dx_stars ".png"}}
      {score_star_frame.tex set_bitmap {sprint "ui/track/stars/score_star_frame_" $dx_stars ".png"}}
      {score_star_gold.tex set_bitmap {sprint "ui/track/stars/score_star_gold_" $dx_stars ".png"}}
      {tour_icon.tex set_bitmap {sprint "ui/track/stars/tour_icon_" $dx_stars ".png"}}
   }
}

{if $dx_font_needs_reset ;check if a new texture is queued
   {unless {== $dx_font none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Font to: " $dx_font}}
      {"Pentatonic_Hub(5_00)4x.tex" set_bitmap {sprint "ui/track/font/Pentatonic_Hub_" $dx_font ".png"}}
   }
}

{if $dx_crowd_meter_needs_reset ;check if a new texture is queued
   {unless {== $dx_crowd_meter none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Crowd Meter Texture to: " $dx_crowd_meter}}
      {crowd_meter_frame.tex set_bitmap {sprint "ui/track/crowd_meter/crowd_meter_frame_" $dx_crowd_meter ".png"}}
      {crowd_meter_lens.tex set_bitmap {sprint "ui/track/crowd_meter/crowd_meter_lens_" $dx_crowd_meter ".png"}}
   }
}

{if $dx_rails_needs_reset ;check if a new texture is queued
   {unless {== $dx_rails none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Track Rails Texture to: " $dx_rails}}
      {smasher_plate_bracket.tex iterate_refs $ref {$ref set alpha_cut true}} ;alpha_cut fixes some specific issues where the transparant part of one texture "cuts" into another texture in use
      {beat_marker.tex set_bitmap {sprint "ui/track/rails/beat_marker_" $dx_rails ".png"}}
      {rails.tex set_bitmap {sprint "ui/track/rails/rails_" $dx_rails ".png"}}
      {rails_keyboard.tex set_bitmap {sprint "ui/track/rails/rails_" $dx_rails ".png"}}
      {rails_rg.tex set_bitmap {sprint "ui/track/rails/rails_" $dx_rails ".png"}}
      {smasher_plate_bracket.tex set_bitmap {sprint "ui/track/rails/smasher_plate_bracket_" $dx_rails ".png"}}
   }
}

{if $dx_overdrive_bar_needs_reset ;check if a new texture is queued
   {unless {== $dx_overdrive_bar none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Overdrive Texture to: " $dx_overdrive_bar}}
      {fx_rising_sun.tex set_bitmap {sprint "ui/track/overdrive_bar/fx_rising_sun_" $dx_overdrive_bar ".png"}}
      {overdrive_meter_background_fill.tex set_bitmap {sprint "ui/track/overdrive_bar/overdrive_meter_background_fill_" $dx_overdrive_bar ".png"}}
      {overdrive_meter_glass.tex set_bitmap {sprint "ui/track/overdrive_bar/overdrive_meter_glass_" $dx_overdrive_bar ".png"}}
      {player_meter_long_lens.tex set_bitmap {sprint "ui/track/overdrive_bar/player_meter_long_lens_" $dx_overdrive_bar ".png"}}
      {player_meter_long.tex set_bitmap {sprint "ui/track/overdrive_bar/player_meter_long_" $dx_overdrive_bar ".png"}}
   }
}

{if $dx_multiplier_ring_needs_reset ;check if a new texture is queued
   {unless {== $dx_multiplier_ring none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Multiplier Ring Texture to: " $dx_multiplier_ring}}
      {fx_peak_stripes.tex set_bitmap {sprint "ui/track/multiplier_ring/fx_peak_stripes_" $dx_multiplier_ring ".png"}}
      {multiplier_meter_glow.tex set_bitmap {sprint "ui/track/multiplier_ring/multiplier_meter_glow_" $dx_multiplier_ring ".png"}}
      {multiplier_meter.tex set_bitmap {sprint "ui/track/multiplier_ring/multiplier_meter_" $dx_multiplier_ring ".png"}}
      {streak_meter_bg.tex set_bitmap {sprint "ui/track/multiplier_ring/streak_meter_bg_" $dx_multiplier_ring ".png"}}
      {streak_meter_bg_vox.tex set_bitmap {sprint "ui/track/multiplier_ring/streak_meter_bg_vox_" $dx_multiplier_ring ".png"}}
      {streak_meter_lens.tex set_bitmap {sprint "ui/track/multiplier_ring/streak_meter_lens_" $dx_multiplier_ring ".png"}}
      {streak_meter_lens_vox.tex set_bitmap {sprint "ui/track/multiplier_ring/streak_meter_lens_vox_" $dx_multiplier_ring ".png"}}
      ;{streak_meter_plate_fc.tex set_bitmap {sprint "ui/track/multiplier_ring/streak_meter_plate_fc_" $dx_multiplier_ring ".png"}}
      {streak_meter_plate.tex set_bitmap {sprint "ui/track/multiplier_ring/streak_meter_plate_" $dx_multiplier_ring ".png"}}
   }
}

{if $dx_keyboard_needs_reset ;check if a new texture is queued
   {unless {== $dx_keyboard none} ;check the texture is not set to default
      {if {|| {$user get_track_type} kTrackKeys kTrackRealKeys}
         {dx_log_writer FALSE {sprint "Setting Keys Lane Texture to: " $dx_keyboard}}
         {track_lanes_keyboard.tex set_bitmap {sprint "ui/track/keyboards/track_lanes_keyboard_" $dx_keyboard ".png"}}
         {track_lanes_keyboard_press.tex set_bitmap {sprint "ui/track/keyboards/track_lanes_keyboard_press_" $dx_keyboard ".png"}}
         {gem_smasher_sharp_diffuse_nomip.tex set_bitmap {sprint "ui/track/keyboards/gem_smasher_sharp_diffuse_nomip_" $dx_keyboard ".png"}}
         {gem_mash_prokeys_ems.tex set_bitmap {sprint "ui/track/keyboards/gem_mash_prokeys_ems_" $dx_keyboard ".png"}}
         {gem_mash_prokeys.tex set_bitmap {sprint "ui/track/keyboards/gem_mash_prokeys_" $dx_keyboard ".png"}}
      }
   }
}

{if $dx_vocal_highway_needs_reset ;check if a new texture is queued
   {unless {== $dx_vocal_highway none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Vocal Highway Texture to: " $dx_vocal_highway}}
      {vocals_bg_combined.tex set_bitmap {sprint "ui/track/voxhw/vocal_bg_combined_" $dx_vocal_highway ".png"}}
      {vocal_bg_notonic.tex set_bitmap {sprint "ui/track/voxhw/vocal_bg_notonic_" $dx_vocal_highway ".png"}}
      {lyrics_bg_blue.tex set_bitmap {sprint "ui/track/voxhw/lyrics_bg_blue_" $dx_vocal_highway ".png"}}
      {lyrics_bg_brown.tex set_bitmap {sprint "ui/track/voxhw/lyrics_bg_brown_" $dx_vocal_highway ".png"}}
      {vocal_now_bar.tex set_bitmap {sprint "ui/track/voxhw/vocal_now_bar_" $dx_vocal_highway ".png"}}
   }
}
      
{if $dx_vocal_arrow_needs_reset ;check if a new texture is queued
   {unless {== $dx_vocal_arrow none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Vocal Arrow Texture to: " $dx_vocal_arrow}}
      {pitch_arrow_lead_c.tex set_bitmap {sprint "ui/track/voxarrow/arrow_lead_c_" $dx_vocal_arrow ".png"}}
      {arrow_lead_outline.tex set_bitmap {sprint "ui/track/voxarrow/arrow_lead_outline_" $dx_vocal_arrow ".png"}}
   }
}

{if $dx_vocal_notes_needs_reset ;check if a new texture is queued
   {unless {== $dx_vocal_notes none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Vocal Notes Texture to: " $dx_vocal_notes}}
      {vocal_tube_matrix.tex set_bitmap {sprint "ui/track/voxnotes/vocal_tube_matrix_" $dx_vocal_notes ".png"}}
      {talky_mask.tex set_bitmap {sprint "ui/track/voxnotes/talky_mask_" $dx_vocal_notes ".png"}}
      {vocal_tambourine_gem.tex set_bitmap {sprint "ui/track/voxnotes/vocal_tambourine_gem_" $dx_vocal_notes ".png"}}
      {buttonoff.tex set_bitmap {sprint "ui/track/voxnotes/buttonoff_" $dx_vocal_notes ".png"}}
      {buttonon.tex set_bitmap {sprint "ui/track/voxnotes/buttonon_" $dx_vocal_notes ".png"}}
   }
}

{if $dx_vocal_overdrive_needs_reset ;check if a new texture is queued
   {unless {== $dx_vocal_overdrive none} ;check the texture is not set to default
      {dx_log_writer FALSE {sprint "Setting Vocal Overdrive Texture to: " $dx_vocal_overdrive}}
      {sunburst.tex set_bitmap {sprint "ui/track/voxod/sunburst_nomip_" $dx_vocal_overdrive ".png"}}
      {VOX_now_bar_od.tex set_bitmap {sprint "ui/track/voxod/vox_now_bar_od_nomip_" $dx_vocal_overdrive ".png"}}
   }
}

;watermarking for ch mode via coloring the rails
{if {modifier_mgr is_modifier_active mod_chmode} ;if clone hero mode is currently enabled (must run last for watermark)
   {dx_log_writer FALSE {sprint "Setting CH Mode Watermark Textures - Gamemode: " $dx_gamemode}}
   {rails.tex set_bitmap "ui/track/custom_track_textures/rails_drunk.png"}
   {rails_keyboard.tex "set_bitmap ui/track/custom_track_textures/rails_drunk.png"}
   {rails_rg.tex set_bitmap "ui/track/custom_track_textures/rails_drunk.png"}
   {smasher_plate_bracket.tex set_bitmap "ui/track/custom_track_textures/smasher_plate_bracket_drunk.png"}
}

;watermarking for precision mode via coloring the rails
{if {modifier_mgr is_modifier_active mod_precision} ;if precision mode is currently enabled (must run last for watermark)
   {dx_log_writer FALSE {sprint "Setting Precision Mode Watermark Textures - Gamemode: " $dx_gamemode}}
   {rails.tex set_bitmap "ui/track/custom_track_textures/rails_precision.png"}
   {rails_keyboard.tex "set_bitmap ui/track/custom_track_textures/rails_precision.png"}
   {rails_rg.tex set_bitmap "ui/track/custom_track_textures/rails_precision.png"}
   {smasher_plate_bracket.tex set_bitmap "ui/track/custom_track_textures/smasher_plate_bracket_precision.png"}
}

;after all of the queued texture updates are completed, set them to false so they do not run again until a new texture is queued via overshell
{set $dx_overdrive_guitar_needs_reset FALSE}
{set $dx_overdrive_bass_needs_reset FALSE}
{set $dx_overdrive_drum_needs_reset FALSE}
{set $dx_overdrive_keys_needs_reset FALSE}
{set $dx_streak_guitar_needs_reset FALSE}
{set $dx_streak_bass_needs_reset FALSE}
{set $dx_streak_drum_needs_reset FALSE}
{set $dx_streak_keys_needs_reset FALSE}
{set $dx_highway_guitar_needs_reset FALSE}
{set $dx_highway_bass_needs_reset FALSE}
{set $dx_highway_drum_needs_reset FALSE}
{set $dx_highway_keys_needs_reset FALSE}
{set $dx_crowd_meter_needs_reset FALSE}
{set $dx_multiplier_ring_needs_reset FALSE}
{set $dx_overdrive_bar_needs_reset FALSE}
{set $dx_rails_needs_reset FALSE}
{set $dx_score_box_needs_reset FALSE}
{set $dx_stars_needs_reset FALSE}
{set $dx_font_needs_reset FALSE}
{set $dx_flames_needs_reset FALSE}
{set $dx_smasher_needs_reset FALSE}
{set $dx_gem_needs_reset FALSE}
{set $dx_sustain_needs_reset FALSE}
{set $dx_vocal_arrow_needs_reset FALSE}
{set $dx_vocal_highway_needs_reset FALSE}
{set $dx_vocal_notes_needs_reset FALSE}
{set $dx_vocal_overdrive_needs_reset FALSE}
{set $dx_animated_gem_needs_reset FALSE}
{set $dx_texloadonce TRUE} ;indicates textures have been loaded this session
{dx_log_writer FALSE {sprint "Custom Track Textures Successfully Set - Gamemode: " $dx_gamemode}}
}
)