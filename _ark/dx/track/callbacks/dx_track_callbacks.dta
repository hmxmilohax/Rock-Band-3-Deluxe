{new Object fc_callback ;the main callback for all instruments
   (hit ;when a note is hit
      {coop_track_panel dx_set_star_display_pos}
      {dx_brutal_mode {modifier_mgr is_modifier_active mod_brutalmode}}
      {if {>= $speedmod $speedmod_top} ;if our current speed is higher than the top speed the player has reached in this run
         {set $speedmod_top $speedmod} ;set the top reached speed to the current speed
      }
      {dx_acceleration_mode 1}
      {dx_check_for_high_score $dx_high_score_report}
   )
   (miss ;when a note is missed (overstrum)
      {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
         {switch {$player instrument} ;switch based off the currently loaded instrument
            (bass {unless {! $bass_firstnote} {dx_miss_fc_remover {$player instrument}}})
            (real_guitar {unless {! $real_guitar_firstnote} {dx_miss_fc_remover {$player instrument}}})
            (real_bass {unless {! $real_bass_firstnote} {dx_miss_fc_remover {$player instrument}}})
            (keys {unless {! $keys_firstnote} {dx_miss_fc_remover {$player instrument}}})
            (real_keys {unless {! $real_keys_firstnote} {dx_miss_fc_remover {$player instrument}}})
            (guitar {unless {! $guitar_firstnote} {dx_miss_fc_remover {$player instrument}}})
            (drum {unless {! $drum_firstnote} {dx_miss_fc_remover {$player instrument}}})
            (real_drum {unless {! $real_drum_firstnote} {dx_miss_fc_remover {$player instrument}}})
         }
      }
      {dx_acceleration_mode 0}
      {dx_perfection_resetter {modifier_mgr is_modifier_active mod_perfection}}
   )
   (pass ;when a note is passed (ignored)
      {beatmatch foreach_active_player $player
         {dx_miss_fc_remover {$player instrument}} ;logic to remove the fc indicator upon miss/pass
      }
      {dx_acceleration_mode 0}
      {dx_perfection_resetter {modifier_mgr is_modifier_active mod_perfection}}
   )
   (num_gems_hit 0) ;default setup state and storage for note counters
   (num_gems_combo 0) ;default setup state and storage for note counters
   (num_gems_miss 0) ;default setup state and storage for note counters
   (num_gems_pass 0) ;default setup state and storage for note counters
}
{func dx_create_instrument_callback
   ($instrument)
   {if {exists {sprint "fc_" $instrument "_callback"}} ;delete the object and recreate it if already exists
      {delete {sprint "fc_" $instrument "_callback"}}
   }
   {new Object {sprint "fc_" $instrument "_callback"}
      (track_instrument none)
      (hit ;when a note is hit
         {$this first_note}
         {$this check_fc} ;run the logic to check if we are in an fc or not
         {set [num_gems_hit] {'+' [num_gems_hit] 1}} ;increment the notes hit counter
         {set [num_gems_combo] {'+' [num_gems_combo] 1}} ;increment the notes comboed counter
         {dx_store_note_hit_info [track_instrument] [num_gems_hit] [num_gems_combo] [num_gems_pass] [num_gems_miss]}
         {dx_check_for_streak_popup $dx_note_streak_popups [track_instrument] [num_gems_combo]}
         {dx_indv_note_streak $dx_highway_streak_text [track_instrument]}
      )
      (miss ;when a note is missed (overstrum)
         {if {dx_check_first_note [track_instrument]}
            {set [num_gems_miss] {'+' [num_gems_miss] 1}} ;increment the notes missed counter
            {set [num_gems_combo] 0} ;reset the notes comboed counter
            {dx_store_note_hit_info [track_instrument] [num_gems_hit] [num_gems_combo] [num_gems_pass] [num_gems_miss]}
            {$this check_missed} ;run the logic to check our current misses
            {dx_indv_note_streak $dx_highway_streak_text [track_instrument]}
         }
      )
      (pass ;when a note is passed (ignored)
         {$this first_note}
         {set [num_gems_pass] {'+' [num_gems_pass] 1}} ;increment the notes passed counter
         {set [num_gems_combo] 0} ;reset the notes comboed counter
         {dx_store_note_hit_info [track_instrument] [num_gems_hit] [num_gems_combo] [num_gems_pass] [num_gems_miss]}
         {$this check_missed} ;run the logic to check our current misses
         {dx_acceleration_mode 0}
         {dx_indv_note_streak $dx_highway_streak_text [track_instrument]}
      )
      (first_note
         {if {! {dx_check_first_note [track_instrument]}} ;if the first note has not been hit/missed/passed yet, track that the first note has been hit/missed/passed
            {set [num_gems_hit] 0} {set [num_gems_miss] 0} {set [num_gems_pass] 0} {set [num_gems_combo] 0}
            {dx_set_first_note [track_instrument]}
         }
      )
      (check_fc
         {$this check_missed} ;run the logic to check our current misses
         {dx_fc_glow_enabler $dx_fc_glow [track_instrument] [num_gems_pass] [num_gems_miss]}
      )
      (check_missed
         {dx_fc_glow_disabler $dx_fc_glow [track_instrument] [num_gems_pass] [num_gems_miss]}
      )
      (num_gems_hit 0) ;default setup state and storage for note counters
      (num_gems_combo 0) ;default setup state and storage for note counters
      (num_gems_miss 0) ;default setup state and storage for note counters
      (num_gems_pass 0) ;default setup state and storage for note counters
   }
   {{sprint "fc_" $instrument "_callback"} set track_instrument $instrument} ;finally, apply the correct instrument to the object
}
{new Object dx_streak_callback
   (hit {$this update_streak})
   (miss {$this update_streak})
   (pass {$this update_streak})
   (fetch_all_streaks
      {beatmatch foreach_active_player $player ;iterate through each player, grab the combo from the relevant callback, add them all together
         {switch {$player instrument}
            (bass
               {if {! $bass_finalnote}
                  {set $dx_streak 0}
                  {set $dx_streak {+ $dx_streak $num_gems_combo_bass}}
               }
            )
            (real_guitar
               {if {! $real_guitar_finalnote}
                  {set $dx_streak 0}
                  {set $dx_streak {+ $dx_streak $num_gems_combo_real_guitar}}
               }
            )
            (real_bass
               {if {! $real_bass_finalnote}
                  {set $dx_streak 0}
                  {set $dx_streak {+ $dx_streak $num_gems_combo_real_bass}}
               }
            )
            (keys
               {if {! $keys_finalnote}
                  {set $dx_streak 0}
                  {set $dx_streak {+ $dx_streak $num_gems_combo_keys}}
               }
            )
            (real_keys
               {if {! $real_keys_finalnote}
                  {set $dx_streak 0}
                  {set $dx_streak {+ $dx_streak $num_gems_combo_real_keys}}
               }
            )
            (guitar
               {if {! $guitar_finalnote}
                  {set $dx_streak 0}
                  {set $dx_streak {+ $dx_streak $num_gems_combo_guitar}}
               }
            )
            (drum
               {if {! $drum_finalnote}
                  {set $dx_streak 0}
                  {set $dx_streak {+ $dx_streak $num_gems_combo_drum}}
               }
            )
            (real_drum
               {if {! $real_drum_finalnote}
                  {set $dx_streak 0}
                  {set $dx_streak {+ $dx_streak $num_gems_combo_real_drum}}
               }
            )
         }
      }
   )
   (update_streak
      {if {! {gamemode in_mode trainer}}
         {if {== $dx_streak_counter off}
            {dx_game_hud_label dx_hud_label_band_streak $dx_hud_band_streak_text_size $dx_hud_band_streak_text_font $dx_hud_band_streak_text_alignment $dx_hud_band_streak_text_kerning $dx_hud_band_streak_text_x $dx_hud_band_streak_text_z $dx_hud_band_streak_text_y $dx_hud_band_streak_text_r $dx_hud_band_streak_text_g $dx_hud_band_streak_text_b TRUE}
         }
         {if
            {||
               {&& {== $dx_streak_counter single} {== $dx_num_active_instruments 1}}
               {&& {== $dx_streak_counter multi} {> $dx_num_active_instruments 0}}
            }
            {do
               {$this fetch_all_streaks}
               {set_this {coop_track_panel find scoreboard}}
               {if_else {> $dx_streak 0}
                  {dx_hud_label_band_streak.lbl set_token_fmt os_blnk}
                  {dx_hud_label_band_streak.lbl set_token_fmt os_blnk}
               }
               {if_else
                  {&&
                     {== {'+' $num_gems_miss_guitar $num_gems_pass_guitar} 0}
                     {== {'+' $num_gems_miss_bass $num_gems_pass_bass} 0}
                     {== {'+' $num_gems_miss_drum $num_gems_pass_drum} 0}
                     {== {'+' $num_gems_miss_keys $num_gems_pass_keys} 0}
                     {== {'+' $num_gems_miss_real_guitar $num_gems_pass_real_guitar} 0}
                     {== {'+' $num_gems_miss_real_bass $num_gems_pass_real_bass} 0}
                     {== {'+' $num_gems_miss_real_drum $num_gems_pass_real_drum} 0}
                     {== {'+' $num_gems_miss_real_keys $num_gems_pass_real_keys} 0}
                  }
                  {dx_hud_label_band_streak.color set color {pack_color $dx_gold_ui_r $dx_gold_ui_g $dx_gold_ui_b}}
                  {dx_hud_label_band_streak.color set color {pack_color $dx_hud_band_streak_text_r $dx_hud_band_streak_text_g $dx_hud_band_streak_text_b}}
               }
            }
         }
      }
   )
}