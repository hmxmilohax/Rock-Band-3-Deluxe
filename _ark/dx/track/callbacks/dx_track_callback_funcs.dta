{func
   dx_acceleration_mode
   ($miss_or_hit)
   {if {modifier_mgr is_modifier_active mod_fastermode} ;check if we are in acceleration mode
      {switch $miss_or_hit
         (0
            {unless {<= $speedmod $leaderspeed}
               {set $speedmod {- $speedmod 0.004}}
            }
         )
         (1
            {unless {>= $speedmod $speedmod_cap}
               {set $speedmod {+ $speedmod 0.002}}
            }
         )
      }
      {beatmatch set_music_speed $speedmod}
      {dx_mtv_setup_text}
   }
}

{func
   dx_store_note_hit_info
   ($instrument $num_gems_hit $num_gems_combo $num_gems_pass $num_gems_miss)
   {switch $instrument
      (guitar
         {set $num_gems_hit_guitar $num_gems_hit}
         {set $num_gems_combo_guitar $num_gems_combo}
         {set $num_gems_pass_guitar $num_gems_pass}
         {set $num_gems_miss_guitar $num_gems_miss}
      )
      (bass
         {set $num_gems_hit_bass $num_gems_hit}
         {set $num_gems_combo_bass $num_gems_combo}
         {set $num_gems_pass_bass $num_gems_pass}
         {set $num_gems_miss_bass $num_gems_miss}
      )
      (drum
         {set $num_gems_hit_drum $num_gems_hit}
         {set $num_gems_combo_drum $num_gems_combo}
         {set $num_gems_pass_drum $num_gems_pass}
         {set $num_gems_miss_drum $num_gems_miss}
      )
      (keys
         {set $num_gems_hit_keys $num_gems_hit}
         {set $num_gems_combo_keys $num_gems_combo}
         {set $num_gems_pass_keys $num_gems_pass}
         {set $num_gems_miss_keys $num_gems_miss}
      )
      (real_guitar
         {set $num_gems_hit_real_guitar $num_gems_hit}
         {set $num_gems_combo_real_guitar $num_gems_combo}
         {set $num_gems_pass_real_guitar $num_gems_pass}
         {set $num_gems_miss_real_guitar $num_gems_miss}
      )
      (real_bass
         {set $num_gems_hit_real_bass $num_gems_hit}
         {set $num_gems_combo_real_bass $num_gems_combo}
         {set $num_gems_pass_real_bass $num_gems_pass}
         {set $num_gems_miss_real_bass $num_gems_miss}
      )
      (real_drum
         {set $num_gems_hit_real_drum $num_gems_hit}
         {set $num_gems_combo_real_drum $num_gems_combo}
         {set $num_gems_pass_real_drum $num_gems_pass}
         {set $num_gems_miss_real_drum $num_gems_miss}
      )
      (real_keys
         {set $num_gems_hit_real_keys $num_gems_hit}
         {set $num_gems_combo_real_keys $num_gems_combo}
         {set $num_gems_pass_real_keys $num_gems_pass}
         {set $num_gems_miss_real_keys $num_gems_miss}
      )
   }
}

{func
   dx_adjust_streak_popup_interval
   ($instrument $num_gems_combo)
   {set $interval {if_else {>= $num_gems_combo 50} 100 50}} ;adjust interval higher or lower based on combo
   {switch $instrument ;specify interval to the specific instrument
      (guitar {set $dx_streak_interval_guitar $interval})
      (bass {set $dx_streak_interval_bass $interval})
      (drum {set $dx_streak_interval_drum $interval})
      (keys {set $dx_streak_interval_keys $interval})
      (real_guitar {set $dx_streak_interval_real_guitar $interval})
      (real_bass {set $dx_streak_interval_real_bass $interval})
      (real_drum {set $dx_streak_interval_real_drum $interval})
      (real_keys {set $dx_streak_interval_real_keys $interval})
   }
   $interval ;return interval
}
{func
   dx_note_streak_popup
   ($instrument $num_gems_combo)
   {set $dx_bpm {* {* 60 {/ 1 {- {beat_to_seconds {+ {int {+ 0.5 {seconds_to_beat {/ {beatmatch get_song_ms} 1000}}}} 1}} {beat_to_seconds {int {+ 0.5 {seconds_to_beat {/ {beatmatch get_song_ms} 1000}}}}}}}} $speedmod}} ;grab current bpm same way the bpm counter does but not dependent on it
   {set $dx_streak_timer 4} ;fallback if somehow the cond fails to set something
   {cond
      ({< $dx_bpm 100} {set $dx_streak_timer 3})
      ({&& {> $dx_bpm 100} {< $dx_bpm 160}} {set $dx_streak_timer 4})
      ({&& {> $dx_bpm 160} {< $dx_bpm 220}} {set $dx_streak_timer 6})
      ({&& {> $dx_bpm 220} {< $dx_bpm 280}} {set $dx_streak_timer 8})
      ({&& {> $dx_bpm 280} {< $dx_bpm 340}} {set $dx_streak_timer 12})
      ({> $dx_bpm 340} {set $dx_streak_timer 18})
   }
   {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
      {unless {== {$player instrument} vocals}
         {if {== {$player instrument} $instrument}
            {if {find_obj DX_GEMTRACKDIR player_feedback}
               {set_this {find_obj DX_GEMTRACKDIR player_feedback}}
               {super_streak_start.trig trigger}
               {switch $instrument
                  (bass {bass_super_streak.lbl set_token_fmt dx_note_streak $num_gems_combo_bass})
                  (real_guitar {bass_super_streak.lbl set_token_fmt dx_note_streak $num_gems_combo_real_guitar})
                  (real_bass {bass_super_streak.lbl set_token_fmt dx_note_streak $num_gems_combo_real_bass})
                  (keys {bass_super_streak.lbl set_token_fmt dx_note_streak $num_gems_combo_keys})
                  (real_keys {bass_super_streak.lbl set_token_fmt dx_note_streak $num_gems_combo_real_keys})
                  (guitar {bass_super_streak.lbl set_token_fmt dx_note_streak $num_gems_combo_guitar})
                  (drum {bass_super_streak.lbl set_token_fmt dx_note_streak $num_gems_combo_drum})
                  (real_drum {bass_super_streak.lbl set_token_fmt dx_note_streak $num_gems_combo_real_drum})
               }
               {script_task
                  kTaskBeats
                  (delay $dx_streak_timer)
                  (script {dx_note_streak_remover $player $instrument})
               }
            }
         }
      }
   }
}
{func
   dx_check_for_streak_popup
   ($enabled $instrument $num_gems_combo)
   {if {&& $enabled {! {gamemode in_mode trainer}}}
      {if {== {mod $num_gems_combo {dx_adjust_streak_popup_interval $instrument $num_gems_combo}} 0}
         {dx_note_streak_popup $instrument $num_gems_combo}
      }
   }
}
{func
   dx_fc_glow_enabler
   ($enabled $instrument $num_gems_pass $num_gems_miss)
   {if $enabled
      {if {== {'+' $num_gems_pass $num_gems_miss} 0}
         {beatmatch foreach_active_player $player ;dx - add our custom fc checking callbacks to the currently loaded player
            {if {== {$player instrument} $instrument}
               {set_this {find_obj DX_GEMTRACKDIR streak_meter}}
               {star_deploy.trig trigger}
            }
         }
      }
   }
}
{func
   dx_check_first_miss
   ($instrument)
   {set $this_missed_once
      {switch $instrument
          (guitar $guitar_missed_once)
          (bass $bass_missed_once)
          (drum $drum_missed_once)
          (keys $keys_missed_once)
          (real_guitar $real_guitar_missed_once)
          (real_bass $real_bass_missed_once)
          (real_drum $real_drum_missed_once)
          (real_keys $real_keys_missed_once)
      }
   }
   $this_missed_once
}
{func
   dx_set_first_miss
   ($instrument)
   {switch $instrument
       (guitar {set $guitar_missed_once TRUE})
       (bass {set $bass_missed_once TRUE})
       (drum {set $drum_missed_once TRUE})
       (keys {set $keys_missed_once TRUE})
       (real_guitar {set $real_guitar_missed_once TRUE})
       (real_bass {set $real_bass_missed_once TRUE})
       (real_drum {set $real_drum_missed_once TRUE})
       (real_keys {set $real_keys_missed_once TRUE})
   }
}
{func
   dx_fc_glow_disabler
   ($enabled $instrument $num_gems_pass $num_gems_miss)
   {if $enabled
      {if {> {'+' $num_gems_pass $num_gems_miss} 0}
         {beatmatch foreach_active_player $player
            {if {== {$player instrument} $instrument}
               {set_this {find_obj DX_GEMTRACKDIR streak_meter}}
               {if {! {dx_check_first_miss $instrument}}
                  {dx_set_first_miss $instrument}
                  {end_streak.trig trigger}
               }
               {star_deploy_stop.trig trigger}
            }
         }
      }
   }
}
{func
   dx_track_this_missed
   ($instrument)
   {switch $instrument
      (bass {if {! $bass_caughtmissed} {set $bass_caughtmissed TRUE}})
      (real_guitar {if {! $real_guitar_caughtmissed} {set $real_guitar_caughtmissed TRUE}})
      (real_bass {if {! $real_bass_caughtmissed} {set $real_bass_caughtmissed TRUE}})
      (keys {if {! $keys_caughtmissed} {set $keys_caughtmissed TRUE}})
      (real_keys {if {! $real_keys_caughtmissed} {set $real_keys_caughtmissed TRUE}})
      (guitar {if {! $guitar_caughtmissed} {set $guitar_caughtmissed TRUE}})
      (drum {if {! $drum_caughtmissed} {set $drum_caughtmissed TRUE}})
      (real_drum {if {! $real_drum_caughtmissed} {set $real_drum_caughtmissed TRUE}})
   }
}
{func
   dx_miss_fc_remover
   ($instrument)
   {unless {coop_track_panel get dx_is_nohud} ; this could break if someone were to disable performance mode mid song
      {set_this coop_track_panel}
      {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
         {if {== {$player instrument} $instrument}
            {dx_track_this_missed $instrument}
            {fcframe.tex iterate_refs $ref {$ref set diffuse_tex multframe.tex}} ;remove the FC ring and replace it with the normal ring (the player just missed)
         }
      }
   }
}
{func
   dx_perfection_resetter
   ($enabled)
   {if {&& {session_mgr is_local} $enabled}
      {script_task kTaskSeconds (delay 0.5)
         (script
            {if_else {gamemode in_mode trainer}
               {{gamemode get game_panel} restart_section}
               {do
                  {dx_countdown_var_reset}
                  {session end_game kRestart}
               }
            }
         )
      }
   }
}
{func
   dx_check_first_note
   ($instrument)
   {set $this_first_note
      {switch $instrument
          (guitar $guitar_firstnote)
          (bass $bass_firstnote)
          (drum $drum_firstnote)
          (keys $keys_firstnote)
          (real_guitar $real_guitar_firstnote)
          (real_bass $real_bass_firstnote)
          (real_drum $real_drum_firstnote)
          (real_keys $real_keys_firstnote)
      }
   }
   $this_first_note
}
{func
   dx_set_first_note
   ($instrument)
   {switch $instrument
       (guitar {set $guitar_firstnote TRUE})
       (bass {set $bass_firstnote TRUE})
       (drum {set $drum_firstnote TRUE})
       (keys {set $keys_firstnote TRUE})
       (real_guitar {set $real_guitar_firstnote TRUE})
       (real_bass {set $real_bass_firstnote TRUE})
       (real_drum {set $real_drum_firstnote TRUE})
       (real_keys {set $real_keys_firstnote TRUE})
   }
}
{func dx_track_label
   ($name $size $font $alignment $kerning $x $y $r $g $b $reset)
   {set_this {find_obj {{get_track_panel} loaded_dir} {sprint "track_" {{$player get_user} get_slot_num}}}}
   {set $thislabel {sprint $name {{$player get_user} get_slot_num} ".lbl"}}
   {set $thiscolor {sprint $name {{$player get_user} get_slot_num} ".color"}}
   {if $reset
      {if {exists $thislabel}
         {delete $thislabel}
      }
      {if {exists $thiscolor}
         {delete $thiscolor}
      }
   }
   {if {! {exists $thislabel}}
      {new BandLabel $thislabel}
      {$thislabel set resource_name $font}
      {$thislabel set alt_font_resource_name instruments_icons}
      {$thislabel set markup TRUE}
      {$thislabel set alt_text_size 3.3}
      {$thislabel set alt_z_offset 0}
      {$thislabel set_showing TRUE}
      {$thislabel set_local_scale 1 1 1}
      {$thislabel set_local_rot 0 0 0}
      {$thislabel set text_size $size}
      {$thislabel set alignment $alignment}
      {$thislabel set width 500}
      {$thislabel set height 500}
      {$thislabel set alpha 1}
      {$thislabel set kerning $kerning}
      {meters.grp add_object $thislabel}
      {$thislabel set_token_fmt os_blnk}
   }
   {if {! {exists $thiscolor}}
      {new UIColor $thiscolor}
      {$thislabel set color_override $thiscolor}
   }
   {$thiscolor set color {pack_color $r $g $b}}
   {$thislabel set_local_pos $x 0 $y}
}
{func dx_game_hud_label
   ($name $size $font $alignment $kerning $x $z $y $r $g $b $reset)
   {set_this {coop_track_panel find scoreboard}}
   {set $thislabel {sprint $name ".lbl"}}
   {set $thiscolor {sprint $name ".color"}}
   {if $reset
      {if {exists $thislabel}
         {delete $thislabel}
      }
      {if {exists $thiscolor}
         {delete $thiscolor}
      }
   }
   {if {! {exists $thislabel}}
      {new BandLabel $thislabel}
      {$thislabel set resource_name $font}
      {$thislabel set_showing TRUE}
      {$thislabel set_local_scale 1 1 1}
      {$thislabel set_local_rot 0 0 0}
      {$thislabel set text_size $size}
      {$thislabel set alignment $alignment}
      {$thislabel set width 500}
      {$thislabel set height 500}
      {$thislabel set alpha 1}
      {$thislabel set kerning $kerning}
      {numbers.grp add_object $thislabel}
      {numbers.grp set_showing TRUE}
      {$thislabel set_token_fmt os_blnk}
   }
   {if {! {exists $thiscolor}}
      {new UIColor $thiscolor}
      {$thislabel set color_override $thiscolor}
   }
   {$thiscolor set color {pack_color $r $g $b}}
   {$thislabel set_local_pos $x $z $y}
}
{func dx_track_label_streak
   ($name $size $font $alignment $kerning $r $g $b $reset)
   {set_this {find_obj {{get_track_panel} loaded_dir} {sprint "track_" {{$player get_user} get_slot_num}} band_power_meter}}
   {set $thislabel {sprint $name {{$player get_user} get_slot_num} ".lbl"}}
   {set $thiscolor {sprint $name {{$player get_user} get_slot_num} ".color"}}
   {if $reset
      {if {exists $thislabel}
         {delete $thislabel}
      }
      {if {exists $thiscolor}
         {delete $thiscolor}
      }
   }
   {if {! {exists $thislabel}}
      {new BandLabel $thislabel}
      {$thislabel set resource_name $font}
      {$thislabel set alt_font_resource_name instruments_icons}
      {$thislabel set markup TRUE}
      {$thislabel set alt_text_size 3.3}
      {$thislabel set alt_z_offset 0}
      {$thislabel set_showing TRUE}
      {$thislabel set_local_scale 1 1 1}
      {$thislabel set_local_rot 0 0 0}
      {$thislabel set text_size 1}
      {$thislabel set alignment kMiddleCenter}
      {$thislabel set width 500}
      {$thislabel set height 500}
      {$thislabel set alpha 1}
      {$thislabel set kerning $kerning}
      {tour_flag.grp add_object $thislabel}
      ;{$thislabel set_token_fmt os_blnk}
   }
   {if {! {exists $thiscolor}}
      {new UIColor $thiscolor}
      {$thislabel set color_override $thiscolor}
   }
   {$thiscolor set color {pack_color $r $g $b}}
}
{func dx_track_label_instrument
   ($name $instrument $slot $reset)
   {set_this {find_obj {{get_track_panel} loaded_dir} {sprint "track_" $slot} band_power_meter}}
   {set $thislabel {sprint $name $slot ".lbl"}}
   {set $thiscolor {sprint $name $slot ".color"}}
   {if $reset
      {if {exists $thislabel}
         {delete $thislabel}
      }
      {if {exists $thiscolor}
         {delete $thiscolor}
      }
   }
   {if {! {exists $thislabel}}
      {new BandLabel $thislabel}
      {$thislabel set resource_name pentatonic_outline}
      {$thislabel set alt_font_resource_name instruments_icons}
      {$thislabel set alt_style_enabled TRUE}
      {$thislabel set markup TRUE}
      {$thislabel set alt_text_size 3}
      {$thislabel set alt_z_offset 0}
      {$thislabel set_showing TRUE}
      {$thislabel set_local_scale 1 1 1}
      {$thislabel set_local_rot -60 0 5}
      {$thislabel set text_size 1}
      {$thislabel set alignment kMiddleCenter}
      {$thislabel set width 500}
      {$thislabel set height 500}
      {$thislabel set alpha 1}
      {$thislabel set kerning 1}
      {tour_flag.grp add_object $thislabel}
      {$thislabel set_token_fmt os_blnk}
      {$thislabel set_local_pos 11.13 0 -2.42}
   }
   {if {! {exists $thiscolor}}
      {new UIColor $thiscolor}
      {$thislabel set color_override $thiscolor}
   }
   {$thiscolor set color {pack_color 1 1 1}}
}