DX_LOG_CLEAR
{func
   dx_log_writer
   ($dx_log_writer)
   #ifndef HX_WII
   {if {modifier_mgr is_modifier_active mod_dx_logging}
      {do
         DX_GAMEMODE_CHECKER
         {if_else {file_exists LOG_FILE_PATH}
            {set $dx_log_reader {read_file LOG_FILE_PATH}}
            {set $dx_log_reader ("start of log")}
         }
         {if {== $dx_log_counter 3}
            {push_back $dx_log_reader "Game Entered three times, starting new log."}
            {write_file PREV_LOG_FILE_PATH $dx_log_reader}
            {set $dx_log_counter 0}
            {set $dx_log_reader ({sprint "Game Entered three times, log reset. Number of songs completed this session: " $dx_num_songs_this_session})}
         }
         {push_back $dx_log_reader $dx_log_writer}
         {write_file LOG_FILE_PATH
            {array
               $dx_log_reader
            }
         }
      }
   }
   #endif
}
DX_JSON_CLEAR
DX_CURRENT_SONG_CLEAR
;sets default all instruments highway. must set variable to TRUE, name your selected texture
;list can be found in _ark\ui\track\highways\highways.dta
{set $highway none}

;sets default guitar highway. same as above.
{set $highwaygtr none}

;sets default bass highway. same as above.
{set $highwaybass none}

;sets default drum highway. same as above.
{set $highwaydrum none}

;sets default keys highway. same as above.
{set $highwaykeys none}

;sets default all instruments spotlight (any instrument max multiplier).
;list can be found in _ark\ui\track\spotlights\spotlights.dta
{set $spotlight none}

;sets default guitar spotlight. same as above.
{set $spotlightgtr none}

;sets default bass spotlight. same as above.
{set $spotlightbass none}

;sets default drums spotlight. same as above.
{set $spotlightdrum none}

;sets default keys spotlight. same as above.
{set $spotlightkeys none}

;sets default all instruments emissive (in overdrive texture).
;list can be found in _ark\ui\track\emissives\emissives.dta
{set $emissive none}

;sets default guitar emissive. same as above.
{set $emissivegtr none}

;sets default bass emissive. same as above.
{set $emissivebass none}

;sets default drums emissive. same as above.
{set $emissivedrum none}

;sets default keys emissive. same as above.
{set $emissivekeys none}

;sets default keyboard track colors.
;list can be found in _ark\ui\track\keyboards\keyboards.dta
{set $keyboard none}

;sets default smasher track textures.
;list can be found in _ark\ui\track\smashers\smashers.dta
{set $smasher none}

;sets default gem track textures.
;list can be found in _ark\ui\track\gems\gems.dta
{set $gem none}

;sets default sustaom track textures.
;list can be found in _ark\ui\track\sustains\sustains.dta
{set $sustain none}

;sets default crowd meter track textures.
;list can be found in _ark\ui\track\crowd_meter\crowd_meter.dta
{set $crowdmeter none}

;sets default multiplier ring track textures.
;list can be found in _ark\ui\track\multiplier_ring\multiplier_ring.dta
{set $multiring none}

;sets default overdrive bar track textures.
;list can be found in _ark\ui\track\overdrive_bar\overdrive_bar.dta
{set $odbar none}

;sets default track rails track textures.
;list can be found in _ark\ui\track\rails\rails.dta
{set $rails none}

;sets default score track textures.
;list can be found in _ark\ui\track\score\score.dta
{set $scoretex none}

;sets default flames track textures.
;list can be found in _ark\ui\track\flames\flames.dta
;no flames: noflm
{set $flames none}

;sets default vocal arrow track textures.
;list can be found in _ark\ui\track\voxarrow\voxarrow.dta
{set $voxarrow none}

;sets default vocal highway track textures.
;list can be found in _ark\ui\track\voxhw\voxhw.dta
{set $voxhw none}

;enable custom track angles
{set $dx_forcedx_multiangle FALSE}

;sets default track angle
{set $dx_multiangle 1}

;sets full combo sound effect.
;list can be found in _ark\ui\endgame\fullcombo.dta
{set $fcsfx goul-nug_fc}

;sets default track speed. 1.15 is 115%, 1.30 is 130% and so on.
{set $trackspeed 1.0}

;sets default song speed 1.15 is 115%, 1.30 is 130% and so on.
{set $speedmod 1.0}
{set $speedmod_cap 1.5}



;set default venue fps.
{set $emulatefps 30}

;animated texture name. must have ran "enable_animation.bat" first. current animated gems are
;rb4
{set $animatedgemname none}

;chooses which main menu to load, if you dont like the new one, vanilla is "3"
;valid sv values are 2, 3, 4, 5, 7, 8
{set $svnumber 8}

;set default volumes for mics
;0-11, default is "8"
{set $mic_vol_1 8}
{set $mic_vol_2 8}
{set $mic_vol_3 8}

;set default colors for notes
;5 is overdrive (white)
{set $slot1_color 0} ;green
{set $slot2_color 1} ;red
{set $slot3_color 2} ;yellow
{set $slot4_color 3} ;blue
{set $slot5_color 4} ;orange

;set default colors for frets
{set $dx_fret1_color 0} ;green
{set $dx_fret2_color 1} ;red
{set $dx_fret3_color 2} ;yellow
{set $dx_fret4_color 3} ;blue
{set $dx_fret5_color 4} ;orange

;set default colors for sustains
;5 is overdrive (white)
{set $sus1_color 0} ;green
{set $sus2_color 1} ;red
{set $sus3_color 2} ;yellow
{set $sus4_color 3} ;blue
{set $sus5_color 4} ;orange

;set default colors for tom notes
;4 is overdrive (white)
{set $drum1_color 0} ;red
{set $drum2_color 1} ;yellow
{set $drum3_color 2} ;blue
{set $drum4_color 3} ;green

;set default colors for kick note
;1 is overdrive (white)
{set $kick_color 0} ;orange

;set default colors for cymbal notes
;4 is overdrive (white)
{set $cym1_color 0} ;red
{set $cym2_color 1} ;yellow
{set $cym3_color 2} ;blue
{set $cym4_color 3} ;green

;set default colors for drum smashers (frets)
{set $dx_smasher1_color 0} ;red
{set $dx_smasher2_color 1} ;yellow
{set $dx_smasher3_color 2} ;blue
{set $dx_smasher4_color 3} ;green

{set $dx_protar_color1 0}
{set $dx_protar_color2 1}
{set $dx_protar_color3 2}
{set $dx_protar_color4 3}
{set $dx_protar_color5 4}
{set $dx_protar_color6 5}

;set default colors for overdrive textures (gold)
{set $emissive_r 0.71}
{set $emissive_g 0.54}
{set $emissive_b 0.0}

;set default colors for overdrive textures (gold)
{set $spotlight_r 0.05}
{set $spotlight_g 0.40}
{set $spotlight_b 0.69}

;set default part selection per slot
{set $default_slot0 overshell_guitar}      ;Slot 1
{set $default_slot1 overshell_drums}       ;Slot 2
{set $default_slot2 overshell_vocal_solo}  ;Slot 3
{set $default_slot3 overshell_bass}        ;Slot 4

{set $dx_bot_1 TRUE}
{set $dx_bot_2 TRUE}
{set $dx_bot_3 TRUE}
{set $dx_bot_4 TRUE}
{set $dx_bot_5 TRUE}
{set $dx_bot_overdrive dx_on}

{set $dx_bot_skill 11}

;log stuff
{set $mod_dx_logging TRUE}
{set $dx_num_songs_this_session 0}
{set $dx_gamemode init}

;currentsong formatting defauts
{set $dx_currentsong_prefix TRUE}
{set $dx_currentsong_year TRUE}
{set $dx_currentsong_yearonline TRUE}
{set $dx_currentsong_album TRUE}
{set $dx_currentsong_genre TRUE}
{set $dx_currentsong_source TRUE}

#ifndef HX_WII
{if {file_exists #ifdef HX_XBOX "GAME:/dx.dta" #endif #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/dx.dta" #endif} INIT_DX_READER}

{if {file_exists #ifdef HX_XBOX "GAME:/mod.dta" #endif #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/mod.dta" #endif} INIT_MOD_READER}

{if {file_exists #ifdef HX_XBOX "GAME:/val.dta" #endif #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/val.dta" #endif} INIT_VAL_READER}
#endif

#ifdef HX_PS3
DX_PS3_HW_DETECTION
#endif

;developer settings below do not modify
{set $screensaver TRUE}

{set $gotcha TRUE}

{set $leaderspeed $speedmod}

{unless {== $venue VENUES} {set $force TRUE}}

{if {== $venue 0}
   {set $venue VENUES}
   {set $force FALSE}
}

{set $bootpostfxtoggled FALSE}
{set $toggledthisboot FALSE}
{set $dx_no_message_sound FALSE}
{if {modifier_mgr is_modifier_active mod_current_song_logging}
   {unless {modifier_mgr is_modifier_active mod_songtitlestats}
      {modifier_mgr toggle_modifier_enabled mod_songtitlestats} ;turn on song title stats if using this modifier
   }
}

;reset textures if set to rb3
{do DX_TEXTURE_RESET_HANDLER}

{unless {== $spotlight none} {set $spotlightcustomtexture TRUE}}

{unless {== $spotlightgtr none} {set $spotlightgtrcustomtexture TRUE}}

{unless {== $spotlightbass none} {set $spotlightbasscustomtexture TRUE}}

{unless {== $spotlightdrum none} {set $spotlightdrumcustomtexture TRUE}}

{unless {== $spotlightkeys none} {set $spotlightkeyscustomtexture TRUE}}

{unless {== $emissive none} {set $emissivecustomtexture TRUE}}

{unless {== $emissivegtr none} {set $emissivegtrcustomtexture TRUE}}

{unless {== $emissivebass none} {set $emissivebasscustomtexture TRUE}}

{unless {== $emissivedrum none} {set $emissivedrumcustomtexture TRUE}}

{unless {== $emissivekeys none} {set $emissivekeyscustomtexture TRUE}}

{unless {== $keyboard none} {set $keyboardcustomtexture TRUE}}

{unless {== $highway none} {set $highwaycustomtexture TRUE}}

{unless {== $highwaygtr none} {set $highwaygtrcustomtexture TRUE}}

{unless {== $highwaybass none} {set $highwaybasscustomtexture TRUE}}

{unless {== $highwaydrum none} {set $highwaydrumcustomtexture TRUE}}

{unless {== $highwaykeys none} {set $highwaykeyscustomtexture TRUE}}

{unless {== $smasher none} {set $smashercustomtexture TRUE}}

{unless {== $gem none} {set $gemcustomtexture TRUE}}

{unless {== $sustain none} {set $sustaincustomtexture TRUE}}

{unless {== $crowdmeter none} {set $crowdmetercustomtexture TRUE}}

{unless {== $multiring none} {set $multiringcustomtexture TRUE}}

{unless {== $odbar none} {set $odbarcustomtexture TRUE}}

{unless {== $rails none} {set $railscustomtexture TRUE}}

{unless {== $scoretex none} {set $scorecustomtexture TRUE}}

{unless {== $flames none} {set $flamescustomtexture TRUE}}

{unless {== $voxarrow none} {set $voxarrowcustomtexture TRUE}}

{unless {== $voxhw none} {set $voxhwcustomtexture TRUE}}

{unless {== $dx_multiangle 1} {set $dx_forcedx_multiangle TRUE}}

{unless {== $animatedgemname none} {do {set $animatedgems TRUE} {set $animatedgemscustomtexture TRUE}}}

{profile_mgr set_mic_vol 0 $mic_vol_1} {profile_mgr update_mic_levels 0}

{profile_mgr set_mic_vol 1 $mic_vol_2} {profile_mgr update_mic_levels 1}

{profile_mgr set_mic_vol 2 $mic_vol_3} {profile_mgr update_mic_levels 2}

;default pp
{unless $blurisbackon {modifier_mgr toggle_modifier_enabled mod_noblur}}
{unless $crustisbackon {modifier_mgr toggle_modifier_enabled mod_nocrust}}
{if $mod_dx_logging {modifier_mgr toggle_modifier_enabled mod_dx_logging}}
#ifdef HX_WII {modifier_mgr toggle_modifier_enabled mod_wiios} #endif

;force a venue name. found in macros.dta.
;the following is all possible venue names internally
;none video_01 video_02 video_03 video_04 video_05 video_06 video_07
;small_club_01 small_club_02 small_club_03 small_club_04 small_club_05
;small_club_06 small_club_10 small_club_11 small_club_13 small_club_14
;small_club_15 big_club_01 big_club_02 big_club_04 big_club_05
;big_club_06 big_club_07 big_club_08 big_club_09 big_club_10
;big_club_11 big_club_12 big_club_13 big_club_14 big_club_15
;big_club_17 arena_01 arena_02 arena_03 arena_04 arena_06
;arena_07 arena_10 arena_11 arena_12 festival_01 festival_02
;the following are groups of venues. these are organized by campaign progression
;JET_VENUES contain BUS_VENUES which contain VAN_VENUES which contain SUBWAY_VENUES
;ALL_VENUES VENUES JET_VENUES BUS_VENUES VAN_VENUES SUBWAY_VENUES VENUES_VIDEO

#ifndef HX_WII
{if {file_exists DX_FILE_PATH}
   INIT_DX_WRITER
   INIT_MOD_WRITER
   INIT_VAL_WRITER
}
#endif