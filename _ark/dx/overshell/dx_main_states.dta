(dxState_DeluxeSettings
   (view
      {do
         ($options
            {array 0})
         {push_back $options os_set_speeds}
         {push_back $options os_venue_options}
         {push_back $options os_track_theme}
         #ifndef HX_WII
         {push_back $options os_graphics}
         #endif
         {push_back $options os_audio_sfx}
         {push_back $options os_advanced}
         #ifdef HX_XBOX
         #ifdef RB3E
         #ifndef RB3E_EMULATOR
         {push_back $options os_reboot}
         #endif
         #endif
         #endif
         ;-----func----------state name---------message
         {dx_state_setup dxState_DeluxeSettings os_welcome_msg}
      }
      {overshell_view_chooser}
   )
   (enter
      ;reapplies the user's own theme when entering dx settings to prevent remote textures from overriding their own theme
      {dx_resync_local_textures all}
   )
   (SCROLL_MSG
      DX_MENU_SCROLL_DESC ;updates description with currently selected modifier
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_set_speeds
            {$this show_state dxState_SetSpeeds})
         (os_venue_options
            {$this show_state dxState_VenueOptions})
         (os_track_theme
            {$this show_state #ifdef HX_WII dxState_TextureMenu #else dxState_TrackThemeLoader #endif})
         (os_graphics
            {$this show_state dxState_Graphics})
         (os_audio_sfx
            {$this show_state dxState_AudioSFX})
         (os_advanced
            {$this show_state dxState_Advanced})
         (os_reboot
            {$this show_state dxState_RebootWarn})
      }
   )
   (exit 
      {dx_state_pos_tracker}
      DX_OS_CLOSE_MSG
   )
   (on_cancel
      {do
         ($options {array 0})
         {push_back $options overshell_invite}
         #ifdef HX_XBOX {push_back $options overshell_invite_xbox_party} #endif
         #ifdef HX_PS3 {push_back $options overshell_check_invites} #endif
         {push_back $options overshell_kick}
         {push_back $options #ifdef HX_XBOX overshell_gamercard #else overshell_mute #endif}
         {push_back $options overshell_disconnect}
         {online_options.lst set_data $options}
      }
      {if_else $dx_prompt_save
         {$this show_state dxState_SaveWarn}
         {if_else $dx_settings_error
            {$this show_state dxState_SaveWarnError}
            {do {dx_settings_dta_writer} {$this show_game_options}}
         }
      }
   )
)

#define DX_GRAPHICS_DATA
(
   {do
      ($options
         {array 0})
      {push_back $options {if_else $dx_60fps os_venuefps_60 os_venuefps_30}}
      {push_back $options {if_else $dx_force_lod os_force_high_lod_on os_force_high_lod_off}}
      {push_back $options {if_else $dx_postfx os_postfx_on os_postfx_off}}
      {if $dx_postfx
         {push_back $options {if_else $dx_motion_blur os_blur_on os_blur_off}}
         {push_back $options {if_else $dx_camera_shake os_camera_shake_on os_camera_shake_off}}
         {push_back $options {if_else $dx_camera_blur os_camera_blur_on os_camera_blur_off}}
         {push_back $options {if_else $dx_noise os_noise_on os_noise_off}}
      }
      {dx_state_setup dxState_Graphics TRUE}
   }
)
(dxState_Graphics
   (view
      DX_GRAPHICS_DATA
      {overshell_view_chooser}
   )
   (SCROLL_MSG
      DX_MENU_SCROLL_DESC
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         ((os_venuefps_60 os_venuefps_30)
            {set $dx_60fps {! $dx_60fps}}
            {if $dx_60fps
               {set $post_proc_needs_reset TRUE}
            }
            {dx_postfx_setter}
            {if_else $dx_60fps
               {do
                  {set $dx_tracked_changed os_venuefps_60}
                  {set $emulatefps 60}
               }
               {do
                  {set $dx_tracked_changed os_venuefps_30}
                  {set $emulatefps 30}
               }
            }
            {dx_state_pos_tracker}
            DX_GRAPHICS_DATA
            {set $previous_state dxState_Graphics}
            {if_else {== $dx_detected_platform platform_rpcs3}
               {do
                  {$this show_state dxState_GraphicsWarn}
               }
               {do
                  {if_else $dx_60fps
                     {$this show_state dxState_60FPSWarn}
                     {$this show_state dxState_GraphicsWarn}
                  }
               }
            }
         )
         ((os_force_high_lod_on os_force_high_lod_off)
            {set $dx_force_lod {! $dx_force_lod}}
            {if $dx_force_lod
               {set $post_proc_needs_reset TRUE}
            }
            {dx_postfx_setter}
            {if_else $dx_force_lod
               {set $dx_tracked_changed os_force_high_lod_on}
               {set $dx_tracked_changed os_force_high_lod_off}
            }
            {dx_state_pos_tracker}
            DX_GRAPHICS_DATA
            {set $previous_state kState_Graphics}
            {if_else {== $dx_detected_platform platform_rpcs3}
               {do
                  {$this show_state dxState_GraphicsWarn}
               }
               {do
                  {if_else $dx_force_lod
                     {$this show_state dxState_HighLODWarn}
                     {$this show_state dxState_GraphicsWarn}
                  }
               }
            }
         )
         ((os_postfx_on os_postfx_off)
            {dx_set_postfx {! $dx_postfx}}
            {dx_postfx_setter}
            {if_else $dx_postfx
               {set $dx_tracked_changed os_postfx_on}
               {set $dx_tracked_changed os_postfx_off}
            }
            {dx_state_pos_tracker}
            DX_GRAPHICS_DATA
            {set $previous_state dxState_Graphics}
            {$this show_state dxState_GraphicsWarn}
         )
         ((os_camera_shake_on os_camera_shake_off)
            {set $dx_camera_shake {! $dx_camera_shake}}
            {if $dx_camera_shake
               {set $post_proc_needs_reset TRUE}
            }
            {dx_postfx_setter}
            {if_else $dx_camera_shake
               {set $dx_tracked_changed os_camera_shake_on}
               {set $dx_tracked_changed os_camera_shake_off}
            }
            {dx_state_pos_tracker}
            DX_GRAPHICS_DATA
            {set $previous_state dxState_Graphics}
            {$this show_state dxState_GraphicsWarn}
         )
         ((os_camera_blur_on os_camera_blur_off)
            {set $dx_camera_blur {! $dx_camera_blur}}
            {if $dx_camera_blur
               {set $post_proc_needs_reset TRUE}
            }
            {dx_postfx_setter}
            {if_else $dx_camera_blur
               {set $dx_tracked_changed os_camera_blur_on}
               {set $dx_tracked_changed os_camera_blur_off}
            }
            {dx_state_pos_tracker}
            DX_GRAPHICS_DATA
            {set $previous_state dxState_Graphics}
            {$this show_state dxState_GraphicsWarn}
         )
         ((os_blur_off os_blur_on)
            {set $dx_motion_blur {! $dx_motion_blur}}
            {if $dx_motion_blur
               {set $post_proc_needs_reset TRUE}
            }
            {dx_postfx_setter}
            {if_else $dx_motion_blur
               {set $dx_tracked_changed os_blur_on}
               {set $dx_tracked_changed os_blur_off}
            }
            {dx_state_pos_tracker}
            DX_GRAPHICS_DATA
            {set $previous_state dxState_Graphics}
            {$this show_state dxState_GraphicsWarn}
         )
         ((os_noise_off os_noise_on)
            {set $dx_noise {! $dx_noise}}
            {if $dx_noise
               {set $post_proc_needs_reset TRUE}
            }
            {dx_postfx_setter}
            {if_else $dx_noise
               {set $dx_tracked_changed os_noise_on}
               {set $dx_tracked_changed os_noise_off}
            }
            {dx_state_pos_tracker}
            DX_GRAPHICS_DATA
            {set $previous_state dxState_Graphics}
            {$this show_state dxState_GraphicsWarn}
         )
         (os_cycleaspect
            {dx_cycle_aspect}
            {dx_state_pos_tracker}
            DX_GRAPHICS_DATA
            {set $previous_state dxState_Graphics}
         )
      }
      {set $in_state FALSE}
      DX_GRAPHICS_DATA
      {set $previous_state dxState_Graphics}
   )
   (exit 
      DX_OS_CLOSE_MSG
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_DeluxeSettings}
   )
)

#define DX_AUDIO_SFX_DATA
(
   {do
      ($options
         {array 0})
      {push_back $options os_fcaudio}
      {push_back $options {if_else $dx_song_select_noise os_audio_ambience_on os_audio_ambience_off}}
      {push_back $options {if_else $dx_whammy_fx os_whammy_fx_on os_whammy_fx_off}}
      {push_back $options {if_else $dx_instrument_fx os_audio_instsfx_on os_audio_instsfx_off}}
      {push_back $options {if_else $dx_jurgen_sound os_jurgen_sound_on os_jurgen_sound_off}}
      {push_back $options os_cyclefx}
      {push_back $options os_toggle_synth}
      ;{push_back $options {if_else $dx_nice_sound os_nice_sound_on os_nice_sound_off}}
      ;-----func----------state name------message
      {dx_state_setup dxState_AudioSFX TRUE}
   }
)
(dxState_AudioSFX
   (view
      DX_AUDIO_SFX_DATA
      {overshell_view_chooser}
   )
   (enter
      DX_OS_OPEN_MSG
      DX_MENU_DESC
   )
   (SCROLL_MSG
      DX_MENU_SCROLL_DESC ;updates description with currently selected modifier
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         ((os_jurgen_sound_on os_jurgen_sound_off)
            {set $dx_jurgen_sound {! $dx_jurgen_sound}}
            {if_else $dx_jurgen_sound
               {set $dx_tracked_changed os_jurgen_sound_on}
               {set $dx_tracked_changed os_jurgen_sound_off}
            }
            {dx_state_pos_tracker}
            DX_AUDIO_SFX_DATA
            {set $previous_state dxState_AudioSFX}
         )
         ((os_audio_ambience_on os_audio_ambience_off)
            {set $dx_song_select_noise {! $dx_song_select_noise}}
            {if_else $dx_song_select_noise
               {set $dx_tracked_changed os_audio_ambience_on}
               {set $dx_tracked_changed os_audio_ambience_off}
            }
            {dx_state_pos_tracker}
            DX_AUDIO_SFX_DATA
            {set $previous_state dxState_AudioSFX}
         )
         ((os_whammy_fx_on os_whammy_fx_off)
            {set $dx_whammy_fx {! $dx_whammy_fx}}
            {if_else $dx_whammy_fx
               {set $dx_tracked_changed os_whammy_fx_on}
               {set $dx_tracked_changed os_whammy_fx_off}
            }
            {dx_state_pos_tracker}
            DX_AUDIO_SFX_DATA
            {set $previous_state dxState_AudioSFX}
         )
         ((os_audio_instsfx_on os_audio_instsfx_off)
            {set $dx_instrument_fx {! $dx_instrument_fx}}
            {if_else $dx_instrument_fx
               {set $dx_tracked_changed os_audio_instsfx_on}
               {set $dx_tracked_changed os_audio_instsfx_off}
            }
            {dx_state_pos_tracker}
            DX_AUDIO_SFX_DATA
            {set $previous_state dxState_AudioSFX}
         )
         ((os_nice_sound_on os_nice_sound_off)
            {set $dx_nice_sound {! $dx_nice_sound}}
            {if_else $dx_nice_sound
               {set $dx_tracked_changed os_nice_sound_on}
               {set $dx_tracked_changed os_nice_sound_off}
            }
            {dx_state_pos_tracker}
            DX_AUDIO_SFX_DATA
            {set $previous_state dxState_AudioSFX}
         )
         (os_cyclefx
            {cycle_guitar_fx}
            {dx_state_pos_tracker}
            DX_AUDIO_SFX_DATA
            {set $previous_state dxState_AudioSFX}
         )
         (os_toggle_synth
            {toggle_instrument_synth}
            {change_instrument_synth_volume 127}
            {dx_state_pos_tracker}
            DX_AUDIO_SFX_DATA
            {set $previous_state dxState_AudioSFX}
         )
         (os_fcaudio
            {$this show_state dxState_FullComboSFX}
         )
      }
      {set $in_state FALSE}
      DX_AUDIO_SFX_DATA
      {set $previous_state dxState_AudioSFX}
   )
   (exit 
      {dx_state_pos_tracker}
      DX_OS_CLOSE_MSG
   )
   (on_cancel
      {$this show_state dxState_DeluxeSettings}
   )
)

(dxState_FullComboSFX
   (view
      {do
         ($options
            {array 0})
         {push_back $options os_none}
         {foreach $entry {file_list "sfx/streams/fc/*.mogg"} {if {!= $entry ""} {push_back $options $entry}}}
         {dx_state_setup dxState_FullComboSFX FALSE}
      }
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {unless {== {$component selected_sym} os_none}
         {set $dx_fullcombo_sound {$component selected_sym}}
         {if_else {exists fc_preview_clip}
            {do
               {delete fc_preview_clip}
               {new MoggClip fc_preview_clip}
            }
            {new MoggClip fc_preview_clip}
         }
         {fc_preview_clip set file {sprint "sfx/streams/fc/" $dx_fullcombo_sound ".mogg"}}
         {fc_preview_clip set loop FALSE}
         {fc_preview_clip set volume -8}
         {fc_preview_clip play}
      }
      {if {== {$component selected_sym} os_none}
         {set $dx_fullcombo_sound dx_none}
      }
   )
   (on_cancel
      {$this show_state dxState_AudioSFX}
   )
)

#define DX_ANGLE_DATA
(
   os_noang
   os_angmult
   {if_else $dx_allow_lower_angle
      os_allow_lower_ang_on
      os_allow_lower_ang_off
   }
)
(dxState_AngleMenu
   (view options_extras)
   (enter
      {set $dx_slider TRUE}
      {set $dx_slider_id dx_trackangle}
      {instruments.sld set_num_steps 16} ;number of steps for track angle slider
      {instruments.sld set_current {int {/ {- $dx_multiangle 1} {/ 3 15}}}}
      {options_extras.lst set_data (DX_ANGLE_DATA)}
      {options_extras.lst set scroll_time 0}
      {options_extras.lst set circular 0}
      {options_extras set_selected 0}
   )
   (update_view
      {handle
         ($this
            update_slider
            instruments.sld
            ""
         )
      }
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_noang
            {set $dx_use_multiangle FALSE}
            {set $dx_multiangle 1}
            {instruments.sld set_current {int {/ {- $dx_multiangle 1} {/ 3 15}}}}
         )
         (os_angmult
            {set $dx_use_multiangle TRUE}
            {instruments.sld store}
            {instruments.sld set_showing TRUE}
            {$this set_focus instruments.sld}
         )
         ((os_allow_lower_ang_off os_allow_lower_ang_on)
            {set $dx_allow_lower_angle {! $dx_allow_lower_angle}}
            {options_extras.lst set_data (DX_ANGLE_DATA)}
         )
      }
   )
   (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld")
            {$this focus_name}
         }
         {switch $action
            ((kAction_Confirm kAction_Cancel)
               {{$this find {$this focus_name}} confirm}
               {{$this find {$this focus_name}} set_showing FALSE}
               {do {$this show_state dxState_TrackAngleSliderMsg} {$this set_focus confirm_action.lst}}
            )
            kDataUnhandled
         }
         kDataUnhandled
      }
   )
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
   (exit
      {set $dx_slider FALSE}
   )
   (on_cancel
      {dx_track_angle_var_reset}
      {$this show_state dxState_TextureMenu}
   )
)

(dxState_TrackAngleSliderMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {switch $dx_multiangle 
               (1 {sprintf {localize os_angleset1} {int {+ {* -16.66 $dx_multiangle} 116.66}}})
               (2 {sprintf {localize os_angleset2} {int {+ {* -16.66 $dx_multiangle} 116.66}}})
               (3 {sprintf {localize os_angleset3} {int {+ {* -16.66 $dx_multiangle} 116.66}}})
               (4 {sprintf {localize os_angleset4} {int {+ {* -16.66 $dx_multiangle} 116.66}}})
               {sprintf {localize os_angleset} {int {+ {* -16.66 $dx_multiangle} 116.66}}}
            }
         )
      }
   )
   (SELECT_MSG
      {$this show_state dxState_AngleMenu}
   )
)