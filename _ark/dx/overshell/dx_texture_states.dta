(dxState_TextureMenu
   (view
      {do
         ($options
            {array 0})
         {push_back $options os_fretboard}
         {push_back $options os_spotlight}
         {push_back $options os_emissive}
         {push_back $options os_setcol}
         {push_back $options os_angle}
         {push_back $options os_shading}
         {push_back $options os_gems}
         {push_back $options os_smashers}
         {push_back $options os_flames}
         {push_back $options os_sus}
         {push_back $options os_lanes}
         {push_back $options os_score_box}
         {push_back $options os_stars}
         {push_back $options os_font}
         {push_back $options os_solo_box}
         {push_back $options os_bre}
         {push_back $options os_crowdmeter}
         {push_back $options os_rails}
         {push_back $options os_beat_lines}
         {push_back $options os_odbar}
         {push_back $options os_multiring}
         {push_back $options os_keyboard}
         {push_back $options os_voxhw}
         {push_back $options os_voxarrow}
         {push_back $options os_voxnotes}
         {push_back $options os_voxod}
         {dx_state_setup dxState_TextureMenu FALSE}
      }
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_setcol
            {$this show_state dxState_ColorSelector}
         )
         (os_angle
           {$this show_state dxState_AngleMenu}
         )
         (os_fretboard
            {set $dx_tracked_texture_loader highways}
            {set $dx_tracked_texture_category FALSE}
            {set $dx_choose_char_scale_x 0.2}
            {set $dx_choose_char_scale_y 0.4}
            {$this show_state dxState_DTATextureLoader})
         (os_spotlight
            {set $dx_tracked_texture_loader streaks}
            {set $dx_tracked_texture_category FALSE}
            {set $dx_choose_char_scale_x 0.2}
            {set $dx_choose_char_scale_y 0.4}
            {$this show_state dxState_DTATextureLoader})
         (os_emissive
            {set $dx_tracked_texture_loader overdrive}
            {set $dx_tracked_texture_category FALSE}
            {set $dx_choose_char_scale_x 0.2}
            {set $dx_choose_char_scale_y 0.4}
            {$this show_state dxState_DTATextureLoader})
         (os_shading
            {$this show_state dxState_ShadingMenuWarning})
         (os_gems
            {set $dx_tracked_texture_loader gems_default}
            {set $dx_tracked_texture_category gems}
            {set $dx_choose_char_scale_x 0.2}
            {set $dx_choose_char_scale_y 0.4}
            {$this show_state dxState_DTATextureLoader})
         (os_smashers
            {set $dx_tracked_texture_loader strikeline_guitar}
            {set $dx_tracked_texture_category strikeline}
            {set $dx_choose_char_scale_x 0.2}
            {set $dx_choose_char_scale_y 0.4}
            {$this show_state dxState_DTATextureLoader})
         (os_flames
            {set $dx_tracked_texture_loader flames_spark}
            {set $dx_tracked_texture_category flames}
            {set $dx_choose_char_scale_x 0.3}
            {set $dx_choose_char_scale_y 0.3}
            {$this show_state dxState_DTATextureLoader})
         (os_sus 
            {set $dx_tracked_texture_loader sustains}
            {$this show_state dxState_SustainSelection})
         (os_score_box
            {set $dx_tracked_texture_loader scoreboard_frame}
            {set $dx_tracked_texture_category score}
            {set $dx_choose_char_scale_x 0.4}
            {set $dx_choose_char_scale_y 0.15}
            {$this show_state dxState_DTATextureLoader})
         (os_beat_lines
            {set $dx_tracked_texture_loader beat_lines}
            {set $dx_tracked_texture_category rails}
            {set $dx_choose_char_scale_x 0.4}
            {set $dx_choose_char_scale_y 0.15}
            {$this show_state dxState_DTATextureLoader})
         (os_stars
            {set $dx_tracked_texture_loader score_star_frame}
            {set $dx_tracked_texture_category stars}
            {set $dx_choose_char_scale_x 0.3}
            {set $dx_choose_char_scale_y 0.3}
            {$this show_state dxState_DTATextureLoader})
         (os_font
            {set $dx_tracked_texture_loader font}
            {set $dx_tracked_texture_category FALSE}
            {set $dx_choose_char_scale_x 0.3}
            {set $dx_choose_char_scale_y 0.3}
            {$this show_state dxState_DTATextureLoader})
         (os_solo_box
            {set $dx_tracked_texture_loader solo_box}
            {set $dx_tracked_texture_category FALSE}
            {set $dx_choose_char_scale_x 0.3}
            {set $dx_choose_char_scale_y 0.3}
            {$this show_state dxState_DTATextureLoader})
         (os_bre
            {set $dx_tracked_texture_loader bre_shield}
            {set $dx_tracked_texture_category bre}
            {set $dx_choose_char_scale_x 0.3}
            {set $dx_choose_char_scale_y 0.3}
            {$this show_state dxState_DTATextureLoader})
         (os_rails
            {set $dx_tracked_texture_loader rails_track}
            {set $dx_tracked_texture_category rails}
            {set $dx_choose_char_scale_x 0.3}
            {set $dx_choose_char_scale_y 0.3}
            {$this show_state dxState_DTATextureLoader})
         (os_lanes
            {set $dx_tracked_texture_loader gem_mash_green_emmisive}
            {set $dx_tracked_texture_category lanes}
            {set $dx_choose_char_scale_x 0.3}
            {set $dx_choose_char_scale_y 0.3}
            {$this show_state dxState_DTATextureLoader})
         (os_odbar
            {set $dx_tracked_texture_loader od_bar_background}
            {set $dx_tracked_texture_category overdrive_bar}
            {set $dx_choose_char_scale_x 0.4}
            {set $dx_choose_char_scale_y 0.1}
            {$this show_state dxState_DTATextureLoader})
         (os_multiring
            {set $dx_tracked_texture_loader multiplier_ring_plate_fc}
            {set $dx_tracked_texture_category multiplier_ring}
            {set $dx_choose_char_scale_x 0.6}
            {set $dx_choose_char_scale_y 0.4}
            {$this show_state dxState_DTATextureLoader})
         (os_crowdmeter
            {set $dx_tracked_texture_loader crowd_meter_frame}
            {set $dx_tracked_texture_category crowd_meter}
            {set $dx_choose_char_scale_x 0.1}
            {set $dx_choose_char_scale_y 0.5}
            {$this show_state dxState_DTATextureLoader})
         (os_keyboard
            {set $dx_tracked_texture_loader keyboard_lanes}
            {set $dx_tracked_texture_category keyboard}
            {set $dx_choose_char_scale_x 0.2}
            {set $dx_choose_char_scale_y 0.4}
            {$this show_state dxState_DTATextureLoader})
         (os_voxhw
            {set $dx_tracked_texture_loader vocal_highway_bg}
            {set $dx_tracked_texture_category vocal_highway}
            {set $dx_choose_char_scale_x 0.3}
            {set $dx_choose_char_scale_y 0.3}
            {$this show_state dxState_DTATextureLoader})
         (os_voxarrow
            {set $dx_tracked_texture_loader vocal_arrow}
            {set $dx_tracked_texture_category vocal_arrows}
            {set $dx_choose_char_scale_x 0.2}
            {set $dx_choose_char_scale_y 0.4}
            {$this show_state dxState_DTATextureLoader})
         (os_voxnotes
            {set $dx_tracked_texture_loader vocal_note_tube}
            {set $dx_tracked_texture_category vocal_note}
            {set $dx_choose_char_scale_x 0.2}
            {set $dx_choose_char_scale_y 0.4}
            {$this show_state dxState_DTATextureLoader})
         (os_voxod
            {set $dx_tracked_texture_loader vocal_overdrive_now_bar}
            {set $dx_tracked_texture_category vocal_overdrive}
            {set $dx_choose_char_scale_x 0.4}
            {set $dx_choose_char_scale_y 0.2}
            {$this show_state dxState_DTATextureLoader})
      }
   )
   (exit 
      {dx_state_pos_tracker}
      {set $dx_track_to_reset_choose_character_texture TRUE}
   )
   (on_cancel
      {$this show_state dxState_TrackThemeLoader}
    )
)
#define DX_TEXTURE_LOADER_HANDLER
(
   {do
      ($options
         {array 0})
      {set $dx_available_textures
         (overdrive scoreboard_frame score_star_frame font solo_box bre_shield strikeline_guitar flames_spark rails_track gem_mash_green_emmisive od_bar_background highways streaks multiplier_ring_plate_fc crowd_meter_frame gems_default keyboard_lanes vocal_highway_bg vocal_arrow vocal_note_tube vocal_overdrive_now_bar)
      }
      {if_else $dx_tracked_texture_category
         {foreach $entry
            #ifdef HX_PS3
            {file_list {sprint "dx/custom_textures/" $dx_tracked_texture_category "/" $dx_tracked_texture_loader "/gen/*.png_ps3"}} {if {!= $entry ""} {push_back $options $entry}}
            #else
            {file_list {sprint "dx/custom_textures/" $dx_tracked_texture_category "/" $dx_tracked_texture_loader "/gen/*.png_xbox"}} {if {!= $entry ""} {push_back $options $entry}}
            #endif
         }
         {foreach $entry
            #ifdef HX_PS3
            {file_list {sprint "dx/custom_textures/" $dx_tracked_texture_loader "/gen/*.png_ps3"}} {if {!= $entry ""} {push_back $options $entry}}
            #else
            {file_list {sprint "dx/custom_textures/" $dx_tracked_texture_loader "/gen/*.png_xbox"}} {if {!= $entry ""} {push_back $options $entry}}
            #endif
         }
      }
      ($dx_current_texture_list_array
         {array 0})
      {if_else $dx_tracked_texture_category
         {set $dx_current_texture_list_array
            #ifdef HX_PS3
            {file_list {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/" $dx_tracked_texture_category "/" $dx_tracked_texture_loader "/gen/*.png_ps3"}}
            #else
            {file_list {sprint "GAME:/custom_textures/" $dx_tracked_texture_category "/" $dx_tracked_texture_loader "/gen/*.png_xbox"}}
            #endif
         }
         {set $dx_current_texture_list_array
            #ifdef HX_PS3
            {file_list {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/" $dx_tracked_texture_loader "/gen/*.png_ps3"}}
            #else
            {file_list {sprint "GAME:/custom_textures/" $dx_tracked_texture_loader "/gen/*.png_xbox"}}
            #endif
         }
      }
      {if {> {size $dx_current_texture_list_array} 0}
         {foreach $entry $dx_current_texture_list_array {if {!= $entry ""} {push_back $options $entry}}}
      }
      {if {== {size $options} 0} ;if nothing was found at all
         {set $options (cant find textures 'this is a bug')} ;fill the list so it doesnt crash
      }
      {dx_state_setup dxState_DTATextureLoader FALSE}
   }
)
#define SCROLL_TEXTURE_SETTER
(
   {set $dx_list_scroll_texture {$component selected_sym}}
   {search_replace $dx_list_scroll_texture "'" "" $dx_list_scroll_texture}
   {choose_character.tex set_bitmap
      {if_else $dx_tracked_texture_category
         {if_else
         {file_exists
            #ifdef HX_PS3
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/" $dx_tracked_texture_category "/" $dx_tracked_texture_loader "/gen/" $dx_list_scroll_texture ".png_ps3"}
            #else
            {sprint "GAME:/custom_textures/" $dx_tracked_texture_category "/" $dx_tracked_texture_loader "/gen/" $dx_list_scroll_texture ".png_xbox"}
            #endif
         }
            #ifdef HX_PS3
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/" $dx_tracked_texture_category "/" $dx_tracked_texture_loader "/" $dx_list_scroll_texture ".png"}
            #else
            {sprint "GAME:/custom_textures/" $dx_tracked_texture_category "/" $dx_tracked_texture_loader "/" $dx_list_scroll_texture ".png"}
            #endif
            {sprint "dx/custom_textures/" $dx_tracked_texture_category "/" $dx_tracked_texture_loader "/" $dx_list_scroll_texture ".png"} ;texture inside of the ark if external texture does not exist
         }
         {if_else
         {file_exists
            #ifdef HX_PS3
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/" $dx_tracked_texture_loader "/gen/" $dx_list_scroll_texture ".png_ps3"}
            #else
            {sprint "GAME:/custom_textures/" $dx_tracked_texture_loader "/gen/" $dx_list_scroll_texture ".png_xbox"}
            #endif
         }
            #ifdef HX_PS3
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/" $dx_tracked_texture_loader "/" $dx_list_scroll_texture ".png"}
            #else
            {sprint "GAME:/custom_textures/" $dx_tracked_texture_loader "/" $dx_list_scroll_texture ".png"}
            #endif
            {sprint "dx/custom_textures/" $dx_tracked_texture_loader "/" $dx_list_scroll_texture ".png"} ;texture inside of the ark if external texture does not exist
         }
      }
   } ;load selected texture into tex memory
)
(dxState_DTATextureLoader
   (view
      DX_TEXTURE_LOADER_HANDLER
      {overshell_view_chooser}
   )
   (enter
      {do
         {set $in_state FALSE}
         DX_TEXTURE_LOADER_HANDLER
         {$current_list set_selected 0}
         {game_options.grp add_object choose_character.mesh}
         {store_choose_char_size_pos}
         {choose_character.mesh set_local_pos_index 2 175}
         {choose_character.mesh set_local_scale_index 0 $dx_choose_char_scale_x} ;X
         {choose_character.mesh set_local_scale_index 2 $dx_choose_char_scale_y} ;Y
         {choose_character.mat set diffuse_tex choose_character.tex}
         SCROLL_TEXTURE_SETTER
      }
      {if {== $dx_tracked_texture_loader overdrive}
         {choose_character.tex iterate_refs $ref {$ref set color {pack_color $dx_overdrive_r $dx_overdrive_g $dx_overdrive_b}}}
         {choose_character.tex iterate_refs $ref {$ref set intensify TRUE}}
      }
   )
   (SCROLL_MSG
      SCROLL_TEXTURE_SETTER
      ;{$this update}
   )
   (SELECT_MSG
      {switch $dx_tracked_texture_loader
         (overdrive
            {set $dx_tracked_emissive {$component selected_sym}})
         (scoreboard_frame
            {set $dx_score_box_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_score_box {$component selected_sym}})
         (beat_lines
            {set $dx_beat_lines_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_beatlines {$component selected_sym}})
         (score_star_frame
            {set $dx_stars_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_stars {$component selected_sym}})
         (font
            {set $dx_font_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_font {$component selected_sym}})
         (solo_box
            {set $dx_solo_box_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_solo_box {$component selected_sym}})
         (bre_shield
            {set $dx_bre_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_bre {$component selected_sym}})
         (strikeline_guitar
            {set $dx_smasher_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_smasher {$component selected_sym}})
         (flames_spark
            {set $dx_flames_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_flames {$component selected_sym}})
         (rails_track
            {set $dx_rails_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_rails {$component selected_sym}})
         (gem_mash_green_emmisive
            {set $dx_lanes_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_lanes {$component selected_sym}})
         (od_bar_background
            {set $dx_overdrive_bar_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_overdrive_bar {$component selected_sym}})
         (highways
            {set $dx_tracked_highway {$component selected_sym}})
         (streaks
            {set $dx_tracked_spotlight {$component selected_sym}})
         (multiplier_ring_plate_fc
            {set $dx_multiplier_ring_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_multiplier_ring {$component selected_sym}})
         (crowd_meter_frame
            {set $dx_crowd_meter_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_crowd_meter {$component selected_sym}})
         (gems_default
            {set $dx_gem_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_gem {$component selected_sym}})
         (keyboard_lanes
            {set $dx_keyboard_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_keyboard {$component selected_sym}})
         (vocal_highway_bg
            {set $dx_vocal_highway_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_vocal_highway {$component selected_sym}})
         (vocal_arrow
            {set $dx_vocal_arrow_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_vocal_arrow {$component selected_sym}})
         (vocal_note_tube
            {set $dx_vocal_notes_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_vocal_notes {$component selected_sym}})
         (vocal_overdrive_now_bar
            {set $dx_vocal_overdrive_needs_reset TRUE}
            {set $dx_refresh_beatmatch TRUE}
            {set $dx_vocal_overdrive {$component selected_sym}})
      }
      {if_else
         {||
            {== $dx_tracked_texture_loader overdrive}
            {== $dx_tracked_texture_loader streaks}
            {== $dx_tracked_texture_loader highways}
         }
         {$this show_state dxState_InstrumentTextureChooser}
         {if_else {== $state_hold dxState_ScoreTextures}
            {$this show_state dxState_ScoreTextures}
            {if_else {== $state_hold dxState_CrowdMeterElements}
               {$this show_state dxState_CrowdMeterElements}
               {$this show_state dxState_TextureMenu}
            }
         }
      }
   )
   (exit 
      {dx_state_pos_tracker}
      {restore_choose_char_size_pos}
      {game_options.grp remove_object choose_character.mesh}
   )
   (on_cancel
      {$this show_state dxState_TextureMenu}
   )
)


(dxState_InstrumentTextureChooser
   (view
      {do
         ($options
            {array 0})
         {push_back $options all_instruments}
         {push_back $options guitar}
         {push_back $options bass}
         {push_back $options drums}
         {push_back $options keys}
         {if
            {||
               {== $dx_tracked_texture_loader streaks}
               ;{== $dx_tracked_texture_loader overdrive} ;doesn't seem to actually work?
            }
            {push_back $options pro_keys}
         }
         ;{push_back $options pro_guitar}
         ;{push_back $options pro_bass}
         {set $state_hold $previous_state}
         {dx_state_setup dxState_InstrumentTextureChooser FALSE}
      }
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (all_instruments
            {switch $dx_tracked_texture_loader
                (overdrive
                    {set $dx_overdrive_guitar_needs_reset TRUE} {set $dx_overdrive_guitar $dx_tracked_emissive}
                    {set $dx_overdrive_bass_needs_reset TRUE} {set $dx_overdrive_bass $dx_tracked_emissive}
                    {set $dx_overdrive_drum_needs_reset TRUE} {set $dx_overdrive_drum $dx_tracked_emissive}
                    {set $dx_overdrive_keys_needs_reset TRUE} {set $dx_overdrive_keys $dx_tracked_emissive}
                    {set $dx_overdrive_prokeys_needs_reset TRUE} {set $dx_overdrive_prokeys $dx_tracked_emissive}
                )
                (highways
                    {set $dx_highway_guitar_needs_reset TRUE} {set $dx_highway_guitar $dx_tracked_highway}
                    {set $dx_highway_bass_needs_reset TRUE} {set $dx_highway_bass $dx_tracked_highway}
                    {set $dx_highway_drum_needs_reset TRUE} {set $dx_highway_drum $dx_tracked_highway}
                    {set $dx_highway_keys_needs_reset TRUE} {set $dx_highway_keys $dx_tracked_highway}
                )
                (streaks
                    {set $dx_streak_guitar_needs_reset TRUE} {set $dx_streak_guitar $dx_tracked_spotlight}
                    {set $dx_streak_bass_needs_reset TRUE} {set $dx_streak_bass $dx_tracked_spotlight}
                    {set $dx_streak_drum_needs_reset TRUE} {set $dx_streak_drum $dx_tracked_spotlight}
                    {set $dx_streak_prokeys_needs_reset TRUE} {set $dx_streak_prokeys $dx_tracked_spotlight}
                    {set $dx_streak_keys_needs_reset TRUE} {set $dx_streak_keys $dx_tracked_spotlight}
                )
            }
         )
         (guitar
            {switch $dx_tracked_texture_loader
                (overdrive {set $dx_overdrive_guitar_needs_reset TRUE} {set $dx_overdrive_guitar $dx_tracked_emissive})
                (highways {set $dx_highway_guitar_needs_reset TRUE} {set $dx_highway_guitar $dx_tracked_highway})
                (streaks {set $dx_streak_guitar_needs_reset TRUE} {set $dx_streak_guitar $dx_tracked_spotlight})
            }
         )
         (bass
            {switch $dx_tracked_texture_loader
                (overdrive {set $dx_overdrive_bass_needs_reset TRUE} {set $dx_overdrive_bass $dx_tracked_emissive})
                (highways {set $dx_highway_bass_needs_reset TRUE} {set $dx_highway_bass $dx_tracked_highway})
                (streaks {set $dx_streak_bass_needs_reset TRUE} {set $dx_streak_bass $dx_tracked_spotlight})
            }
         )
         (drums
            {switch $dx_tracked_texture_loader
                (overdrive {set $dx_overdrive_drum_needs_reset TRUE} {set $dx_overdrive_drum $dx_tracked_emissive})
                (highways {set $dx_highway_drum_needs_reset TRUE} {set $dx_highway_drum $dx_tracked_highway})
                (streaks {set $dx_streak_drum_needs_reset TRUE} {set $dx_streak_drum $dx_tracked_spotlight})
            }
         )
         (keys
            {switch $dx_tracked_texture_loader
                (overdrive {set $dx_overdrive_keys_needs_reset TRUE} {set $dx_overdrive_keys $dx_tracked_emissive})
                (highways {set $dx_highway_keys_needs_reset TRUE} {set $dx_highway_keys $dx_tracked_highway})
                (streaks {set $dx_streak_keys_needs_reset TRUE} {set $dx_streak_keys $dx_tracked_spotlight})
            }
         )
         (pro_keys
            {switch $dx_tracked_texture_loader
                (overdrive {set $dx_overdrive_prokeys_needs_reset TRUE} {set $dx_overdrive_prokeys $dx_tracked_emissive})
                (highways {set $dx_highway_prokeys_needs_reset TRUE} {set $dx_highway_prokeys $dx_tracked_highway})
                (streaks {set $dx_streak_prokeys_needs_reset TRUE} {set $dx_streak_prokeys $dx_tracked_spotlight})
            }
         )
      }
      {set $dx_refresh_beatmatch TRUE}
      {$this show_state dxState_TextureMenu}
   )
   (exit 
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_TextureMenu}
   )
)

(dxState_SustainSelection
   (view
      {do
         ($options
            {array 0})
         {push_back $options os_nosus}
         {push_back $options os_rb2sus}         
         {push_back $options os_rb3sus}         
         {push_back $options os_rb4sus}         
         {dx_state_setup dxState_SustainSelection FALSE}
      }
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_rb3sus
            {set $dx_sustain_needs_reset TRUE}
            {set $dx_sustain rb3})
         (os_rb2sus
            {set $dx_sustain_needs_reset TRUE}
            {set $dx_sustain rb2})
         (os_rb4sus
            {set $dx_sustain_needs_reset TRUE}
            {set $dx_sustain rb4})
         (os_nosus
            {set $dx_sustain_needs_reset FALSE}
            {set $dx_sustain empty}
         )
      }
      {set $dx_refresh_beatmatch TRUE}
   )
   (exit 
      {dx_state_pos_tracker}
   )   
   (on_cancel
      {$this show_state dxState_TextureMenu}
   )
)

#define DX_SHADING_MENU_DATA
(
   {do 
      ($options {array 0})
      {push_back $options {if_else $dx_highway_bass_shading
         os_dx_hw_bass_shade_on
         os_dx_hw_bass_shade_off
      }}
      {push_back $options {if_else $dx_highway_guitar_shading
         os_dx_hw_guitar_shade_on
         os_dx_hw_guitar_shade_off
      }}
      {push_back $options {if_else $dx_highway_drum_shading
         os_dx_hw_drum_shade_on
         os_dx_hw_drum_shade_off
      }}
      {push_back $options {if_else $dx_highway_keys_shading
         os_dx_hw_keys_shade_on
         os_dx_hw_keys_shade_off
      }}
      {push_back $options {if_else $dx_overdrive_bass_shading
         os_dx_od_bass_shade_on
         os_dx_od_bass_shade_off
      }}
      {push_back $options {if_else $dx_overdrive_guitar_shading
         os_dx_od_guitar_shade_on
         os_dx_od_guitar_shade_off
      }}
      {push_back $options {if_else $dx_overdrive_drum_shading
         os_dx_od_drum_shade_on
         os_dx_od_drum_shade_off
      }}
      {push_back $options {if_else $dx_overdrive_keys_shading
         os_dx_od_keys_shade_on
         os_dx_od_keys_shade_off
      }}
      {dx_state_setup dxState_ShadingMenu FALSE}
   }
)

(dxState_ShadingMenu
   (view
      DX_SHADING_MENU_DATA
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         ((os_dx_hw_bass_shade_on os_dx_hw_bass_shade_off)
            {set $dx_highway_bass_shading {! $dx_highway_bass_shading}}
            {set $dx_tracked_changed {if_else $dx_highway_bass_shading
               os_dx_hw_bass_shade_on
               os_dx_hw_bass_shade_off
            }}
            {dx_state_pos_tracker}
            DX_SHADING_MENU_DATA
            {set $previous_state dxState_ShadingMenu}
         )
         ((os_dx_od_bass_shade_on os_dx_od_bass_shade_off)
            {set $dx_overdrive_bass_shading {! $dx_overdrive_bass_shading}}
            {set $dx_tracked_changed {if_else $dx_overdrive_bass_shading
               os_dx_od_bass_shade_on
               os_dx_od_bass_shade_off
            }}
            {dx_state_pos_tracker}
            DX_SHADING_MENU_DATA
            {set $previous_state dxState_ShadingMenu}
         )
         ((os_dx_hw_guitar_shade_on os_dx_hw_guitar_shade_off)
            {set $dx_highway_guitar_shading {! $dx_highway_guitar_shading}}
            {set $dx_tracked_changed {if_else $dx_highway_guitar_shading
               os_dx_hw_guitar_shade_on
               os_dx_hw_guitar_shade_off
            }}
            {dx_state_pos_tracker}
            DX_SHADING_MENU_DATA
            {set $previous_state dxState_ShadingMenu}
         )
         ((os_dx_od_guitar_shade_on os_dx_od_guitar_shade_off)
            {set $dx_overdrive_guitar_shading {! $dx_overdrive_guitar_shading}}
            {set $dx_tracked_changed {if_else $dx_overdrive_guitar_shading
               os_dx_od_guitar_shade_on
               os_dx_od_guitar_shade_off
            }}
            {dx_state_pos_tracker}
            DX_SHADING_MENU_DATA
            {set $previous_state dxState_ShadingMenu}
         )
         ((os_dx_hw_keys_shade_on os_dx_hw_keys_shade_off)
            {set $dx_highway_keys_shading {! $dx_highway_keys_shading}}
            {set $dx_tracked_changed {if_else $dx_highway_keys_shading
               os_dx_hw_keys_shade_on
               os_dx_hw_keys_shade_off
            }}
            {dx_state_pos_tracker}
            DX_SHADING_MENU_DATA
            {set $previous_state dxState_ShadingMenu}
         )
         ((os_dx_od_keys_shade_on os_dx_od_keys_shade_off)
            {set $dx_overdrive_keys_shading {! $dx_overdrive_keys_shading}}
            {set $dx_tracked_changed {if_else $dx_overdrive_keys_shading
               os_dx_od_keys_shade_on
               os_dx_od_keys_shade_off
            }}
            {dx_state_pos_tracker}
            DX_SHADING_MENU_DATA
            {set $previous_state dxState_ShadingMenu}
         )
         ((os_dx_hw_drum_shade_on os_dx_hw_drum_shade_off)
            {set $dx_highway_drum_shading {! $dx_highway_drum_shading}}
            {set $dx_tracked_changed {if_else $dx_highway_drum_shading
               os_dx_hw_drum_shade_on
               os_dx_hw_drum_shade_off
            }}
            {dx_state_pos_tracker}
            DX_SHADING_MENU_DATA
            {set $previous_state dxState_ShadingMenu}
         )
         ((os_dx_od_drum_shade_on os_dx_od_drum_shade_off)
            {set $dx_overdrive_drum_shading {! $dx_overdrive_drum_shading}}
            {set $dx_tracked_changed {if_else $dx_overdrive_drum_shading
               os_dx_od_drum_shade_on
               os_dx_od_drum_shade_off
            }}
            {dx_state_pos_tracker}
            DX_SHADING_MENU_DATA
            {set $previous_state dxState_ShadingMenu}
         )
      }
      {set $in_state FALSE}
      DX_SHADING_MENU_DATA
      {set $previous_state dxState_ShadingMenu}
   )
   (exit
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_TextureMenu}
   )
)