(dxState_AppearanceMenu
   (view
      {do
         ($options
            {array 0})
         {push_back $options os_theme}
         {push_back $options os_screenel}
         {if_else $dx_customizer
            {push_back $options leave_customizer}
            {push_back $options realtime_customize}
         }
         {dx_state_setup dxState_AppearanceMenu TRUE}
      }
      {overshell_view_chooser}
   )
   (enter
      {if $dx_customizer
         {$this iterate Mesh $m {$m set_showing FALSE}}
         {choose_character.mesh set_showing TRUE}
         {unless $dx_moved_once
            {if_else
               {&&
                  {user_mgr get_user_from_slot 2} ;check if user on slot 2 exists
                  {== {{user_mgr get_user_from_slot 2} get_track_type} kTrackVocals}
               }
               {$this iterate UIList $l
                  {$l set_local_pos_index 2 {- {$l get_local_pos_index 2} 250}} ;move vocal type menu straight down
               }
               {$this iterate UIList $l
                  {$l set_local_pos_index 0 {+ {$l get_local_pos_index 0} 200}} ;move 5l type menu up and to the right
                  {$l set_local_pos_index 2 {+ {$l get_local_pos_index 2} 250}}
               }
            }
            {set $dx_moved_once TRUE}
         }
      }
   )
   (SCROLL_MSG
      DX_MENU_SCROLL_DESC
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_theme
            {$this show_state dxState_TrackThemeLoader})
         (os_screenel
            {$this show_state dxState_ScreenElements})
         (realtime_customize
            {$this show_state kState_CustomizerWarn}
         )
         (leave_customizer
            {do
               {session disconnect}
               {session_mgr disconnect}
               {$this iterate Mesh $m {$m set_showing TRUE}}
               {if_else
                  {&&
                     {user_mgr get_user_from_slot 2} ;check if user on slot 2 exists
                     {== {{user_mgr get_user_from_slot 2} get_track_type} kTrackVocals}
                  }
                  {$this iterate UIList $l
                     {$l set_local_pos_index 2 {+ {$l get_local_pos_index 2} 250}}
                  }
                  {$this iterate UIList $l
                     {$l set_local_pos_index 0 {- {$l get_local_pos_index 0} 200}}
                     {$l set_local_pos_index 2 {- {$l get_local_pos_index 2} 250}}
                  }
               }
               {overshell update_all}
               {set $dx_customizer FALSE}
               {ui goto_screen meta_loading_main_screen}
            }
         )
      }
   )
   (exit 
      DX_OS_CLOSE_MSG
      {dx_state_pos_tracker}
   )
   (on_cancel
      {if_else $dx_customizer
         kDataUnhandled
         {$this show_state dxState_Tweaks}
      }
   )
)

(dxState_RB4ThemeWarn
   (view confirm_action)
   (enter
      {confirm_action.lst set_selected 1}
      {handle
         ($this set_confirm_actions os_rb4animmsg (rb4_animated rb4_static))})
   (SELECT_MSG
      {switch {$component selected_sym}
      (rb4_animated
         DX_TRKTHM_RB4ANIMATED
         {$this show_state dxState_ThemeMenu})
      (rb4_static
         DX_TRKTHM_RB4STATIC
         {$this show_state dxState_ThemeMenu})
      })
      (on_cancel
      {$this show_state dxState_ThemeMenu}
   )
)

(dxState_OvershellTheme
   (view
      {do
         ($options
            {array 0})
         {push_back $options os_rb3os}
         {push_back $options mod_rb4os}         
         {push_back $options mod_rivalsos}
         {push_back $options mod_ps3os}
         {push_back $options mod_xboxos}
         {push_back $options mod_wiios}
         {dx_state_setup dxState_OvershellTheme FALSE}
      }
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_rb3os
            {set $dx_overshell_theme none}
            OVERSHELL_RB3OS)
         (mod_rb4os
            {set $dx_overshell_theme rb4}
            OVERSHELL_RB4OS)
         (mod_rivalsos
            {set $dx_overshell_theme rivals}
            OVERSHELL_RIVALSOS)
         (mod_xboxos
            {set $dx_overshell_platform xbox}
            {dx_state_pos_tracker}
            {overshell exit}
            {overshell enter})
         (mod_ps3os
            {set $dx_overshell_platform ps3}
            {dx_state_pos_tracker}
            {overshell exit}
            {overshell enter})
         (mod_wiios
            {set $dx_overshell_platform wii}
            {dx_state_pos_tracker}
            {overshell exit}
            {overshell enter}
         )
      }
      {overshell update_all}
   )
   (exit 
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_ScreenElements}
   )
)

(dxState_OSResetWarn
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message {sprintf {localize os_bgwarn}})
      }
   )
   (SELECT_MSG
      {set $fpsslider FALSE}
      {$this show_state dxState_OvershellTheme}
   )
)

#define DX_SCREEN_ELEMENTS_DATA
(
   {do
      ($options
         {array 0})
      {push_back $options os_ingame}
      {push_back $options os_practice}
      {push_back $options os_dx_objects}
      {push_back $options os_dx_trackobjects}
      {push_back $options os_osthm}
      {dx_state_setup dxState_ScreenElements TRUE}
   }
)
(dxState_ScreenElements
   (view
      DX_SCREEN_ELEMENTS_DATA
      {overshell_view_chooser}
   )
   (SCROLL_MSG
      DX_MENU_SCROLL_DESC
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_ingame
            {$this show_state dxState_ScreenElements_InGame})
         (os_practice
            {$this show_state dxState_ScreenElements_Practice}
         )
         (os_dx_objects
            {$this show_state dxState_ScreenElements_DeluxeObjects}
         )
         (os_dx_trackobjects
            {$this show_state dxState_ScreenElements_DeluxeTrackObjects}
         )
         (os_osthm
            {$this show_state dxState_OvershellTheme})
      }
   )
   (exit 
      DX_OS_CLOSE_MSG
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_AppearanceMenu}
   )
)

#define DX_SCREEN_OBJECTS_DATA
(
   {do
      ($options
         {array 0})
      {switch $dx_time_remaining
         (off {push_back $options os_time_remaining_off})
         (down {push_back $options os_time_remaining_down})
         (up {push_back $options os_time_remaining_up})
      }
      {push_back $options {if_else $dx_time_remaining_on_top os_time_remaining_on_top_on os_time_remaining_on_top_off}}
      {push_back $options {if_else $dx_disp_total_time os_total_time_on os_total_time_off}}
      {switch $dx_streak_counter
         (single {push_back $options os_streak_counter_single})
         (multi {push_back $options os_streak_counter_multi})
         (off {push_back $options os_streak_counter_off})
      }  
      {push_back $options {if_else $dx_force_remote_vox os_force_remote_vox_on os_force_remote_vox_off}}
      {dx_state_setup dxState_ScreenElements_DeluxeObjects TRUE}
   }
)
(dxState_ScreenElements_DeluxeObjects
   (view
      DX_SCREEN_OBJECTS_DATA
      {overshell_view_chooser}
   )
   (SCROLL_MSG
      DX_MENU_SCROLL_DESC
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_streak_counter_single
            {set $dx_streak_counter multi}
            {set $dx_tracked_changed os_streak_counter_multi}
            {if {$this in_game}
               {dx_reset_time_remaining_position}
               {do
                  {{{coop_track_panel find scoreboard} find tracker_band_display} iterate Mesh $m {$m set_showing TRUE}} ;ensure that it is visible at a base level
                  {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_middle.lbl} set_showing TRUE} ;ensure that it is visible at a base level
               }
            }
            {dx_state_pos_tracker}
            DX_SCREEN_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeObjects}
         )
         (os_streak_counter_multi
            {set $dx_streak_counter off}
            {set $dx_tracked_changed os_streak_counter_off}
            {if {$this in_game}
               {dx_reset_time_remaining_position}
               {do
                  {{{coop_track_panel find scoreboard} find tracker_band_display} iterate Mesh $m {$m set_showing FALSE}} ;ensure that it is visible at a base level
                  {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_middle.lbl} set_showing FALSE} ;ensure that it is visible at a base level
               }
            }
            {dx_state_pos_tracker}
            DX_SCREEN_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeObjects}
         )
         (os_streak_counter_off
            {set $dx_streak_counter single}
            {set $dx_tracked_changed os_streak_counter_single}
            {if {$this in_game}
               {dx_reset_time_remaining_position}
               {do
                  {{{coop_track_panel find scoreboard} find tracker_band_display} iterate Mesh $m {$m set_showing TRUE}} ;ensure that it is visible at a base level
                  {{{{coop_track_panel find scoreboard} find tracker_band_display} find tg_main_text_middle.lbl} set_showing TRUE} ;ensure that it is visible at a base level
               }
            }
            {dx_state_pos_tracker}
            DX_SCREEN_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeObjects}
         )
         (os_time_remaining_off
            {set $dx_time_remaining down}
            {set $dx_tracked_changed os_time_remaining_down}
            {if {$this in_game} {dx_reset_time_remaining_position}}
            {dx_state_pos_tracker}
            DX_SCREEN_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeObjects}
         )
         (os_time_remaining_down
            {set $dx_time_remaining up}
            {set $dx_tracked_changed os_time_remaining_up}
            {if {$this in_game} {dx_reset_time_remaining_position}}
            {dx_state_pos_tracker}
            DX_SCREEN_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeObjects}
         )
         (os_time_remaining_up
            {set $dx_time_remaining off}
            {set $dx_tracked_changed os_time_remaining_off}
            {if {$this in_game} {dx_reset_time_remaining_position}}
            {dx_state_pos_tracker}
            DX_SCREEN_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeObjects}
         )
         ((os_time_remaining_on_top_on os_time_remaining_on_top_off)
            {set $dx_time_remaining_on_top {! $dx_time_remaining_on_top}}
            {if_else $dx_time_remaining_on_top
               {set $dx_tracked_changed os_time_remaining_on_top_on}
               {set $dx_tracked_changed os_time_remaining_on_top_off}
            }
            {if {$this in_game} {dx_reset_time_remaining_position}}
            {dx_state_pos_tracker}
            DX_SCREEN_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeObjects}
         )
         ((os_total_time_on os_total_time_off)
            {set $dx_disp_total_time {! $dx_disp_total_time}}
            {if_else $dx_disp_total_time
               {set $dx_tracked_changed os_total_time_on}
               {set $dx_tracked_changed os_total_time_off}
            }
            {if {$this in_game} {dx_reset_time_remaining_position}}
            {dx_state_pos_tracker}
            DX_SCREEN_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeObjects}
         )
         ((os_force_remote_vox_on os_force_remote_vox_off)
            {set $dx_force_remote_vox {! $dx_force_remote_vox}}
            {if_else $dx_force_remote_vox
               {set $dx_tracked_changed os_force_remote_vox_on}
               {set $dx_tracked_changed os_force_remote_vox_off}
            }
            {if {&& {$this in_game} $dx_active_vocals} {coop_track_panel dx_force_remote_vox}}
            {dx_state_pos_tracker}
            DX_SCREEN_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeObjects}
         )
      }
      {set $in_state FALSE}
      DX_SCREEN_OBJECTS_DATA
      {set $previous_state dxState_ScreenElements_DeluxeObjects}
   )
   (exit 
      DX_OS_CLOSE_MSG
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_ScreenElements}
   )
)
#define DX_TRACK_OBJECTS_DATA
(
   {do
      ($options
         {array 0})
      {push_back $options {if_else $dx_countdown_enabled os_countdown_on os_countdown_off}}
      {push_back $options {if_else $dx_end_song_feedback os_end_song_feedback_on os_end_song_feedback_off}}
      {push_back $options {if_else $dx_note_streak_popups os_note_streak_on os_note_streak_off}}
      {switch $dx_fctype
         (ring {push_back $options os_fc_ring})
         (glow {push_back $options os_fc_glow})
         (both {push_back $options os_fc_both})
      }
      {dx_state_setup dxState_ScreenElements_DeluxeObjects TRUE}
   }
)
(dxState_ScreenElements_DeluxeTrackObjects
   (view
      DX_TRACK_OBJECTS_DATA
      {overshell_view_chooser}
   )
   (SCROLL_MSG
      DX_MENU_SCROLL_DESC
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_fc_both
            {set $dx_fctype ring}
            {set $dx_tracked_changed os_fc_ring}
            {dx_state_pos_tracker}
            DX_TRACK_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeTrackObjects}
            {set $dx_fc_ring TRUE}
            {set $dx_fc_glow FALSE}
            {if {&& $dx_customizer {$this in_game}}
               {coop_track_panel track_texture_reset_handler}
               FORCE_REMOVE_GOLD_STATE
            }
         )
         (os_fc_ring
            {set $dx_fctype glow}
            {set $dx_tracked_changed os_fc_glow}
            {dx_state_pos_tracker}
            DX_TRACK_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeTrackObjects}
            {set $dx_fc_ring FALSE}
            {set $dx_fc_glow TRUE}
            {if {&& $dx_customizer {$this in_game}}
               ADD_GOLD_STATE
               FRAME_CATCHER
            }
         )
         (os_fc_glow
            {set $dx_fctype both}
            {set $dx_tracked_changed os_fc_both}
            {dx_state_pos_tracker}
            DX_TRACK_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeTrackObjects}
            {set $dx_fc_ring TRUE}
            {set $dx_fc_glow TRUE}
            {if {&& $dx_customizer {$this in_game}}
               {coop_track_panel track_texture_reset_handler}
               ADD_GOLD_STATE
            }
         )
         ((os_note_streak_on os_note_streak_off)
            {set $dx_note_streak_popups {! $dx_note_streak_popups}}
            {if_else $dx_note_streak_popups
               {set $dx_tracked_changed os_note_streak_on}
               {set $dx_tracked_changed os_note_streak_off}
            }
            {dx_state_pos_tracker}
            DX_TRACK_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeTrackObjects}
         )
         ((os_countdown_on os_countdown_off)
            {set $dx_countdown_enabled {! $dx_countdown_enabled}}
            {if_else $dx_countdown_enabled
               {set $dx_tracked_changed os_countdown_on}
               {set $dx_tracked_changed os_countdown_off}
            }
            {dx_state_pos_tracker}
            DX_TRACK_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeTrackObjects}
         )
         ((os_end_song_feedback_on os_end_song_feedback_off)
            {set $dx_end_song_feedback {! $dx_end_song_feedback}}
            {if_else $dx_end_song_feedback
               {set $dx_tracked_changed os_end_song_feedback_on}
               {set $dx_tracked_changed os_end_song_feedback_off}
            }
            {dx_state_pos_tracker}
            DX_TRACK_OBJECTS_DATA
            {set $previous_state dxState_ScreenElements_DeluxeTrackObjects}
         )
      }
      {set $in_state FALSE}
      DX_TRACK_OBJECTS_DATA
      {set $previous_state dxState_ScreenElements_DeluxeTrackObjects}
   )
   (exit 
      DX_OS_CLOSE_MSG
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_ScreenElements}
   )
)
#define DX_SCREEN_ELEMENTS_INGAME_DATA
(
   {do
      ($options
         {array 0})
      {push_back $options os_mtv}
      {push_back $options
         {switch $dx_crowd_meter_state
            (dx_on os_vis_on)
            (dx_off os_vis_off)
            (dx_disabled os_vis_disabled)
         }
      }
      {push_back $options os_score}
      {push_back $options os_solo_box_pos}
      {dx_state_setup dxState_ScreenElements_InGame TRUE}
   }
)
(dxState_ScreenElements_InGame
   (view
      DX_SCREEN_ELEMENTS_INGAME_DATA
      {overshell_view_chooser}
   )
   (enter
      {set $state_hold FALSE}
      {set $previous_state dxState_ScreenElements_InGame}
   )
   (SCROLL_MSG
      DX_MENU_SCROLL_DESC
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_mtv
            {$this show_state dxState_MTVElements})
         (os_crowdmeter
            {$this show_state dxState_CrowdMeterElements})
         (os_score
            {$this show_state dxState_ScoreElements}
         )
         (os_solo_box_pos
            {set $dx_set_ui_pos_tracked_ui solo_box}
            {$this show_state dxState_AxisPositionSetup}
         )
         ((os_vis_off os_vis_on os_vis_disabled)
            {set $dx_crowd_meter_state
               {switch $dx_crowd_meter_state
                  (dx_on dx_off)
                  (dx_off dx_disabled)
                  (dx_disabled dx_on)
               }
            }
            {set $dx_tracked_changed
               {switch $dx_crowd_meter_state
                  (dx_on os_vis_on)
                  (dx_off os_vis_off)
                  (dx_disabled os_vis_disabled)
               }
            }
            {dx_toggle_fail_feedback}
            {dx_state_pos_tracker}
            DX_SCREEN_ELEMENTS_INGAME_DATA
            {set $previous_state dxState_CrowdMeterElements}
         )
      }
      {set $in_state FALSE}
      DX_SCREEN_ELEMENTS_INGAME_DATA
      {set $previous_state dxState_CrowdMeterElements}
   )
   (exit
      DX_OS_CLOSE_MSG
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_ScreenElements}
   )
)

(dxState_ScreenElements_Practice
   (view
      {do
         ($options
            {array 0})
         {push_back $options os_all_item}
         ;{push_back $options os_splash}         
         {push_back $options os_speed_control}         
         ;{push_back $options os_score_parts}         
         ;{push_back $options os_drum_buttons}         
         ;{push_back $options os_guide_pitch}         
         {push_back $options os_score_percent}         
         {push_back $options os_section}         
         {dx_state_setup dxState_ScreenElements_Practice FALSE}
      }
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_all_item
            {set $dx_set_ui_pos_tracked_ui all_item}
            {$this show_state dxState_AxisPositionSetup})
         (os_speed_control
            {set $dx_set_ui_pos_tracked_ui speed_control}
            {$this show_state dxState_AxisPositionSetup})
         (os_score_percent
            {set $dx_set_ui_pos_tracked_ui score}
            {$this show_state dxState_AxisPositionSetup})
         (os_section
            {set $dx_set_ui_pos_tracked_ui section}
            {$this show_state dxState_AxisPositionSetup}
         )
      }
   )
   (exit 
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_ScreenElements}
   )
)

#define DX_MTV_ELEMENTS_DATA
(
   {do
      ($options
         {array 0})
      {switch $dx_song_title
         (always {push_back $options os_mtv_vis_always})
         (never {push_back $options os_mtv_vis_never})
         (default {push_back $options os_mtv_vis_default})
      }
      {push_back $options os_pos}
      {if_else $dx_long_mtv_delay
         {push_back $options os_mtv_delay_on}
         {push_back $options os_mtv_delay_off}
      }
      {unless $dx_ps3hw
         {unless {$this in_game}
            {if_else $dx_author_finder_is_enabled
               {push_back $options os_author_finder_on}
               {push_back $options os_author_finder_off}
            }
         }
         {unless $dx_author_finder_is_enabled
            {if_else $dx_bpm_report
               {push_back $options os_bpm_on}
               {push_back $options os_bpm_off}
            }
         }
         {if $dx_author_finder_is_enabled
            {push_back $options os_currentsong}
         }
      }
      {if $dx_ps3hw
         {if_else $dx_bpm_report
            {push_back $options os_bpm_on}
            {push_back $options os_bpm_off}
         }
      }
      {dx_state_setup dxState_MTVElements TRUE}
   }
)
(dxState_MTVElements
   (view
      DX_MTV_ELEMENTS_DATA
      {overshell_view_chooser}
   )
   (SCROLL_MSG
      DX_MENU_SCROLL_DESC
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_mtv_vis_default
            {set $dx_song_title always}
            {set $dx_tracked_changed os_mtv_vis_always}
            {if
               {exists beatmatch}
               {if
                  {&&
                     {! {gamemode in_mode practice}} {! {gamemode in_mode trainer}}
                  }
                  {if $dx_mtvup
                     {{{gamemode get track_panel} find mtv_overlay} intro_end}
                  }
               }
            }
            {dx_state_pos_tracker}
            DX_MTV_ELEMENTS_DATA
         )
         (os_mtv_vis_always
            {set $dx_song_title never}
            {set $dx_tracked_changed os_mtv_vis_never}
            {if
               {exists beatmatch}
               {if
                  {&&
                     {! {gamemode in_mode practice}} {! {gamemode in_mode trainer}}
                  }
                  {if $dx_mtvup
                     {{{gamemode get track_panel} find mtv_overlay} intro_end}
                  }
               }
            }
            {dx_state_pos_tracker}
            DX_MTV_ELEMENTS_DATA
         )
         (os_mtv_vis_never
            {set $dx_song_title default}
            {set $dx_tracked_changed os_mtv_vis_default}
            {if
               {exists beatmatch}
               {if
                  {&&
                     {! {gamemode in_mode practice}} {! {gamemode in_mode trainer}}
                  }
                  {if $dx_mtvup
                     {{{gamemode get track_panel} find mtv_overlay} intro_end}
                  }
               }
            }
            {dx_state_pos_tracker}
            DX_MTV_ELEMENTS_DATA
         )
         ((os_mtv_delay_on os_mtv_delay_off)
            {set $dx_long_mtv_delay {! $dx_long_mtv_delay}}
            {if_else $dx_long_mtv_delay
               {set $dx_tracked_changed os_mtv_delay_on}
               {set $dx_tracked_changed os_mtv_delay_off}
            }
            {dx_state_pos_tracker}
            DX_MTV_ELEMENTS_DATA
            {set $previous_state dxState_MTVElements}
         )
         ((os_author_finder_on os_author_finder_off)
            {set $dx_author_finder_is_enabled {! $dx_author_finder_is_enabled}}
            {if_else $dx_author_finder_is_enabled
               {set $dx_tracked_changed os_author_finder_on}
               {set $dx_tracked_changed os_author_finder_off}
            }
            {dx_state_pos_tracker}
            DX_MTV_ELEMENTS_DATA
            {set $previous_state dxState_MTVElements}
         )
         (os_pos
            {set $dx_set_ui_pos_tracked_ui mtv}
            {$this show_state dxState_AxisPositionSetup})
         ((os_bpm_on os_bpm_off)
            {set $dx_bpm_report {! $dx_bpm_report}}
            {if_else $dx_bpm_report
               {set $dx_tracked_changed os_bpm_on}
               {set $dx_tracked_changed os_bpm_off}
            }
            {dx_state_pos_tracker}
            DX_MTV_ELEMENTS_DATA
            {set $previous_state dxState_MTVElements}
         )
         (os_currentsong
            {$this show_state dxState_CurrentSongSetup}
         )
      }
      {set $in_state FALSE}
      DX_MTV_ELEMENTS_DATA
      {set $previous_state dxState_MTVElements}
   )
   (exit 
      {dx_state_pos_tracker}
      DX_OS_CLOSE_MSG
   )
   (on_cancel
      {$this show_state dxState_ScreenElements_InGame}
   )
)

;#define DX_CROWD_METER_ELEMENTS_DATA
;(
;   {do
;      ($options
;         {array 0})
;         {push_back $options
;            {switch $dx_crowd_meter_state
;               (dx_on os_vis_on)
;               (dx_off os_vis_off)
;               (dx_disabled os_vis_disabled)
;            }
;         }
;      ;os_crowd_meter_pos ;doesnt work
;      ;{push_back $options os_eltex} ;depreciated
;      {dx_state_setup dxState_CrowdMeterElements TRUE}
;   }
;)
;(dxState_CrowdMeterElements
;   (view
;      DX_CROWD_METER_ELEMENTS_DATA
;      {overshell_view_chooser}
;   )
;   (enter
;      {set $state_hold FALSE}
;      {set $previous_state dxState_CrowdMeterElements}
;      DX_MENU_SCROLL_DESC
;   )
;   (SELECT_MSG
;      {switch {$component selected_sym}
;         ((os_vis_off os_vis_on os_vis_disabled)
;            {set $dx_crowd_meter_state
;               {switch $dx_crowd_meter_state
;                  (dx_on dx_off)
;                  (dx_off dx_disabled)
;                  (dx_disabled dx_on)
;               }
;            }
;            {set $dx_tracked_changed
;               {switch $dx_crowd_meter_state
;                  (dx_on os_vis_on)
;                  (dx_off os_vis_off)
;                  (dx_disabled os_vis_disabled)
;               }
;            }
;            {dx_toggle_fail_feedback}
;            {dx_state_pos_tracker}
;            DX_CROWD_METER_ELEMENTS_DATA
;            {set $previous_state dxState_CrowdMeterElements}
;         )
;         ;(os_eltex
;         ;   {set $dx_tracked_texture_loader crowd_meter_frame}
;         ;   {set $dx_tracked_texture_category crowd_meter}
;         ;   {set $dx_choose_char_scale_x 0.1}
;         ;   {set $dx_choose_char_scale_y 0.5}
;         ;   {set $state_hold dxState_CrowdMeterElements}
;         ;   {$this show_state dxState_DTATextureLoader})
;         (os_crowd_meter_pos
;            {set $dx_set_ui_pos_tracked_ui crowd_meter}
;            {$this show_state dxState_AxisPositionSetup}
;         )
;      }
;      {set $in_state FALSE}
;      DX_CROWD_METER_ELEMENTS_DATA
;      {set $previous_state dxState_CrowdMeterElements}
;   )
;   (exit 
;      {dx_state_pos_tracker}
;   )
;   (on_cancel
;      {$this show_state dxState_ScreenElements_InGame}
;   )
;)

#define DX_SCORE_ELEMENTS_DATA
(
   {do
      ($options
         {array 0})
      {push_back $options os_scoreboard_pos}
      {push_back $options os_star_display_pos}
      ;{push_back $options os_eltexs} ;depreciated
      {dx_state_setup dxState_ScoreElements FALSE}
   }
)
(dxState_ScoreElements
   (view
      DX_SCORE_ELEMENTS_DATA
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         ;(os_eltexs
         ;   {$this show_state dxState_ScoreTextures})
         (os_scoreboard_pos
            {set $dx_set_ui_pos_tracked_ui scoreboard}
            {$this show_state dxState_AxisPositionSetup})
         (os_star_display_pos
            {set $dx_set_ui_pos_tracked_ui star_display}
            {$this show_state dxState_AxisPositionSetup}
         )
      }
      {set $in_state FALSE}
      DX_SCORE_ELEMENTS_DATA
      {set $previous_state dxState_ScoreElements}
   )
   (exit 
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_ScreenElements_InGame}
   )
)

(dxState_ScoreTextures
   (view
      {do
         ($options
            {array 0})
         {push_back $options os_score_box}
         {push_back $options os_stars}
         {push_back $options os_font}
         {dx_state_setup dxState_ScoreTextures FALSE}
      }
      {overshell_view_chooser}
   )
   (enter
      {set $state_hold FALSE}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_score_box
            {set $dx_tracked_texture_loader scoreboard_frame}
            {set $dx_tracked_texture_category score}
            {set $dx_choose_char_scale_x 0.4}
            {set $dx_choose_char_scale_y 0.15}
            {set $state_hold dxState_ScoreTextures}
            {$this show_state dxState_DTATextureLoader}
         )
         (os_stars
            {set $dx_tracked_texture_loader score_star_frame}
            {set $dx_tracked_texture_category stars}
            {set $dx_choose_char_scale_x 0.3}
            {set $dx_choose_char_scale_y 0.3}
            {set $state_hold dxState_ScoreTextures}
            {$this show_state dxState_DTATextureLoader}
         )
         (os_font
            {set $dx_tracked_texture_loader font}
            {set $dx_tracked_texture_category FALSE}
            {set $dx_choose_char_scale_x 0.3}
            {set $dx_choose_char_scale_y 0.3}
            {set $state_hold dxState_ScoreTextures}
            {$this show_state dxState_DTATextureLoader}
         )
      }
   )
   (exit 
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_ScreenElements_InGame}
   )
)


(dxState_AxisPositionSetup
   (view
      {do
         ($options
            {array 0})
         {push_back $options os_horizontal}
         {push_back $options os_vertical}         
         {push_back $options os_zspace}
         {dx_state_setup dxState_AxisPositionSetup FALSE}
      }
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_horizontal
            {set $mtvtracked 0}
            {$this show_state dxState_AxisXYZ})
         (os_vertical
            {set $mtvtracked 2}
            {$this show_state dxState_AxisXYZ})
         (os_zspace
            {set $mtvtracked 1}
            {$this show_state dxState_AxisXYZ}
         )
      }
   )
   (exit 
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state
         {switch $dx_set_ui_pos_tracked_ui
            (mtv dxState_MTVElements)
            (speed_control dxState_ScreenElements_Practice)
            (all_item dxState_ScreenElements_Practice)
            (score dxState_ScreenElements_Practice)
            (section dxState_ScreenElements_Practice)
            (crowd_meter dxState_CrowdMeterElements)
            (scoreboard dxState_ScoreElements)
            (star_display dxState_ScoreElements)
            (solo_box dxState_ScreenElements_InGame)
         }
      }
   )
)

(dxState_AxisXYZ
   (view
      {do
         ($options
            {array 0})
         {push_back $options os_100}
         {push_back $options os_50}         
         {push_back $options os_25}
         {push_back $options os_10}
         {push_back $options os_1}
         {push_back $options os_reset}
         {push_back $options os_minus1}
         {push_back $options os_minus10}
         {push_back $options os_minus25}
         {push_back $options os_minus50}
         {push_back $options os_minus100}
         {dx_state_setup dxState_AxisXYZ FALSE}
      }
      {overshell_view_chooser}
   )
   (enter
      {switch $dx_set_ui_pos_tracked_ui
         (mtv
            {set $dx_set_ui_pos_0 $mtvpos_0}
            {set $dx_set_ui_pos_1 $mtvpos_1}
            {set $dx_set_ui_pos_2 $mtvpos_2}
         )
         (speed_control
            {set $dx_set_ui_pos_0 $speed_controlpos_0}
            {set $dx_set_ui_pos_1 $speed_controlpos_1}
            {set $dx_set_ui_pos_2 $speed_controlpos_2}
         )
         (all_item
            {set $dx_set_ui_pos_0 $all_itempos_0}
            {set $dx_set_ui_pos_1 $all_itempos_1}
            {set $dx_set_ui_pos_2 $all_itempos_2}
         )
         (score
            {set $dx_set_ui_pos_0 $scorepos_0}
            {set $dx_set_ui_pos_1 $scorepos_1}
            {set $dx_set_ui_pos_2 $scorepos_2}
         )
         (section
            {set $dx_set_ui_pos_0 $sectionpos_0}
            {set $dx_set_ui_pos_1 $sectionpos_1}
            {set $dx_set_ui_pos_2 $sectionpos_2}
         )
         (crowd_meter
            {set $dx_set_ui_pos_0 $crowd_meterpos_0}
            {set $dx_set_ui_pos_1 $crowd_meterpos_1}
            {set $dx_set_ui_pos_2 $crowd_meterpos_2}
         )
         (scoreboard
            {set $dx_set_ui_pos_0 $scoreboardpos_0}
            {set $dx_set_ui_pos_1 $scoreboardpos_1}
            {set $dx_set_ui_pos_2 $scoreboardpos_2}
         )
         (star_display
            {set $dx_set_ui_pos_0 $star_displaypos_0}
            {set $dx_set_ui_pos_1 $star_displaypos_1}
            {set $dx_set_ui_pos_2 $star_displaypos_2}
         )
         (solo_box
            {set $dx_set_ui_pos_0 $solo_boxpos_0}
            {set $dx_set_ui_pos_1 $solo_boxpos_1}
            {set $dx_set_ui_pos_2 $solo_boxpos_2}
         )
      }
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_100
            {switch $mtvtracked
               (0 {set $dx_set_ui_pos_0 {+ $dx_set_ui_pos_0 100}})
               (1 {set $dx_set_ui_pos_1 {- $dx_set_ui_pos_1 100}})
               (2 {set $dx_set_ui_pos_2 {+ $dx_set_ui_pos_2 100}})
            }
         )
         (os_50
            {switch $mtvtracked
               (0 {set $dx_set_ui_pos_0 {+ $dx_set_ui_pos_0 50}})
               (1 {set $dx_set_ui_pos_1 {- $dx_set_ui_pos_1 50}})
               (2 {set $dx_set_ui_pos_2 {+ $dx_set_ui_pos_2 50}})
            }
         )
         (os_25
            {switch $mtvtracked
               (0 {set $dx_set_ui_pos_0 {+ $dx_set_ui_pos_0 25}})
               (1 {set $dx_set_ui_pos_1 {- $dx_set_ui_pos_1 25}})
               (2 {set $dx_set_ui_pos_2 {+ $dx_set_ui_pos_2 25}})
            }
         )
         (os_10
            {switch $mtvtracked
               (0 {set $dx_set_ui_pos_0 {+ $dx_set_ui_pos_0 10}})
               (1 {set $dx_set_ui_pos_1 {- $dx_set_ui_pos_1 10}})
               (2 {set $dx_set_ui_pos_2 {+ $dx_set_ui_pos_2 10}})
            }
         )
         (os_1
            {switch $mtvtracked
               (0 {set $dx_set_ui_pos_0 {+ $dx_set_ui_pos_0 1}})
               (1 {set $dx_set_ui_pos_1 {- $dx_set_ui_pos_1 1}})
               (2 {set $dx_set_ui_pos_2 {+ $dx_set_ui_pos_2 1}})
            }
         )
         (os_reset
            {switch $mtvtracked
               (0
                  {switch $dx_set_ui_pos_tracked_ui
                     (mtv {set $dx_set_ui_pos_0 0})
                     (speed_control {set $dx_set_ui_pos_0 46})
                     (all_item {set $dx_set_ui_pos_0 0})
                     (score {set $dx_set_ui_pos_0 191})
                     (section {set $dx_set_ui_pos_0 0})
                     (scoreboard {set $dx_set_ui_pos_0 8})
                     (star_display {set $dx_set_ui_pos_0 0})
                     (solo_box {set $dx_set_ui_pos_0 0})
                  }
               )
               (1
                  {switch $dx_set_ui_pos_tracked_ui
                     (mtv {set $dx_set_ui_pos_1 0})
                     (speed_control {set $dx_set_ui_pos_1 0})
                     (all_item {set $dx_set_ui_pos_1 0})
                     (score {set $dx_set_ui_pos_1 0})
                     (section {set $dx_set_ui_pos_1 0})
                     (scoreboard {set $dx_set_ui_pos_1 0})
                     (star_display {set $dx_set_ui_pos_1 0})
                     (solo_box {set $dx_set_ui_pos_1 0})
                  }
               )
               (2
                  {switch $dx_set_ui_pos_tracked_ui
                     (mtv {set $dx_set_ui_pos_2 0})
                     (speed_control {set $dx_set_ui_pos_2 -5})
                     (all_item {set $dx_set_ui_pos_2 0})
                     (score {set $dx_set_ui_pos_2 175})
                     (section {set $dx_set_ui_pos_2 185})
                     (scoreboard {set $dx_set_ui_pos_2 -16})
                     (star_display {set $dx_set_ui_pos_2 0})
                     (solo_box {set $dx_set_ui_pos_2 0})
                  }
               )
            }
         )
         (os_minus100
            {switch $mtvtracked
               (0 {set $dx_set_ui_pos_0 {- $dx_set_ui_pos_0 100}})
               (1 {set $dx_set_ui_pos_1 {+ $dx_set_ui_pos_1 100}})
               (2 {set $dx_set_ui_pos_2 {- $dx_set_ui_pos_2 100}})
            }
         )
         (os_minus50
            {switch $mtvtracked
               (0 {set $dx_set_ui_pos_0 {- $dx_set_ui_pos_0 50}})
               (1 {set $dx_set_ui_pos_1 {+ $dx_set_ui_pos_1 50}})
               (2 {set $dx_set_ui_pos_2 {- $dx_set_ui_pos_2 50}})
            }
         )
         (os_minus25
            {switch $mtvtracked
               (0 {set $dx_set_ui_pos_0 {- $dx_set_ui_pos_0 25}})
               (1 {set $dx_set_ui_pos_1 {+ $dx_set_ui_pos_1 25}})
               (2 {set $dx_set_ui_pos_2 {- $dx_set_ui_pos_2 25}})
            }
         )
         (os_minus10
            {switch $mtvtracked
               (0 {set $dx_set_ui_pos_0 {- $dx_set_ui_pos_0 10}})
               (1 {set $dx_set_ui_pos_1 {+ $dx_set_ui_pos_1 10}})
               (2 {set $dx_set_ui_pos_2 {- $dx_set_ui_pos_2 10}})
            }
         )
         (os_minus1
            {switch $mtvtracked
               (0 {set $dx_set_ui_pos_0 {- $dx_set_ui_pos_0 1}})
               (1 {set $dx_set_ui_pos_1 {+ $dx_set_ui_pos_1 1}})
               (2 {set $dx_set_ui_pos_2 {- $dx_set_ui_pos_2 1}})
            }
         )
      }
      {switch $dx_set_ui_pos_tracked_ui
         (mtv
            {set $mtvpos_0 $dx_set_ui_pos_0}
            {set $mtvpos_1 $dx_set_ui_pos_1}
            {set $mtvpos_2 $dx_set_ui_pos_2}
            {if $dx_mtvup
               {{{gamemode get track_panel} find mtv_overlay} dx_set_mtv_pos}
            }
         )
         (speed_control
            {set $speed_controlpos_0 $dx_set_ui_pos_0}
            {set $speed_controlpos_1 $dx_set_ui_pos_1}
            {set $speed_controlpos_2 $dx_set_ui_pos_2}
            {if
               {&&
                  {|| {gamemode in_mode practice} {gamemode in_mode qp_practice}}
                  {exists beatmatch}
               }
               {practice_panel dx_speed_control_set_pos}
            }
         )
         (all_item
            {set $all_itempos_0 $dx_set_ui_pos_0}
            {set $all_itempos_1 $dx_set_ui_pos_1}
            {set $all_itempos_2 $dx_set_ui_pos_2}
            {if
               {&&
                  {|| {gamemode in_mode practice} {gamemode in_mode qp_practice}}
                  {exists beatmatch}
               }
               {practice_panel dx_all_item_set_pos}
            }
         )
         (score
            {set $scorepos_0 $dx_set_ui_pos_0}
            {set $scorepos_1 $dx_set_ui_pos_1}
            {set $scorepos_2 $dx_set_ui_pos_2}
            {if
               {&&
                  {|| {gamemode in_mode practice} {gamemode in_mode qp_practice}}
                  {exists beatmatch}
               }
               {practice_panel dx_score_set_pos}
            }
         )
         (section
            {set $sectionpos_0 $dx_set_ui_pos_0}
            {set $sectionpos_1 $dx_set_ui_pos_1}
            {set $sectionpos_2 $dx_set_ui_pos_2}
            {if
               {&&
                  {|| {gamemode in_mode practice} {gamemode in_mode qp_practice}}
                  {exists beatmatch}
               }
               {practice_panel dx_section_set_pos}
            }
         )
         (crowd_meter
            {set $crowd_meterpos_0 $dx_set_ui_pos_0}
            {set $crowd_meterpos_1 $dx_set_ui_pos_1}
            {set $crowd_meterpos_2 $dx_set_ui_pos_2}
            {if
               {&&
                  {|| {gamemode in_mode practice} {gamemode in_mode qp_practice}}
                  {exists beatmatch}
               }
               {coop_track_panel dx_set_crowd_meter_pos}
            }
         )
         (scoreboard
            {set $scoreboardpos_0 $dx_set_ui_pos_0}
            {set $scoreboardpos_1 $dx_set_ui_pos_1}
            {set $scoreboardpos_2 $dx_set_ui_pos_2}
            {if
               {&&
                  {! {gamemode in_mode practice}}
                  {! {gamemode in_mode trainer}}
                  {exists beatmatch}
               }
               {coop_track_panel dx_set_scoreboard_pos}
            }
         )
         (star_display
            {set $star_displaypos_0 $dx_set_ui_pos_0}
            {set $star_displaypos_1 $dx_set_ui_pos_1}
            {set $star_displaypos_2 $dx_set_ui_pos_2}
            {if
               {&&
                  {! {gamemode in_mode practice}}
                  {! {gamemode in_mode trainer}}
                  {exists beatmatch}
               }
               {coop_track_panel dx_set_star_display_pos}
            }
         )
         (solo_box
            {set $solo_boxpos_0 $dx_set_ui_pos_0}
            {set $solo_boxpos_1 $dx_set_ui_pos_1}
            {set $solo_boxpos_2 $dx_set_ui_pos_2}
            {if
               {&&
                  {! {gamemode in_mode practice}}
                  {! {gamemode in_mode trainer}}
                  {exists beatmatch}
               }
               {coop_track_panel dx_set_solo_box_pos}
            }
         )
      }
   )
   (exit 
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_AxisPositionSetup}
   )
)
#define DX_ANGLE_DATA
(
   os_noang
   os_angmult
   {if_else $dx_allow_lower_angle
      os_allow_lower_ang_on
      os_allow_lower_ang_off
   }
)
(dxState_AngleMenu
   (view options_extras)
   (enter
      {set $dx_slider TRUE}
      {set $dx_slider_id dx_trackangle}
      {instruments.sld set_num_steps 16} ;number of steps for track angle slider
      {instruments.sld set_current {int {/ {- $dx_multiangle 1} {/ 3 15}}}}
      {options_extras.lst set_data (DX_ANGLE_DATA)}
      {options_extras.lst set scroll_time 0}
      {options_extras.lst set circular 0}
      {options_extras set_selected 0}
   )
   (update_view
      {handle
         ($this
            update_slider
            instruments.sld
            ""
         )
      }
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_noang
            {set $dx_use_multiangle FALSE}
            {set $dx_multiangle 1}
            {instruments.sld set_current {int {/ {- $dx_multiangle 1} {/ 3 15}}}}
         )
         (os_angmult
            {set $dx_use_multiangle TRUE}
            {instruments.sld store}
            {instruments.sld set_showing TRUE}
            {$this set_focus instruments.sld}
         )
         ((os_allow_lower_ang_off os_allow_lower_ang_on)
            {set $dx_allow_lower_angle {! $dx_allow_lower_angle}}
            {options_extras.lst set_data (DX_ANGLE_DATA)}
         )
      }
   )
   (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld")
            {$this focus_name}
         }
         {switch $action
            ((kAction_Confirm kAction_Cancel)
               {{$this find {$this focus_name}} confirm}
               {{$this find {$this focus_name}} set_showing FALSE}
               {do {$this show_state kState_TrackAngleSliderMsg} {$this set_focus confirm_action.lst}}
            )
            kDataUnhandled
         }
         kDataUnhandled
      }
   )
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
   (exit
      {set $dx_slider FALSE}
   )
   (on_cancel
      {dx_track_angle_var_reset}
      {$this show_state dxState_TextureMenu}
   )
)

(kState_TrackAngleSliderMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {switch $dx_multiangle 
               (1 {sprintf {localize os_angleset1} {int {+ {* -16.66 $dx_multiangle} 116.66}}})
               (2 {sprintf {localize os_angleset2} {int {+ {* -16.66 $dx_multiangle} 116.66}}})
               (3 {sprintf {localize os_angleset3} {int {+ {* -16.66 $dx_multiangle} 116.66}}})
               (4 {sprintf {localize os_angleset4} {int {+ {* -16.66 $dx_multiangle} 116.66}}})
               {sprintf {localize os_angleset} {int {+ {* -16.66 $dx_multiangle} 116.66}}}
            }
         )
      }
   )
   (SELECT_MSG
      {$this show_state dxState_AngleMenu}
   )
)

#define DX_CURRENT_SONG_SETUP_DATA
(
   {do
      ($options
         {array 0})
      {push_back $options {if_else $dx_bpm_report os_bpm_on os_bpm_off}}
      {push_back $options {if_else $dx_song_title_mtv_line os_song_title_on os_song_title_off}}
      {push_back $options {if_else $dx_artist_mtv_line os_artist_on os_artist_off}}
      {push_back $options {if_else $dx_year_on_mtv os_year_on os_year_off}}
      {push_back $options {if_else $dx_year_on_one_mtv_line os_yearonline_on os_yearonline_off}}
      {push_back $options {if_else $dx_album_mtv_line os_album_on os_album_off}}
      {push_back $options {if_else $dx_genre_mtv_line os_genre_on os_genre_off}}
      {push_back $options {if_else $dx_sub_genre_mtv_line os_sub_genre_on os_sub_genre_off}}
      {push_back $options {if_else $dx_game_origin_mtv_line os_source_on os_source_off}}
      {push_back $options {if_else $dx_section_mtv_line os_section_on os_section_off}}
      {push_back $options {if_else $dx_author_mtv_line os_author_on os_author_off}}
      {dx_state_setup dxState_CurrentSongSetup FALSE}
   }
)

(dxState_CurrentSongSetup
   (view
      DX_CURRENT_SONG_SETUP_DATA
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         ((os_prefix_on os_prefix_off)
            {set $dx_currentsong_prefix {! $dx_currentsong_prefix}}
            {if_else $dx_currentsong_prefix
               {set $dx_tracked_changed os_prefix_on}
               {set $dx_tracked_changed os_prefix_off}
            }
            {dx_state_pos_tracker}
            DX_CURRENT_SONG_SETUP_DATA
            {set $previous_state dxState_CurrentSongSetup}
         )
         ((os_artist_on os_artist_off)
            {set $dx_artist_mtv_line {! $dx_artist_mtv_line}}
            {if_else $dx_artist_mtv_line
               {set $dx_tracked_changed os_artist_on}
               {set $dx_tracked_changed os_artist_off}
            }
            {dx_state_pos_tracker}
            DX_CURRENT_SONG_SETUP_DATA
            {set $previous_state dxState_CurrentSongSetup}
         )
         ((os_year_on os_year_off)
            {set $dx_year_on_mtv {! $dx_year_on_mtv}}
            {if_else $dx_year_on_mtv
               {set $dx_tracked_changed os_year_on}
               {set $dx_tracked_changed os_year_off}
            }
            {dx_state_pos_tracker}
            DX_CURRENT_SONG_SETUP_DATA
            {set $previous_state dxState_CurrentSongSetup}
         )
         ((os_yearonline_on os_yearonline_off)
            {set $dx_year_on_one_mtv_line {! $dx_year_on_one_mtv_line}}
            {if_else $dx_year_on_one_mtv_line
               {set $dx_tracked_changed os_yearonline_on}
               {set $dx_tracked_changed os_yearonline_off}
            }
            {dx_state_pos_tracker}
            DX_CURRENT_SONG_SETUP_DATA
            {set $previous_state dxState_CurrentSongSetup}
         )
         ((os_album_on os_album_off)
            {set $dx_album_mtv_line {! $dx_album_mtv_line}}
            {if_else $dx_album_mtv_line
               {set $dx_tracked_changed os_album_on}
               {set $dx_tracked_changed os_album_off}
            }
            {dx_state_pos_tracker}
            DX_CURRENT_SONG_SETUP_DATA
            {set $previous_state dxState_CurrentSongSetup}
         )
         ((os_section_on os_section_off)
            {set $dx_section_mtv_line {! $dx_section_mtv_line}}
            {if_else $dx_section_mtv_line
               {set $dx_tracked_changed os_section_on}
               {set $dx_tracked_changed os_section_off}
            }
            {dx_state_pos_tracker}
            DX_CURRENT_SONG_SETUP_DATA
            {set $previous_state dxState_CurrentSongSetup}
         )
         ((os_song_title_on os_song_title_off)
            {set $dx_song_title_mtv_line {! $dx_song_title_mtv_line}}
            {if_else $dx_song_title_mtv_line
               {set $dx_tracked_changed os_song_title_on}
               {set $dx_tracked_changed os_song_title_off}
            }
            {dx_state_pos_tracker}
            DX_CURRENT_SONG_SETUP_DATA
            {set $previous_state dxState_CurrentSongSetup}
         )
         ((os_genre_on os_genre_off)
            {set $dx_genre_mtv_line {! $dx_genre_mtv_line}}
            {if_else $dx_genre_mtv_line
               {set $dx_tracked_changed os_genre_on}
               {set $dx_tracked_changed os_genre_off}
            }
            {dx_state_pos_tracker}
            DX_CURRENT_SONG_SETUP_DATA
            {set $previous_state dxState_CurrentSongSetup}
         )
         ((os_sub_genre_on os_sub_genre_off)
            {set $dx_sub_genre_mtv_line {! $dx_sub_genre_mtv_line}}
            {if_else $dx_sub_genre_mtv_line
               {set $dx_tracked_changed os_sub_genre_on}
               {set $dx_tracked_changed os_sub_genre_off}
            }
            {dx_state_pos_tracker}
            DX_CURRENT_SONG_SETUP_DATA
            {set $previous_state dxState_CurrentSongSetup}
         )
         ((os_source_on os_source_off)
            {set $dx_game_origin_mtv_line {! $dx_game_origin_mtv_line}}
            {if_else $dx_game_origin_mtv_line
               {set $dx_tracked_changed os_source_on}
               {set $dx_tracked_changed os_source_off}
            }
            {dx_state_pos_tracker}
            DX_CURRENT_SONG_SETUP_DATA
            {set $previous_state dxState_CurrentSongSetup}
         )
         ((os_author_on os_author_off)
            {set $dx_author_mtv_line {! $dx_author_mtv_line}}
            {if_else $dx_author_mtv_line
               {set $dx_tracked_changed os_author_on}
               {set $dx_tracked_changed os_author_off}
            }
            {dx_state_pos_tracker}
            DX_CURRENT_SONG_SETUP_DATA
            {set $previous_state dxState_CurrentSongSetup}
         )
         ((os_bpm_on os_bpm_off)
            {set $dx_bpm_report {! $dx_bpm_report}}
            {if_else $dx_bpm_report
               {set $dx_tracked_changed os_bpm_on}
               {set $dx_tracked_changed os_bpm_off}
            }
            {dx_state_pos_tracker}
            DX_CURRENT_SONG_SETUP_DATA
            {set $previous_state dxState_CurrentSongSetup}
         )
      }
      {if $dx_mtvup
         {{{gamemode get track_panel} find mtv_overlay} mtv_formatter} ;refresh the mtv overlay
      }
      {set $in_state FALSE}
      DX_CURRENT_SONG_SETUP_DATA
      {set $previous_state dxState_CurrentSongSetup}
   )
   (exit
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_MTVElements}
   )
)