#define DX_PS3_HW_DETECTION
(
   {if {file_exists "GD:/dev_hdd0/game/NPIA00025/USRDIR/EBOOT.BIN"} ; used for hw detection, NPIA00025 is the playstation store
      {set $dx_ps3hw TRUE}
   }
   {unless $dx_ps3hw
      {if {file_exists "GD:/dev_hdd0/game/BLES80608/USRDIR/COLOR.INI"} ; ps3 hw detection fallback, BLES80608 is multiman
         {set $dx_ps3hw TRUE}
      }
   }
)
#define DX_FILE_PATH
(
   #ifdef HX_XBOX "GAME:/dx_settings.dta" #endif
   #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/dx_settings.dta" #endif
)
#define MOD_FILE_PATH
(
   #ifdef HX_XBOX "GAME:/dx_modifiers.dta" #endif
   #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/dx_modifiers.dta" #endif
)
#define VAL_FILE_PATH
(
   #ifdef HX_XBOX "GAME:/dx_values.dta" #endif
   #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/dx_values.dta" #endif
)
#define DRP_FILE_PATH
(
   #ifdef HX_XBOX "GAME:/discordrp.json" #endif
   #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/discordrp.json" #endif
)
#define LOG_FILE_PATH
(
   #ifdef HX_XBOX "GAME:/log.dta" #endif
   #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/log.dta" #endif
)
#define CURRENT_SONG_TXT_FILE_PATH
(
   #ifdef HX_XBOX "GAME:/currentsong.txt" #endif
   #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/currentsong.txt" #endif
)
#define CURRENT_SONG_JSON_FILE_PATH
(
   #ifdef HX_XBOX "GAME:/currentsong.json" #endif
   #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/currentsong.json" #endif
)
#define PREV_LOG_FILE_PATH
(
   #ifdef HX_XBOX "GAME:/last_log.dta" #endif
   #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/last_log.dta" #endif
)
#define MENU_BACKGROUND_BIK_PATH
(
   #ifdef HX_XBOX "GAME:/main_background.bik" #endif
   #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/main_background.bik" #endif
)
#define DX_OBJECTS_PATH
(
   #ifdef HX_XBOX {sprint "GAME:/objects/" $focus_panel "_objects.dta"} #endif
   #ifdef HX_PS3 {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/objects/" $focus_panel "_objects.dta"} #endif
)
#define DX_BOOT_FILE_CHECKER
(
   #ifndef HX_WII
   {$this check_dx}
   {$this check_xeniawrites}
   #endif
)
#define DX_BOOT_FILE_HANDLERS
(
   (check_dx
      {unless {file_exists DX_FILE_PATH}
         {unless $dxwelcomeseen
            {dx_log_writer FALSE {sprint "Cannot find DX.dta"}}
            {ui push_screen hint_dx_welcome_screen}
         }
      }
   )
   (check_xeniawrites
      {unless {file_exists DX_FILE_PATH}
         {if $dxwelcomeseen
            {unless $dx_settings_error
               {dx_log_writer FALSE {sprint "Cannot write DX.dta"}}
               {ui push_screen hint_relative_writes_screen}
            }
         }
      }
   )
)
#define DX_VAL_SAVER
(
   
   {dx_setting_saver dx_values mic_vols ({profile_mgr get_mic_vol 0} {profile_mgr get_mic_vol 1} {profile_mgr get_mic_vol 2})}
   {dx_setting_saver dx_values default_slot0 $default_slot0}
   {dx_setting_saver dx_values default_slot1 $default_slot1}
   {dx_setting_saver dx_values default_slot2 $default_slot2}
   {dx_setting_saver dx_values default_slot3 $default_slot3}
)
#define DX_MODIFIERS_SAVER
(
   {dx_setting_saver dx_modifiers mod_doublespeed {modifier_mgr is_modifier_active mod_doublespeed}}
   {dx_setting_saver dx_modifiers mod_static_fills {modifier_mgr is_modifier_active mod_static_fills}}
   {dx_setting_saver dx_modifiers mod_chord_numbers {modifier_mgr is_modifier_active mod_chord_numbers}}
   {dx_setting_saver dx_modifiers mod_nohud {modifier_mgr is_modifier_active mod_nohud}}
   {dx_setting_saver dx_modifiers mod_miss_sounds {modifier_mgr is_modifier_active mod_miss_sounds}}
   {dx_setting_saver dx_modifiers mod_whammyfx {modifier_mgr is_modifier_active mod_whammyfx}}
   {dx_setting_saver dx_modifiers mod_practiceoverdrive {modifier_mgr is_modifier_active mod_practiceoverdrive}}
   {dx_setting_saver dx_modifiers mod_nolanes {modifier_mgr is_modifier_active mod_nolanes}}
   {dx_setting_saver dx_modifiers mod_rb4lanes {modifier_mgr is_modifier_active mod_rb4lanes}}
   {dx_setting_saver dx_modifiers mod_nomv {modifier_mgr is_modifier_active mod_nomv}}
   {dx_setting_saver dx_modifiers mod_venue_swap {modifier_mgr is_modifier_active mod_venue_swap}}
   {dx_setting_saver dx_modifiers mod_char_swap {modifier_mgr is_modifier_active mod_char_swap}}
   {dx_setting_saver dx_modifiers mod_nointro {modifier_mgr is_modifier_active mod_nointro}}
   {dx_setting_saver dx_modifiers mod_synced_track_speeds {modifier_mgr is_modifier_active mod_synced_track_speeds}}
   {dx_setting_saver dx_modifiers mod_nopause {modifier_mgr is_modifier_active mod_nopause}}
   {dx_setting_saver dx_modifiers mod_skipsavemsg {modifier_mgr is_modifier_active mod_skipsavemsg}}
   {dx_setting_saver dx_modifiers mod_dx_no_overdrive {modifier_mgr is_modifier_active mod_dx_no_overdrive}}
   {dx_setting_saver dx_modifiers mod_dx_left_right_jump {modifier_mgr is_modifier_active mod_dx_left_right_jump}}
   {dx_setting_saver dx_modifiers mod_allow_dupes {modifier_mgr is_modifier_active mod_allow_dupes}}
)
#define DX_TRACK_THEME_SAVER
(
   {dx_setting_saver dx_track_theme track_theme_name $dx_track_theme_name}
   {dx_setting_saver dx_track_theme highway_guitar $dx_highway_guitar}
   {dx_setting_saver dx_track_theme highway_bass $dx_highway_bass}
   {dx_setting_saver dx_track_theme highway_guitar $dx_highway_guitar}
   {dx_setting_saver dx_track_theme highway_drums $dx_highway_drum}
   {dx_setting_saver dx_track_theme highway_keys $dx_highway_keys}
   {dx_setting_saver dx_track_theme highway_guitar_shading $dx_highway_guitar_shading}
   {dx_setting_saver dx_track_theme highway_bass_shading $dx_highway_bass_shading}
   {dx_setting_saver dx_track_theme highway_drum_shading $dx_highway_drum_shading}
   {dx_setting_saver dx_track_theme highway_keys_shading $dx_highway_keys_shading}
   {dx_setting_saver dx_track_theme streak_guitar $dx_streak_guitar}
   {dx_setting_saver dx_track_theme streak_bass $dx_streak_bass}
   {dx_setting_saver dx_track_theme streak_drums $dx_streak_drum}
   {dx_setting_saver dx_track_theme streak_keys $dx_streak_keys}
   {dx_setting_saver dx_track_theme streak_prokeys $dx_streak_prokeys}
   {dx_setting_saver dx_track_theme overdrive_guitar $dx_overdrive_guitar}
   {dx_setting_saver dx_track_theme overdrive_bass $dx_overdrive_bass}
   {dx_setting_saver dx_track_theme overdrive_drums $dx_overdrive_drum}
   {dx_setting_saver dx_track_theme overdrive_keys $dx_overdrive_keys}
   {dx_setting_saver dx_track_theme overdrive_guitar_shading $dx_overdrive_guitar_shading}
   {dx_setting_saver dx_track_theme overdrive_bass_shading $dx_overdrive_bass_shading}
   {dx_setting_saver dx_track_theme overdrive_drum_shading $dx_overdrive_drum_shading}
   {dx_setting_saver dx_track_theme overdrive_keys_shading $dx_overdrive_keys_shading}
   {dx_setting_saver dx_track_theme overdrive_color ($dx_overdrive_r $dx_overdrive_g $dx_overdrive_b)}
   {dx_setting_saver dx_track_theme gems $dx_gem}
   {dx_setting_saver dx_track_theme strikeline $dx_smasher}
   {dx_setting_saver dx_track_theme flames $dx_flames}
   {dx_setting_saver dx_track_theme sustains $dx_sustain}
   {dx_setting_saver dx_track_theme lanes $dx_lanes}
   {dx_setting_saver dx_track_theme score_box $dx_score_box}
   {dx_setting_saver dx_track_theme score_box $dx_score_box}
   {dx_setting_saver dx_track_theme stars $dx_stars}
   {dx_setting_saver dx_track_theme font $dx_font}
   {dx_setting_saver dx_track_theme crowd_meter $dx_crowd_meter}
   {dx_setting_saver dx_track_theme track_rails $dx_rails}
   {dx_setting_saver dx_track_theme overdrive_bar $dx_overdrive_bar}
   {dx_setting_saver dx_track_theme multiplier_ring $dx_multiplier_ring}
   {dx_setting_saver dx_track_theme keyboard $dx_keyboard}
   {dx_setting_saver dx_track_theme vocal_highway $dx_vocal_highway}
   {dx_setting_saver dx_track_theme vocal_arrows $dx_vocal_arrow}
   {dx_setting_saver dx_track_theme vocal_notes $dx_vocal_notes}
   {dx_setting_saver dx_track_theme vocal_overdrive $dx_vocal_overdrive}
)
#define DX_SETTINGS_SAVER
(
   {dx_setting_saver dx_settings selected_track_theme $dx_track_theme_name}
   {dx_setting_saver dx_settings protar_gem_color ($dx_protar_color1 $dx_protar_color2 $dx_protar_color3 $dx_protar_color4 $dx_protar_color5 $dx_protar_color6)}
   {dx_setting_saver dx_settings drum_cymbal_color ($dx_drum_cymbal_color1 $dx_drum_cymbal_color2 $dx_drum_cymbal_color3 $dx_drum_cymbal_color4)}
   {dx_setting_saver dx_settings drum_tom_colors ($dx_drum_tom_color1 $dx_drum_tom_color2 $dx_drum_tom_color3 $dx_drum_tom_color4)}
   {dx_setting_saver dx_settings drum_smasher_colors ($dx_drum_smasher_color1 $dx_drum_smasher_color2 $dx_drum_smasher_color3 $dx_drum_smasher_color4)}
   {dx_setting_saver dx_settings dx_guitar_smasher_color ($dx_guitar_smasher_color1 $dx_guitar_smasher_color2 $dx_guitar_smasher_color3 $dx_guitar_smasher_color4 $dx_guitar_smasher_color5)}
   {dx_setting_saver dx_settings dx_guitar_sustain_color ($dx_guitar_sustain_color1 $dx_guitar_sustain_color2 $dx_guitar_sustain_color3 $dx_guitar_sustain_color4 $dx_guitar_sustain_color5)}
   {dx_setting_saver dx_settings dx_guitar_gem_color ($dx_guitar_gem_color1 $dx_guitar_gem_color2 $dx_guitar_gem_color3 $dx_guitar_gem_color4 $dx_guitar_gem_color5)}
   {dx_setting_saver dx_settings solo_box_pos ($solo_boxpos_0 $solo_boxpos_1 $solo_boxpos_2)}
   {dx_setting_saver dx_settings star_display_pos ($star_displaypos_0 $star_displaypos_1 $star_displaypos_2)}
   {dx_setting_saver dx_settings scoreboard_pos ($scoreboardpos_0 $scoreboardpos_1 $scoreboardpos_2)}
   {dx_setting_saver dx_settings practice_section_pos ($sectionpos_0 $sectionpos_1 $sectionpos_2)}
   {dx_setting_saver dx_settings practice_all_item_pos ($all_itempos_0 $all_itempos_1 $all_itempos_2)}
   {dx_setting_saver dx_settings practice_score_pos ($scorepos_0 $scorepos_1 $scorepos_2)}
   {dx_setting_saver dx_settings practice_speed_control_pos ($speed_controlpos_0 $speed_controlpos_1 $speed_controlpos_2)}
   {dx_setting_saver dx_settings mtv_position ($mtvpos_0 $mtvpos_1 $mtvpos_2)}
   {dx_setting_saver dx_settings dx_kick_color $dx_kick_color}
   {dx_setting_saver dx_settings dx_main_menu_background $dx_main_menu_background}
   {dx_setting_saver dx_settings emulate_fps $emulatefps}
   {dx_setting_saver dx_settings track_speed $trackspeed}
   {dx_setting_saver dx_settings dx_multiangle $dx_multiangle}
   {dx_setting_saver dx_settings dx_allow_lower_angle $dx_allow_lower_angle}
   {dx_setting_saver dx_settings dx_fullcombo_sound $dx_fullcombo_sound}
   {dx_setting_saver dx_settings dx_jurgen_sound $dx_jurgen_sound}
   {dx_setting_saver dx_settings dx_nice_sound $dx_nice_sound}
   {dx_setting_saver dx_settings dx_song_select_noise $dx_song_select_noise}
   {dx_setting_saver dx_settings dx_instrument_fx $dx_instrument_fx}
   {dx_setting_saver dx_settings dx_long_mtv_delay $dx_long_mtv_delay}
   {dx_setting_saver dx_settings dx_set_postfx $dx_postfx}
   {dx_setting_saver dx_settings dx_currentsong_prefix $dx_currentsong_prefix}
   {dx_setting_saver dx_settings dx_artist_mtv_line $dx_artist_mtv_line}
   {dx_setting_saver dx_settings dx_year_on_mtv $dx_year_on_mtv}
   {dx_setting_saver dx_settings dx_year_on_one_mtv_line $dx_year_on_one_mtv_line}
   {dx_setting_saver dx_settings dx_album_mtv_line $dx_album_mtv_line}
   {dx_setting_saver dx_settings dx_song_title_mtv_line $dx_song_title_mtv_line}
   {dx_setting_saver dx_settings dx_section_mtv_line $dx_section_mtv_line}
   {dx_setting_saver dx_settings dx_author_finder_is_enabled $dx_author_finder_is_enabled}
   {dx_setting_saver dx_settings dx_genre_mtv_line $dx_genre_mtv_line}
   {dx_setting_saver dx_settings dx_sub_genre_mtv_line $dx_sub_genre_mtv_line}
   {dx_setting_saver dx_settings dx_game_origin_mtv_line $dx_game_origin_mtv_line}
   {dx_setting_saver dx_settings dx_author_mtv_line $dx_author_mtv_line}
   {dx_setting_saver dx_settings dx_countdown_enabled $dx_countdown_enabled}
   {dx_setting_saver dx_settings dx_end_song_feedback $dx_end_song_feedback}
   {dx_setting_saver dx_settings dx_rb3dx_venue
      {if_else
         {&&
            {== $force TRUE}
            {||
               {== $venue small_venues} {== $venue big_venues} {== $venue arena_venues}
               {== $venue festival_venues} {== $venue venues_video}
               {== $venue small_club_01} {== $venue small_club_02} {== $venue small_club_03}
               {== $venue small_club_04} {== $venue small_club_05} {== $venue small_club_06}
               {== $venue small_club_10} {== $venue small_club_11} {== $venue small_club_13}
               {== $venue small_club_14} {== $venue small_club_15} {== $venue big_club_01}
               {== $venue big_club_02} {== $venue big_club_04} {== $venue big_club_05}
               {== $venue big_club_06} {== $venue big_club_07} {== $venue big_club_08}
               {== $venue big_club_09} {== $venue big_club_10} {== $venue big_club_11}
               {== $venue big_club_12} {== $venue big_club_13} {== $venue big_club_14}
               {== $venue big_club_15} {== $venue big_club_17} {== $venue arena_01}
               {== $venue arena_02} {== $venue arena_03} {== $venue arena_04}
               {== $venue arena_06} {== $venue arena_07} {== $venue arena_10}
               {== $venue arena_11} {== $venue arena_12} {== $venue festival_01}
               {== $venue festival_02} {== $venue none}
            }
         }
         $venue
         FALSE
      }
   }
   {dx_setting_saver dx_settings dx_joypad_type_guitar $dx_joypad_type_guitar}
   {dx_setting_saver dx_settings dx_joypad_type_keys $dx_joypad_type_keys}
   {dx_setting_saver dx_settings dx_joypad_type_vocals $dx_joypad_type_vocals}
   {dx_setting_saver dx_settings dx_joypad_pad_mapping $dx_joypad_pad_mapping}
   {dx_setting_saver dx_settings dx_overshell_theme $dx_overshell_theme}
   {dx_setting_saver dx_settings dx_overshell_platform $dx_overshell_platform}
   {dx_setting_saver dx_settings dx_crowd_meter_visibility $dx_crowd_meter_visibility}
   {dx_setting_saver dx_settings dx_score_meter_visibility $dx_score_meter_visibility}
   {dx_setting_saver dx_settings dx_song_title $dx_song_title}
   {dx_setting_saver dx_settings dx_logging $dx_logging}
   {dx_setting_saver dx_settings dx_fctype $dx_fctype}
   {dx_setting_saver dx_settings dx_intro_movie $dx_intro_movie}
   {dx_setting_saver dx_settings dx_splash_screen $dx_splash_screen}
   {dx_setting_saver dx_settings dx_streak_counter $dx_streak_counter}
   {dx_setting_saver dx_settings dx_force_remote_vox $dx_force_remote_vox}
   {dx_setting_saver dx_settings dx_time_remaining $dx_time_remaining}
   {dx_setting_saver dx_settings dx_bpm_report $dx_bpm_report}
   {dx_setting_saver dx_settings mod_blackmenu {modifier_mgr is_modifier_active mod_blackmenu}}
   {dx_setting_saver dx_settings dx_motion_blur $dx_motion_blur}
   {dx_setting_saver dx_settings dx_camera_shake $dx_camera_shake}
   {dx_setting_saver dx_settings dx_camera_blur $dx_camera_blur}
   {dx_setting_saver dx_settings dx_noise_enabled $dx_noise_enabled}
   {dx_setting_saver dx_settings dx_auto_endgame $dx_auto_endgame}
)
#define INIT_DX_READER
(
   #ifndef HX_WII
   {dx_log_writer FALSE {sprint "Attempting to read dx.dta. Current Screen: " {ui current_screen} " - Gamemode: " $dx_gamemode}}
   {foreach $entry {read_file DX_FILE_PATH} 
      {if {== {elem $entry 0} {basename mtv_position}}
         {set $mtvpos_0
            {elem {elem {find $entry mtv_position} 1} 0}
         }
         {set $mtvpos_1
            {elem {elem {find $entry mtv_position} 1} 1}
         }
         {set $mtvpos_2
            {elem {elem {find $entry mtv_position} 1} 2}
         }
      }
      {if {== {elem $entry 0} {basename practice_speed_control_pos}}
         {set $speed_controlpos_0
            {elem {elem {find $entry practice_speed_control_pos} 1} 0}
         }
         {set $speed_controlpos_1
            {elem {elem {find $entry practice_speed_control_pos} 1} 1}
         }
         {set $speed_controlpos_2
            {elem {elem {find $entry practice_speed_control_pos} 1} 2}
         }
      }
      {if {== {elem $entry 0} {basename practice_score_pos}}
         {set $scorepos_0
            {elem {elem {find $entry practice_score_pos} 1} 0}
         }
         {set $scorepos_1
            {elem {elem {find $entry practice_score_pos} 1} 1}
         }
         {set $scorepos_2
            {elem {elem {find $entry practice_score_pos} 1} 2}
         }
      }
      {if {== {elem $entry 0} {basename practice_all_item_pos}}
         {set $all_itempos_0
            {elem {elem {find $entry practice_all_item_pos} 1} 0}
         }
         {set $all_itempos_1
            {elem {elem {find $entry practice_all_item_pos} 1} 1}
         }
         {set $all_itempos_2
            {elem {elem {find $entry practice_all_item_pos} 1} 2}
         }
      }
      {if {== {elem $entry 0} {basename practice_section_pos}}
         {set $sectionpos_0
            {elem {elem {find $entry practice_section_pos} 1} 0}
         }
         {set $sectionpos_1
            {elem {elem {find $entry practice_section_pos} 1} 1}
         }
         {set $sectionpos_2
            {elem {elem {find $entry practice_section_pos} 1} 2}
         }
      }
      {if {== {elem $entry 0} {basename scoreboard_pos}}
         {set $scoreboardpos_0
            {elem {elem {find $entry scoreboard_pos} 1} 0}
         }
         {set $scoreboardpos_1
            {elem {elem {find $entry scoreboard_pos} 1} 1}
         }
         {set $scoreboardpos_2
            {elem {elem {find $entry scoreboard_pos} 1} 2}
         }
      }
      {if {== {elem $entry 0} {basename star_display_pos}}
         {set $star_displaypos_0
            {elem {elem {find $entry star_display_pos} 1} 0}
         }
         {set $star_displaypos_1
            {elem {elem {find $entry star_display_pos} 1} 1}
         }
         {set $star_displaypos_2
            {elem {elem {find $entry star_display_pos} 1} 2}
         }
      }
      {if {== {elem $entry 0} {basename solo_box_pos}}
         {set $solo_boxpos_0
            {elem {elem {find $entry solo_box_pos} 1} 0}
         }
         {set $solo_boxpos_1
            {elem {elem {find $entry solo_box_pos} 1} 1}
         }
         {set $solo_boxpos_2
            {elem {elem {find $entry solo_box_pos} 1} 2}
         }
      }
      {if {== {elem $entry 0} {basename dx_guitar_gem_color}}
         {set $dx_guitar_gem_color1
            {elem {elem {find $entry dx_guitar_gem_color} 1} 0}
         }
         {set $dx_guitar_gem_color2
            {elem {elem {find $entry dx_guitar_gem_color} 1} 1}
         }
         {set $dx_guitar_gem_color3
            {elem {elem {find $entry dx_guitar_gem_color} 1} 2}
         }
         {set $dx_guitar_gem_color4
            {elem {elem {find $entry dx_guitar_gem_color} 1} 3}
         }
         {set $dx_guitar_gem_color5
            {elem {elem {find $entry dx_guitar_gem_color} 1} 4}
         }
      }
      {if {== {elem $entry 0} {basename dx_guitar_sustain_color}}
         {set $dx_guitar_sustain_color1
            {elem {elem {find $entry dx_guitar_sustain_color} 1} 0}
         }
         {set $dx_guitar_sustain_color2
            {elem {elem {find $entry dx_guitar_sustain_color} 1} 1}
         }
         {set $dx_guitar_sustain_color3
            {elem {elem {find $entry dx_guitar_sustain_color} 1} 2}
         }
         {set $dx_guitar_sustain_color4
            {elem {elem {find $entry dx_guitar_sustain_color} 1} 3}
         }
         {set $dx_guitar_sustain_color5
            {elem {elem {find $entry dx_guitar_sustain_color} 1} 4}
         }
      }
      {if {== {elem $entry 0} {basename dx_guitar_smasher_color}}
         {set $dx_guitar_smasher_color1
            {elem {elem {find $entry dx_guitar_smasher_color} 1} 0}
         }
         {set $dx_guitar_smasher_color2
            {elem {elem {find $entry dx_guitar_smasher_color} 1} 1}
         }
         {set $dx_guitar_smasher_color3
            {elem {elem {find $entry dx_guitar_smasher_color} 1} 2}
         }
         {set $dx_guitar_smasher_color4
            {elem {elem {find $entry dx_guitar_smasher_color} 1} 3}
         }
         {set $dx_guitar_smasher_color5
            {elem {elem {find $entry dx_guitar_smasher_color} 1} 4}
         }
      }
      {if {== {elem $entry 0} {basename drum_smasher_colors}}
         {set $dx_drum_smasher_color1
            {elem {elem {find $entry drum_smasher_colors} 1} 0}
         }
         {set $dx_drum_smasher_color2
            {elem {elem {find $entry drum_smasher_colors} 1} 1}
         }
         {set $dx_drum_smasher_color3
            {elem {elem {find $entry drum_smasher_colors} 1} 2}
         }
         {set $dx_drum_smasher_color4
            {elem {elem {find $entry drum_smasher_colors} 1} 3}
         }
      }
      {if {== {elem $entry 0} {basename drum_tom_colors}}
         {set $dx_drum_tom_color1
            {elem {elem {find $entry drum_tom_colors} 1} 0}
         }
         {set $dx_drum_tom_color2
            {elem {elem {find $entry drum_tom_colors} 1} 1}
         }
         {set $dx_drum_tom_color3
            {elem {elem {find $entry drum_tom_colors} 1} 2}
         }
         {set $dx_drum_tom_color4
            {elem {elem {find $entry drum_tom_colors} 1} 3}
         }
      }
      {if {== {elem $entry 0} {basename drum_cymbal_color}}
         {set $dx_drum_cymbal_color1
            {elem {elem {find $entry drum_cymbal_color} 1} 0}
         }
         {set $dx_drum_cymbal_color2
            {elem {elem {find $entry drum_cymbal_color} 1} 1}
         }
         {set $dx_drum_cymbal_color3
            {elem {elem {find $entry drum_cymbal_color} 1} 2}
         }
         {set $dx_drum_cymbal_color4
            {elem {elem {find $entry drum_cymbal_color} 1} 3}
         }
      }
      {if {== {elem $entry 0} {basename dx_kick_color}}
         {set $dx_kick_color
            {elem {find $entry dx_kick_color} 1}
         }
      }
      {if {== {elem $entry 0} {basename protar_gem_color}}
         {set $dx_protar_color1
            {elem {elem {find $entry protar_gem_color} 1} 0}
         }
         {set $dx_protar_color2
            {elem {elem {find $entry protar_gem_color} 1} 1}
         }
         {set $dx_protar_color3
            {elem {elem {find $entry protar_gem_color} 1} 2}
         }
         {set $dx_protar_color4
            {elem {elem {find $entry protar_gem_color} 1} 3}
         }
         {set $dx_protar_color5
            {elem {elem {find $entry protar_gem_color} 1} 4}
         }
         {set $dx_protar_color6
            {elem {elem {find $entry protar_gem_color} 1} 5}
         }
      }
      {if {== {elem $entry 0} {basename selected_track_theme}}
         {set $dx_track_theme_name
            {elem {find $entry selected_track_theme} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_main_menu_background}}
         {set $dx_main_menu_background
            {elem {find $entry dx_main_menu_background} 1}
         }
      }
      {if {== {elem $entry 0} {basename emulate_fps}}
         {set $emulatefps
            {elem {find $entry emulate_fps} 1}
         }
      }
      {if {== {elem $entry 0} {basename track_speed}}
         {set $trackspeed
            {elem {find $entry track_speed} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_multiangle}}
         {set $dx_multiangle
            {elem {find $entry dx_multiangle} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_allow_lower_angle}}
         {set $dx_allow_lower_angle
            {elem {find $entry dx_allow_lower_angle} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_long_mtv_delay}}
         {set $dx_long_mtv_delay
            {elem {find $entry dx_long_mtv_delay} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_currentsong_prefix}}
         {set $dx_currentsong_prefix
            {elem {find $entry dx_currentsong_prefix} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_artist_mtv_line}}
         {set $dx_artist_mtv_line
            {elem {find $entry dx_artist_mtv_line} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_fullcombo_sound}}
         {set $dx_fullcombo_sound
            {elem {find $entry dx_fullcombo_sound} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_jurgen_sound}}
         {set $dx_jurgen_sound
            {elem {find $entry dx_jurgen_sound} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_nice_sound}}
         {set $dx_nice_sound
            {elem {find $entry dx_nice_sound} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_song_select_noise}}
         {set $dx_song_select_noise
            {elem {find $entry dx_song_select_noise} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_instrument_fx}}
         {set $dx_instrument_fx
            {elem {find $entry dx_instrument_fx} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_year_on_mtv}}
         {set $dx_year_on_mtv
            {elem {find $entry dx_year_on_mtv} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_year_on_one_mtv_line}}
         {set $dx_year_on_one_mtv_line
            {elem {find $entry dx_year_on_one_mtv_line} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_album_mtv_line}}
         {set $dx_album_mtv_line
            {elem {find $entry dx_album_mtv_line} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_song_title_mtv_line}}
         {set $dx_song_title_mtv_line
            {elem {find $entry dx_song_title_mtv_line} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_section_mtv_line}}
         {set $dx_section_mtv_line
            {elem {find $entry dx_section_mtv_line} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_author_finder_is_enabled}}
         {set $dx_author_finder_is_enabled
            {elem {find $entry dx_author_finder_is_enabled} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_genre_mtv_line}}
         {set $dx_genre_mtv_line
            {elem {find $entry dx_genre_mtv_line} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_sub_genre_mtv_line}}
         {set $dx_sub_genre_mtv_line
            {elem {find $entry dx_sub_genre_mtv_line} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_game_origin_mtv_line}}
         {set $dx_game_origin_mtv_line
            {elem {find $entry dx_game_origin_mtv_line} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_author_mtv_line}}
         {set $dx_author_mtv_line
            {elem {find $entry dx_author_mtv_line} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_countdown_enabled}}
         {set $dx_countdown_enabled
            {elem {find $entry dx_countdown_enabled} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_end_song_feedback}}
         {set $dx_end_song_feedback
            {elem {find $entry dx_end_song_feedback} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_author_mtv_line}}
         {set $dx_author_mtv_line
            {elem {find $entry dx_author_mtv_line} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_rb3dx_venue}}
         {set $venue
            {elem {find $entry dx_rb3dx_venue} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_joypad_type_guitar}}
         {set $dx_joypad_type_guitar
            {elem {find $entry dx_joypad_type_guitar} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_joypad_type_keys}}
         {set $dx_joypad_type_keys
            {elem {find $entry dx_joypad_type_keys} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_joypad_type_vocals}}
         {set $dx_joypad_type_vocals
            {elem {find $entry dx_joypad_type_vocals} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_joypad_pad_mapping}}
         {set $dx_joypad_pad_mapping
            {elem {find $entry dx_joypad_pad_mapping} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_overshell_theme}}
         {set $dx_overshell_theme
            {elem {find $entry dx_overshell_theme} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_overshell_platform}}
         {set $dx_overshell_platform
            {elem {find $entry dx_overshell_platform} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_set_postfx}}
         {dx_set_postfx {elem {find $entry dx_set_postfx} 1}}
      }
      {if {== {elem $entry 0} {basename dx_crowd_meter_visibility}}
         {set $dx_crowd_meter_visibility
            {elem {find $entry dx_crowd_meter_visibility} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_score_meter_visibility}}
         {set $dx_score_meter_visibility
            {elem {find $entry dx_score_meter_visibility} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_song_title}}
         {set $dx_song_title
            {elem {find $entry dx_song_title} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_logging}}
         {set $dx_logging
            {elem {find $entry dx_logging} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_fctype}}
         {set $dx_fctype
            {elem {find $entry dx_fctype} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_intro_movie}}
         {set $dx_intro_movie
            {elem {find $entry dx_intro_movie} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_splash_screen}}
         {set $dx_splash_screen
            {elem {find $entry dx_splash_screen} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_streak_counter}}
         {set $dx_streak_counter
            {elem {find $entry dx_streak_counter} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_force_remote_vox}}
         {set $dx_force_remote_vox
            {elem {find $entry dx_force_remote_vox} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_time_remaining}}
         {set $dx_time_remaining
            {elem {find $entry dx_time_remaining} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_bpm_report}}
         {set $dx_bpm_report
            {elem {find $entry dx_bpm_report} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_blackmenu}}
         {if {== {elem {find $entry mod_blackmenu} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_blackmenu}
         }
      }
      {if {== {elem $entry 0} {basename dx_motion_blur}}
         {set $dx_motion_blur
            {elem {find $entry dx_motion_blur} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_camera_blur}}
         {set $dx_camera_blur
            {elem {find $entry dx_camera_blur} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_camera_shake}}
         {set $dx_camera_shake
            {elem {find $entry dx_camera_shake} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_noise_enabled}}
         {set $dx_noise
            {elem {find $entry dx_noise_enabled} 1}
         }
      }
      {if {== {elem $entry 0} {basename dx_auto_endgame}}
         {set $dx_auto_endgame
            {elem {find $entry dx_auto_endgame} 1}
         }
      }
   }
   #endif
)

#define INIT_DX_WRITER
(
   #ifndef HX_WII
   {dx_log_writer FALSE {sprint "Attempting to write DX.dta. Current Screen: " {ui current_screen} " - Gamemode: " $dx_gamemode}}
   DX_SETTINGS_SAVER
   {write_file DX_FILE_PATH $dx_settings}
   #endif
)
#define LOADING_TRACK_THEME_OPTIONS
(
   {if {== {elem $entry 0} {basename track_theme_name}}
      {set $dx_track_theme_name
         {elem {find $entry track_theme_name} 1}
      }
   }
   {if {== {elem $entry 0} {basename highway_guitar}}
      {set $dx_highway_guitar
         {elem {find $entry highway_guitar} 1}
      }
   }
   {if {== {elem $entry 0} {basename highway_bass}}
      {set $dx_highway_bass
         {elem {find $entry highway_bass} 1}
      }
   }
   {if {== {elem $entry 0} {basename highway_drums}}
      {set $dx_highway_drum
         {elem {find $entry highway_drums} 1}
      }
   }
   {if {== {elem $entry 0} {basename highway_keys}}
      {set $dx_highway_keys
         {elem {find $entry highway_keys} 1}
      }
   }
   {if {== {elem $entry 0} {basename highway_guitar_shading}}
      {set $dx_highway_guitar_shading
         {elem {find $entry highway_guitar_shading} 1}
      }
   }
   {if {== {elem $entry 0} {basename highway_bass_shading}}
      {set $dx_highway_bass_shading
         {elem {find $entry highway_bass_shading} 1}
      }
   }
   {if {== {elem $entry 0} {basename highway_drum_shading}}
      {set $dx_highway_drum_shading
         {elem {find $entry highway_drum_shading} 1}
      }
   }
   {if {== {elem $entry 0} {basename highway_keys_shading}}
      {set $dx_highway_keys_shading
         {elem {find $entry highway_keys_shading} 1}
      }
   }
   {if {== {elem $entry 0} {basename streak_guitar}}
      {set $dx_streak_guitar
         {elem {find $entry streak_guitar} 1}
      }
   }
   {if {== {elem $entry 0} {basename streak_bass}}
      {set $dx_streak_bass
         {elem {find $entry streak_bass} 1}
      }
   }
   {if {== {elem $entry 0} {basename streak_drums}}
      {set $dx_streak_drum
         {elem {find $entry streak_drums} 1}
      }
   }
   {if {== {elem $entry 0} {basename streak_keys}}
      {set $dx_streak_keys
         {elem {find $entry streak_keys} 1}
      }
   }
   {if {== {elem $entry 0} {basename streak_prokeys}}
      {set $dx_streak_prokeys
         {elem {find $entry streak_prokeys} 1}
      }
   }
   {if {== {elem $entry 0} {basename overdrive_guitar}}
      {set $dx_overdrive_guitar
         {elem {find $entry overdrive_guitar} 1}
      }
   }
   {if {== {elem $entry 0} {basename overdrive_bass}}
      {set $dx_overdrive_bass
         {elem {find $entry overdrive_bass} 1}
      }
   }
   {if {== {elem $entry 0} {basename overdrive_drums}}
      {set $dx_overdrive_drum
         {elem {find $entry overdrive_drums} 1}
      }
   }
   {if {== {elem $entry 0} {basename overdrive_keys}}
      {set $dx_overdrive_keys
         {elem {find $entry overdrive_keys} 1}
      }
   }
   {if {== {elem $entry 0} {basename overdrive_guitar_shading}}
      {set $dx_overdrive_guitar_shading
         {elem {find $entry overdrive_guitar_shading} 1}
      }
   }
   {if {== {elem $entry 0} {basename overdrive_bass_shading}}
      {set $dx_overdrive_bass_shading
         {elem {find $entry overdrive_bass_shading} 1}
      }
   }
   {if {== {elem $entry 0} {basename overdrive_drum_shading}}
      {set $dx_overdrive_drum_shading
         {elem {find $entry overdrive_drum_shading} 1}
      }
   }
   {if {== {elem $entry 0} {basename overdrive_keys_shading}}
      {set $dx_overdrive_keys_shading
         {elem {find $entry overdrive_keys_shading} 1}
      }
   }
   {if {== {elem $entry 0} {basename overdrive_color}}
      {set $dx_overdrive_r
         {elem {elem {find $entry overdrive_color} 1} 0}
      }
      {set $dx_overdrive_g
         {elem {elem {find $entry overdrive_color} 1} 1}
      }
      {set $dx_overdrive_b
         {elem {elem {find $entry overdrive_color} 1} 2}
      }
   }
   {if {== {elem $entry 0} {basename gems}}
      {set $dx_gem
         {elem {find $entry gems} 1}
      }
   }
   {if {== {elem $entry 0} {basename animated_gems}}
      {set $dx_animated_gem
         {elem {find $entry animated_gems} 1}
      }
   }
   {if {== {elem $entry 0} {basename strikeline}}
      {set $dx_smasher
         {elem {find $entry strikeline} 1}
      }
   }
   {if {== {elem $entry 0} {basename flames}}
      {set $dx_flames
         {elem {find $entry flames} 1}
      }
   }
   {if {== {elem $entry 0} {basename sustains}}
      {set $dx_sustain
         {elem {find $entry sustains} 1}
      }
   }
   {if {== {elem $entry 0} {basename lanes}}
      {set $dx_lanes
         {elem {find $entry lanes} 1}
      }
   }
   {if {== {elem $entry 0} {basename score_box}}
      {set $dx_score_box
         {elem {find $entry score_box} 1}
      }
   }
   {if {== {elem $entry 0} {basename stars}}
      {set $dx_stars
         {elem {find $entry stars} 1}
      }
   }
   {if {== {elem $entry 0} {basename font}}
      {set $dx_font
         {elem {find $entry font} 1}
      }
   }
   {if {== {elem $entry 0} {basename crowd_meter}}
      {set $dx_crowd_meter
         {elem {find $entry crowd_meter} 1}
      }
   }
   {if {== {elem $entry 0} {basename track_rails}}
      {set $dx_rails
         {elem {find $entry track_rails} 1}
      }
   }
   {if {== {elem $entry 0} {basename overdrive_bar}}
      {set $dx_overdrive_bar
         {elem {find $entry overdrive_bar} 1}
      }
   }
   {if {== {elem $entry 0} {basename multiplier_ring}}
      {set $dx_multiplier_ring
         {elem {find $entry multiplier_ring} 1}
      }
   }
   {if {== {elem $entry 0} {basename keyboard}}
      {set $dx_keyboard
         {elem {find $entry keyboard} 1}
      }
   }
   {if {== {elem $entry 0} {basename vocal_highway}}
      {set $dx_vocal_highway
         {elem {find $entry vocal_highway} 1}
      }
   }
   {if {== {elem $entry 0} {basename vocal_arrows}}
      {set $dx_vocal_arrow
         {elem {find $entry vocal_arrows} 1}
      }
   }
   {if {== {elem $entry 0} {basename vocal_notes}}
      {set $dx_vocal_notes
         {elem {find $entry vocal_notes} 1}
      }
   }
   {if {== {elem $entry 0} {basename vocal_overdrive}}
      {set $dx_vocal_overdrive
         {elem {find $entry vocal_overdrive} 1}
      }
   }
)
#define INIT_TRACK_THEME_READER
(
   #ifndef HX_WII
   {dx_log_writer FALSE {sprint "Attempting to read track_theme.dta. Current Screen: " {ui current_screen} " - Gamemode: " $dx_gamemode}}
   {if_else {file_exists {dx_track_theme_name $dx_track_theme_name}}
      {do
         {foreach $entry {read_file {dx_track_theme_name $dx_track_theme_name}}
            LOADING_TRACK_THEME_OPTIONS
         }
         {dx_passive_messenger track_theme_successfully_loaded}
      }
      {dx_passive_messenger no_track_theme_found}
   }
   #endif
)
#define INIT_TRACK_THEME_WRITER
(
   #ifndef HX_WII
   {dx_log_writer FALSE {sprint "Attempting to write track_theme.dta. Current Screen: " {ui current_screen} " - Gamemode: " $dx_gamemode}}
   DX_TRACK_THEME_SAVER
   {write_file {dx_track_theme_name $dx_track_theme_name} $dx_track_theme}
   {if_else {file_exists {dx_track_theme_name $dx_track_theme_name}}
      {dx_passive_messenger track_theme_successfully_written}
      {dx_passive_messenger track_theme_failed_writing}
   }
   #endif
)
#define INIT_MOD_READER
(
   #ifndef HX_WII
   {dx_log_writer FALSE {sprint "Attempting to read mod.dta. Current Screen: " {ui current_screen} " - Gamemode: " $dx_gamemode}}
   {dx_modifier_reader mod_static_fills}
   {dx_modifier_reader mod_chord_numbers}
   {dx_modifier_reader mod_nohud}
   {dx_modifier_reader mod_miss_sounds}
   {dx_modifier_reader mod_whammyfx}
   {dx_modifier_reader mod_practiceoverdrive}
   {dx_modifier_reader mod_nolanes}
   {dx_modifier_reader mod_rb4lanes}
   {dx_modifier_reader mod_nomv}
   {dx_modifier_reader mod_venue_swap}
   {dx_modifier_reader mod_char_swap}
   {dx_modifier_reader mod_nointro}
   {dx_modifier_reader mod_synced_track_speeds}
   {dx_modifier_reader mod_nopause}
   {dx_modifier_reader mod_skipsavemsg}
   {dx_modifier_reader mod_dx_left_right_jump}
   {dx_modifier_reader mod_allow_dupes}
   {unless {modifier_mgr is_modifier_active mod_doublespeed}
      {dx_modifier_reader mod_doublespeed}
   }
   {unless {modifier_mgr is_modifier_active mod_dx_no_overdrive}
      {dx_modifier_reader mod_dx_no_overdrive}
   }
   #endif
)
#define INIT_MOD_WRITER
(
   #ifndef HX_WII
   {dx_log_writer FALSE {sprint "Attempting to write mod.dta. Current Screen: " {ui current_screen} " - Gamemode: " $dx_gamemode}}
   DX_MODIFIERS_SAVER
   {write_file MOD_FILE_PATH
      $dx_modifiers
   }
   #endif
)
#define INIT_VAL_READER
(
   #ifndef HX_WII
   {dx_log_writer FALSE {sprint "Attempting to read val.dta. Current Screen: " {ui current_screen} " - Gamemode: " $dx_gamemode}}
   {foreach $entry {read_file VAL_FILE_PATH}
      {if {== {elem $entry 0} {basename mic_vols}}
         {set $mic_vol_1
            {elem {elem {find $entry mic_vols} 1} 0}
         }
         {set $mic_vol_2
            {elem {elem {find $entry mic_vols} 1} 1}
         }
         {set $mic_vol_3
            {elem {elem {find $entry mic_vols} 1} 2}
         }
      }
      {if {== {elem $entry 0} {basename default_slot0}}
         {set $default_slot0
            {elem {find $entry default_slot0} 1}
         }
      }
      {if {== {elem $entry 0} {basename default_slot1}}
         {set $default_slot1
            {elem {find $entry default_slot1} 1}
         }
      }
      {if {== {elem $entry 0} {basename default_slot2}}
         {set $default_slot2
            {elem {find $entry default_slot2} 1}
         }
      }
      {if {== {elem $entry 0} {basename default_slot3}}
         {set $default_slot3
            {elem {find $entry default_slot3} 1}
         }
      }
   }
   #endif
)
#define INIT_VAL_WRITER
(
   #ifndef HX_WII
   {dx_log_writer FALSE {sprint "Attempting to write val.dta. Current Screen: " {ui current_screen} " - Gamemode: " $dx_gamemode}}
   DX_VAL_SAVER
   {write_file VAL_FILE_PATH
      $dx_values
   }
   #endif
)
#define DX_LOG_CLEAR
(
   #ifndef HX_WII
   {if {file_exists LOG_FILE_PATH}
      {write_file PREV_LOG_FILE_PATH {read_file LOG_FILE_PATH}}
      {set $dx_log_reader ("start of log")}
      {write_file LOG_FILE_PATH {array $dx_log_reader}}
   }
   #endif
)
#define DX_CURRENT_SONG_CLEAR
(
   #ifndef HX_WII
   {do
      {set $dx_current_song FALSE}
      {set $dx_current_song ("No Song Loaded")}
      {write_file CURRENT_SONG_TXT_FILE_PATH {array $dx_current_song}}
   }
   #endif
)
#define DX_CURRENT_SONG_WRITER
(
   #ifndef HX_WII
   {set $dx_current_song ()}
   {resize $dx_current_song 0}
   {if_else $dx_currentsong_prefix
      {do
         {if $dx_song_title_mtv_line
            {push_back $dx_current_song {sprint "Song: " $song_title}}
         }
         {if_else {&& $dx_year_on_mtv $dx_year_on_one_mtv_line}
            {push_back $dx_current_song {sprint "Artist: " $artistvar ", " $yearvar}}
            {push_back $dx_current_song {sprint "Artist: " $artistvar}}
         }
         {if $dx_album_mtv_line
            {push_back $dx_current_song {sprint "Album: " $albumvar}}
         }
         {if $dx_genre_mtv_line
            {push_back $dx_current_song {sprint "Genre: " {localize $genrevar}}}
         }
         {if $dx_sub_genre_mtv_line
            {push_back $dx_current_song {sprint "Sub Genre: " {localize $subgenrevar}}}
         }
         {if {&& $dx_year_on_mtv {! $dx_year_on_one_mtv_line}}
            {push_back $dx_current_song {sprint "Year: " $yearvar}}
         }
         {if $dx_game_origin_mtv_line
            {push_back $dx_current_song {sprint "Source: " {localize $sourcevar}}}
         }
         {if $dx_author_mtv_line
            {if $authorvar
               {push_back $dx_current_song {sprint "Author: " $authorvar}}
            }
         }
      }
      {do
         {if $dx_song_title_mtv_line
            {push_back $dx_current_song {sprint "Song: " $song_title}}
         }
         {if_else {&& $dx_year_on_mtv $dx_year_on_one_mtv_line}
            {push_back $dx_current_song {sprint $artistvar ", " $yearvar}}
            {push_back $dx_current_song $artistvar}
         }
         {if $dx_album_mtv_line
            {push_back $dx_current_song $albumvar}
         }
         {if $dx_genre_mtv_line
            {push_back $dx_current_song {localize $genrevar}}
         }
         {if $dx_sub_genre_mtv_line
            {push_back $dx_current_song {localize $subgenrevar}}
         }
         {if {&& $dx_year_on_mtv {! $dx_year_on_one_mtv_line}}
            {push_back $dx_current_song $yearvar}
         }
         {if $dx_game_origin_mtv_line
            {push_back $dx_current_song {localize $sourcevar}}
         }
         {if $dx_author_mtv_line
            {if $authorvar
               {push_back $dx_current_song $authorvar}
            }
         }
      }
   }
   {write_file CURRENT_SONG_TXT_FILE_PATH
      {array
         $dx_current_song
      }
   }
   #endif
)
#define DX_JSON_CLEAR
(
   #ifndef HX_WII
   {do
      {set $dx_current_song ()}
      {resize $dx_current_song 0}
      {write_file CURRENT_SONG_JSON_FILE_PATH {array $dx_current_song}}
   }
   #endif
)
#define DX_JSON_WRITER
(
   #ifndef HX_WII
   {set $dx_current_song ()}
   {resize $dx_current_song 0}
   {push_back $dx_current_song {sprint "{" "\q" "Playlist" "\q" ":" "\q\q" "\q" "," "\q" "SubPlaylist" "\q" ":" "\q" "\q" "," "\q" "IsModChart" "\q" ":" "false" ","
   "\q" "SelectedInstruments" "\q" ":" "[" 
   "{" "\q" "active" "\q" ":" $guitarplayeractive "," "\q" "instrument" "\q" ":" "\q" "GUITAR" "\q" "," "\q" "difficulty" "\q" ":" "\q" $guitarrankvar "\q" "}" ","
   "{" "\q" "active" "\q" ":" $real_guitarplayeractive "," "\q" "instrument" "\q" ":" "\q" "REAL_GUITAR" "\q" "," "\q" "difficulty" "\q" ":" "\q" $real_guitarrankvar "\q" "}" ","
   "{" "\q" "active" "\q" ":" $drumplayeractive "," "\q" "instrument" "\q" ":" "\q" "DRUMS" "\q" "," "\q" "difficulty" "\q" ":" "\q" $drumrankvar "\q" "}" ","
   "{" "\q" "active" "\q" ":" $vocalsplayeractive "," "\q" "instrument" "\q" ":" "\q" "VOCALS" "\q" "," "\q" "difficulty" "\q" ":" "\q" $vocalsrankvar "\q" "}" ","
   "{" "\q" "active" "\q" ":" $bassplayeractive "," "\q" "instrument" "\q" ":" "\q" "BASS" "\q" "," "\q" "difficulty" "\q" ":" "\q" $bassrankvar "\q" "}" ","
   "{" "\q" "active" "\q" ":" $real_bassplayeractive "," "\q" "instrument" "\q" ":" "\q" "REAL_BASS" "\q" "," "\q" "difficulty" "\q" ":" "\q" $real_bassrankvar "\q" "}" ","
   "{" "\q" "active" "\q" ":" $keysplayeractive "," "\q" "instrument" "\q" ":" "\q" "KEYS" "\q" "," "\q" "difficulty" "\q" ":" "\q" $keysrankvar "\q" "}" ","
   "{" "\q" "active" "\q" ":" $real_keysplayeractive "," "\q" "instrument" "\q" ":" "\q" "REAL_KEYS" "\q" "," "\q" "difficulty" "\q" ":" "\q" $real_keysrankvar "\q" "}" "]" ","
   "\q" "HasLyrics" "\q" ":" "false" "," "\q" "VideoStartOffset" "\q" ":" 0 "," "\q" "CacheRoot" "\q" ":" "\q" "FakePath" "\q" "," "\q" "DrumType" "\q" ":" "0" ","
   "\q" "Name" "\q" ":" "\q" $song_title "\q" "," "\q" "NameNoParenthesis" "\q" ":" "\q" $song_title "\q" "," "\q" "Artist" "\q" ":" "\q" $artistvar "\q" ","
   "\q" "Charter" "\q" ":" "\q" $authorvar "\q" "," "\q" "IsMaster" "\q" ":" $mastervar "," "\q" "Album" "\q" ":" "\q" $albumvar "\q" "," "\q" "AlbumTrack" "\q" ":" 3 ","
   "\q" "PlaylistTrack" "\q" ":" "0" "," "\q" "Genre" "\q" ":" "\q" $genrevar "\q" "," "\q" "Year" "\q" ":" "\q" $yearvar "\q" "," "\q" "SongLength" "\q" ":" "231271" ","
   "\q" "SongLengthTimeSpan" "\q" ":" "\q" "00:03:51.2710000" "\q" "," "\q" "PreviewStart" "\q" ":" "53454" "," "\q" "PreviewStartTimeSpan" "\q" ":" "\q" "00:00:53.4540000" "\q" ","
   "\q" "PreviewEnd" "\q" ":" "-1" "," "\q" "PreviewEndTimeSpan" "\q" ":" "\q" "-00:00:00.0010000" "\q" "," "\q" "Delay" "\q" ":" "0.0" "," "\q" "LoadingPhrase" "\q" ":" "\q" "\q" ","
   "\q" "HopoThreshold" "\q" ":" "170" "," "\q" "EighthNoteHopo" "\q" ":" "false" "," "\q" "MultiplierNote" "\q" ":" "116" "," "\q" "Source" "\q" ":" "\q" $sourcevar "\q" ","
   "\q" "PartDifficulties" "\q" ":" "{" "\q" "GUITAR" "\q" ":" $guitarrankvar "," "\q" "GUITAR_COOP" "\q" ":" "-1" "," "\q" "REAL_GUITAR" "\q" ":" $real_guitarrankvar ","
   "\q" "RHYTHM" "\q" ":" "-1" "," "\q" "BASS" "\q" ":" $bassrankvar "," "\q" "REAL_BASS" "\q" ":" $real_bassrankvar "," "\q" "DRUMS" "\q" ":" $drumrankvar ","
   "\q" "GH_DRUMS" "\q" ":" "-1" "," "\q" "REAL_DRUMS" "\q" ":" "-1" "," "\q" "KEYS" "\q" ":" $keysrankvar "," "\q" "REAL_KEYS" "\q" ":" $real_keysrankvar ","
   "\q" "VOCALS" "\q" ":" $vocalsrankvar "," "\q" "HARMONY" "\q" ":" $vocalsrankvar "}" "," "\q" "BandDifficulty" "\q" ":" $bandrankvar "," "\q" "AvailableParts" "\q" ":" "1030793138175" ","
   "\q" "VocalParts" "\q" ":" "3" "," "\q" "Checksum" "\q" ":" "\q" "C89E28F4C0987A33859ECB9DC06748EDC49B567B" "\q" "," "\q" "NotesFile" "\q" ":" "\q" "notes.mid" "\q" "," "\q" "Location" "\q" ":" "\q" "FakePath" "\q" "}"}}
   {write_file CURRENT_SONG_JSON_FILE_PATH
      {array
         $dx_current_song
      }
   }
   #endif
)
#define DX_SONG_CACHE
(
   #ifndef HX_WII
   {set $dx_song_cache_holder
      (
         #include ../../songs/missing_song_data.dta
      )
   }
   #endif
   ;{dx_log_writer TRUE $dx_song_cache_holder} ;uncomment this to generate songs_updates.dta for YARG in the log
)
#define DX_RAW_SONG_CACHE
(
   {set $dx_raw_song_cache_holder
      (
         ;#include ../../songs/dta_collection/mega_songs_data.dta
         none
      )
   }
   ;{dx_log_writer TRUE $dx_raw_song_cache_holder}
)