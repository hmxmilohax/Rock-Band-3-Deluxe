#include ..\config\macros.dta
(UIComponent
   (select_frames 15))
(UIFontImporter
   (default_bitmap_path
      "ui/resource/image"))
(BandList
   (allowed_dirs RndDir)
   (types
      (spin
         (resource_file
            "resource/list/list_spin.milo"))
      (widespinner
         (resource_file
            "resource/list/list_widespinner.milo"))
      (widespinner2
         (resource_file
            "resource/list/list_widespinner2.milo"))
      (practice_section
         (resource_file
            "resource/list/list_practice_section.milo"))
      (practice_sel_speed
         (resource_file
            "resource/list/list_practice_sel_speed.milo"))
      (header_performance
         (resource_file
            "resource/list/list_header_performance.milo"))
      (song_select
         (resource_file
            "resource/list/list_song_select_browser.milo"))
      (song_select_setlist
         (resource_file
            "resource/list/list_song_select_setlist.milo"))
      (song_select_setlist_scores
         (resource_file
            "resource/list/list_song_select_setlist_scores.milo"))
      (song_select_shortcut
         (resource_file
            "resource/list/list_song_select_shortcut.milo"))
      (standin_list
         (resource_file
            "resource/list/list_standins.milo"))
      (standin_slot_list
         (resource_file
            "resource/list/list_standin_slots.milo"))
      (band_history_list
         (resource_file
            "resource/list/list_band_history.milo"))
      (store_browser
         (resource_file
            "resource/list/list_store_browser.milo"))
      (store_filter
         (resource_file
            "resource/list/list_store_filter.milo"))
      (store_shortcut
         (resource_file
            "resource/list/list_store_shortcut.milo"))
      (store_info
         (resource_file
            "resource/list/list_store_info.milo"))
      (store_song
         (resource_file
            "resource/list/list_store_song.milo"))
      (store_song_long
         (resource_file
            "resource/list/list_store_song_long.milo"))
      (filter_select
         (resource_file
            "resource/list/list_filters.milo"))
      (filter_category
         (resource_file
            "resource/list/list_filter_categories.milo"))
      (tour_song_list
         (resource_file
            "resource/list/list_tour_songs.milo"))
      (tourdesc_list
         (resource_file
            "resource/list/list_tourdescs.milo"))
      (tour_challenge_list
         (resource_file
            "resource/list/list_tour_challenges.milo"))
      (accomplishmentsongs_instrument_list
         (resource_file
            "resource/list/list_accomplishmentsong_instruments.milo"))
      (accomplishmentsongs_source_list
         (resource_file
            "resource/list/list_accomplishmentsong_sources.milo"))
      (accomplishment_list
         (resource_file
            "resource/list/list_accomplishments.milo"))
      (accomplishment_list_row
         (resource_file
            "resource/list/list_accomplishments_row.milo"))
      (accomplishment_award_list
         (resource_file
            "resource/list/list_accomplishment_awards.milo"))
      (accomplishment_entry_list
         (resource_file
            "resource/list/list_accomplishment_entry.milo"))
      (accomplishment_category_list
         (resource_file
            "resource/list/list_accomplishment_categories.milo"))
      (boutiques_list
         (resource_file
            "resource/list/list_boutiques.milo"))
      (campaign_leaderboard_goals_list
         (resource_file
            "resource/list/list_leaderboard_goals.milo"))
      (campaign_leaderboard_career_list
         (resource_file
            "resource/list/list_leaderboard_career.milo"))
      (campaign_leaderboard_goals_choice_list
         (resource_file
            "resource/list/list_leaderboard_goals_choice.milo"))
      (campaign_leaderboard_career_choice_list
         (resource_file
            "resource/list/list_leaderboard_career_choice.milo"))
      (quest_list
         (resource_file
            "resource/list/list_quests.milo"))
      (campaign_groups_list
         (resource_file
            "resource/list/list_campaign_groups.milo"))
      (quest_filter_list
         (resource_file
            "resource/list/list_quest_filters.milo"))
      (character_list
         (resource_file
            "resource/list/list_characters.milo"))
      (overshell_friends
         (resource_file
            "resource/list/list_overshell_friends.milo"))
      (overshell_friends_ingame
         (resource_file
            "resource/list/list_overshell_friends_ingame.milo"))
      (overshell_users
         (resource_file
            "resource/list/list_overshell_users.milo"))
      (overshell_users_ingame
         (resource_file
            "resource/list/list_overshell_users_ingame.milo"))
      (overshell_menubig
         (resource_file
            "resource/list/list_overshell_menubig.milo"))
      (overshell_menubig_ingame
         (resource_file
            "resource/list/list_overshell_menubig_ingame.milo"))
      (overshell_menu_keep_highlight
         (resource_file
            "resource/list/list_overshell_menu_keep_highlight.milo"))
      (overshell_menu_keep_highlight_ingame
         (resource_file
            "resource/list/list_overshell_menu_keep_highlight_ingame.milo"))
      (overshell_menu
         (resource_file
            "resource/list/list_overshell_menu.milo")
         (dark
            "song_disc_dark.mat")
         (light
            "song_disc_light.mat")
         (mat
            ($data)
            {if_else
               {==
                  {mod $data 2}
                  0}
               [dark]
               [light]}))
      (overshell_menu_ingame
         (resource_file
            "resource/list/list_overshell_menu_ingame.milo"))
      (overshell_modifiers
         (resource_file
            "resource/list/list_overshell_modifiers.milo"))
      (overshell_modifiers_ingame
         (resource_file
            "resource/list/list_overshell_modifiers_ingame.milo"))
      (overshell_part_select
         (resource_file
            "resource/list/list_overshell_part_select.milo"))
      (overshell_part_select_ingame
         (resource_file
            "resource/list/list_overshell_part_select_ingame.milo"))
      (credits
         (resource_file
            "resource/list/list_credits.milo"))
      (leaderboards
         (resource_file
            "resource/list/list_leaderboards.milo"))
      (leaderboards_shortcut
         (resource_file
            "resource/list/list_leaderboards_shortcut.milo"))
      (mini_leaderboard
         (resource_file
            "resource/list/list_mini_leaderboard.milo"))
      (gamertag
         (resource_file
            "resource/list/list_gamertag.milo"))
      (band_chooser
         (resource_file
            "resource/list/list_band_chooser.milo"))
      (list_bands
         (resource_file
            "resource/list/list_bands.milo"))
      (tourproperties_list
         (resource_file
            "resource/list/list_tourproperties.milo"))
      (gamertag_owner_chooser
         (resource_file
            "resource/list/list_gamertag_owner_chooser.milo"))
      (calibration_mode
         (resource_file
            "resource/list/list_calibration_mode.milo"))
      (character_creator_default
         (resource_file
            "resource/list/list_character_creator.milo"))
      (character_creator_gender
         (resource_file
            "resource/list/list_character_creator_gender.milo"))
      (face_options_list
         (resource_file
            "resource/list/list_face_options.milo"))
      (face_options_list_row
         (resource_file
            "resource/list/list_face_options_row.milo"))
      (list_finishes
         (resource_file
            "resource/list/list_finishes.milo"))
      (trainers
         (resource_file
            "resource/list/list_trainers.milo"))
      (lessons_list
         (resource_file
            "resource/list/list_lessons.milo"))
      (tattoos_list
         (resource_file
            "resource/list/list_tattoos.milo"))
      (assets_list
         (resource_file
            "resource/list/list_assets.milo"))
      (award_assets_list
         (resource_file
            "resource/list/list_award_assets.milo"))
      (patch_select
         (resource_file
            "resource/list/list_patch.milo"))
      (patch_select_row
         (resource_file
            "resource/list/list_patch_row.milo"))
      (sticker
         (resource_file
            "resource/list/list_sticker.milo"))
      (sticker_row
         (resource_file
            "resource/list/list_sticker_row.milo"))
      (layer
         (resource_file
            "resource/list/list_layer.milo"))
      (category
         (resource_file
            "resource/list/list_category.milo"))
      (main_hub_messages
         (resource_file
            "resource/list/list_main_hub_messages.milo"))
      (trainer_section_select
         (resource_file
            "resource/list/list_trainer_section_select.milo"))
      (band_members
         (resource_file
            "resource/list/list_bandinfo_members.milo"))
      (band_roster
         (resource_file
            "resource/list/list_bandinfo_roster.milo"))
      (potential_band_members
         (resource_file
            "resource/list/list_bandinfo_potential_members.milo"))
      (music_store_storefront
         (resource_file
            "resource/list/list_store_storefront.milo"))
      (token_redemption_ps3
         (resource_file
            "resource/list/list_token_redemption_ps3.milo"))))
#define LABEL_AND_BUTTON_TYPES
(#include ui_fonts.dta)
(BandLabel
   (allowed_dirs RndDir)
   (init
      {set
         [resource_name]
         "pentatonic"})
   (resources_path
      "resource/fonts/"))
(BandButton
   (allowed_dirs RndDir)
   (init
      {set
         [resource_name]
         "pentatonic"})
   (resources_path
      "resource/fonts/"))
(PlayerDiffIcon
   (allowed_dirs RndDir)
   (init
      {$this set_type default})
   (types
      (default
         (resource_file
            "resource/fonts/chapter_diff_icons.milo")
         (player_meshes
            "01.mesh"
            "02.mesh"
            "03.mesh"
            "04.mesh")
         (player_mat
            "player.mat")
         (no_player_mat
            "player_none.mat")
         (diff_labels
            "easy.lbl"
            "medium.lbl"
            "hard.lbl"
            "expert.lbl"))))
(BandSwatch
   (types
      (default
         (resource_file
            "resource/swatch.milo"))))
(InstrumentDifficultyDisplay
   (allowed_dirs RndDir)
   (init
      {$this set_type default})
   (types
      (default
         (resource_file
            "resource/instrument_difficulty_display.milo")
         (difficulty_anim
            "difficulty.anim")
         (vocal_part_mesh
            "vocal_part.mesh")
         (vocal_part1_mat
            "vocal_part1.mat")
         (vocal_part2_mat
            "vocal_part2.mat")
         (vocal_part3_mat
            "vocal_part3.mat")
         (instrument_label
            "instrument.lbl")
         (instrument_icon
            "instrument_icon.lbl")
         (get_track_type_sym
            {if_else
               {==
                  [instrument_type]
                  real_drum}
               drum
               [instrument_type]})
         (get_inst_icon
            {if_else
               {exists song_mgr}
               {if_else
                  {==
                     [instrument_type]
                     real_drum}
                  {get_font_char_from_score_type kScoreRealDrum}
                  {if_else
                     {==
                        [instrument_type]
                        harmony}
                     {do
                        ($num_vocal_parts
                           {$this get num_vocal_parts})
                        {cond
                           ({== $num_vocal_parts 2}
                              {elem
                                 {find $syscfg instrument_icons harmony_2}
                                 1})
                           ({== $num_vocal_parts 3}
                              {elem
                                 {find $syscfg instrument_icons harmony_3}
                                 1})
                           {elem
                              {find $syscfg instrument_icons harmony_3}
                              1}}}
                     {cnv_instrumenttoicon
                        [instrument_type]}}}
               "G"})
         (set_rank
            ($rank)
            {if_else
               {== $rank 0}
               {do
                  {$this set has_part FALSE}
                  {$this set num_vocal_parts 0}}
               {do
                  ($track_type
                     {$this get_track_type_sym})
                  {$this set has_part TRUE}
                  {if_else
                     {== $track_type harmony}
                     {if_else
                        {<
                           {$this get num_vocal_parts}
                           2}
                        {$this set has_part FALSE}
                        {$this
                           set
                           difficulty
                           {song_mgr rank_tier $rank vocals}}}
                     {$this
                        set
                        difficulty
                        {song_mgr rank_tier $rank $track_type}}}}})
         (set_song
            ($song)
            {$this set has_part FALSE}
            {$this set num_vocal_parts 0}
            {do
               ($real_track_type_sym
                  {$this get_track_type_sym})
               ($track_type_sym $real_track_type_sym)
               {if
                  {== $real_track_type_sym harmony}
                  {set $track_type_sym vocals}}
               {if
                  {&&
                     {exists song_mgr}
                     {song_mgr part_plays_in_song $song $track_type_sym}}
                  {$this set has_part TRUE}
                  {$this
                     set
                     difficulty
                     {song_mgr rank_tier_for_song $song $track_type_sym}}
                  {if
                     {== $real_track_type_sym harmony}
                     {$this
                        set
                        num_vocal_parts
                        {song_mgr num_vocal_parts $song}}
                     {if
                        {<=
                           {$this get num_vocal_parts}
                           1}
                        {$this set has_part FALSE}}}}})
         (set_setlist
            {if
               {exists song_mgr}
               {do
                  ($highest_difficulty -1)
                  ($most_vocal_parts 0)
                  ($has_part FALSE)
                  {foreach_int
                     $i
                     0
                     {meta_performer num_songs}
                     {do
                        ($track_type_sym
                           {$this get_track_type_sym})
                        ($song
                           {meta_performer indexed_song $i})
                        ($difficulty
                           {song_mgr rank_tier_for_song $song $track_type_sym})
                        ($num_vocal_parts 0)
                        {if
                           {song_mgr part_plays_in_song $song $track_type_sym}
                           {set $has_part TRUE}}
                        {if
                           {> $difficulty $highest_difficulty}
                           {set $highest_difficulty $difficulty}}
                        {if
                           {== $track_type_sym vocals}
                           {set
                              $num_vocal_parts
                              {song_mgr num_vocal_parts $song}}
                           {if
                              {> $num_vocal_parts $most_vocal_parts}
                              {set $most_vocal_parts $num_vocal_parts}}}}}
                  {$this set difficulty $highest_difficulty}
                  {$this set has_part $has_part}
                  {if_else
                     {==
                        {$this get_track_type_sym}
                        vocals}
                     {$this set num_vocal_parts $most_vocal_parts}
                     {$this set num_vocal_parts 0}}}}))))
(StarDisplay
   (allowed_dirs RndDir)
   (init
      {$this set_type default})
   (types
      (default
         (resource_file
            "resource/star_display.milo")
         (resource_stars_label
            "stars.lbl")
         (resource_stars_mixed_label
            "stars_mixed.lbl"))
      (music_library
         (resource_file
            "resource/star_display_ml.milo")
         (resource_stars_label
            "stars.lbl")
         (resource_stars_mixed_label
            "stars_mixed.lbl"))
      (music_library_header
         (resource_file
            "resource/star_display_mlhead.milo")
         (resource_stars_label
            "stars.lbl")
         (resource_stars_mixed_label
            "stars_mixed.lbl"))))
(ScoreDisplay
   (allowed_dirs RndDir)
   (init
      {$this set_type default})
   (types
      (default
         (resource_file
            "resource/score_display.milo")
         (combined_label
            "combined.lbl"))
      (endgame
         (resource_file
            "resource/score_display_endgame.milo")
         (combined_label
            "combined.lbl"))
      (left_aligned
         (resource_file
            "resource/score_display_left.milo")
         (combined_label
            "combined.lbl"))
      (battle
         (resource_file
            "resource/score_display_battle.milo")
         (combined_label
            "combined.lbl"))
      (center_aligned
         (resource_file
            "resource/score_display_center.milo")
         (combined_label
            "combined.lbl"))
      (leaderboard_default
         (resource_file
            "resource/leaderb_score_display.milo")
         (combined_label
            "combined.lbl"))
      (leaderboard_left_aligned
         (resource_file
            "resource/leaderb_score_display_left.milo")
         (combined_label
            "combined.lbl"))
      (leaderboard_center_aligned
         (resource_file
            "resource/leaderb_score_display_center.milo")
         (combined_label
            "combined.lbl"))))
(ReviewDisplay
   (allowed_dirs RndDir)
   (init
      {$this set_type default})
   (types
      (default
         (resource_file
            "resource/review_display.milo")
         (review_anim
            "review.anim")
         (focus_anim
            "focus.anim"))))
(ScrollbarDisplay
   (allowed_dirs RndDir)
   (init
      {$this set_type default})
   (types
      (default
         (resource_file
            "resource/scrollbar_display.milo")
         (thumb_group
            "thumb.grp")
         (top_bone
            "scrollbar_bg_bone_top.mesh")
         (bottom_bone
            "scrollbar_bg_bone_bottom.mesh")
         (thumb_top_bone
            "scrollbar_bone_top.mesh")
         (thumb_bottom_bone
            "scrollbar_bone_bottom.mesh"))
      (accomplishments
         (resource_file
            "resource/scrollbar_accomplishments.milo")
         (thumb_group
            "thumb.grp")
         (top_bone
            "scrollbar_bg_bone_top.mesh")
         (bottom_bone
            "scrollbar_bg_bone_bottom.mesh")
         (thumb_top_bone
            "scrollbar_bone_top.mesh")
         (thumb_bottom_bone
            "scrollbar_bone_bottom.mesh"))))
(LabelShrinkWrapper
   (allowed_dirs PanelDir)
   (init
      {$this set_type default})
   (types
      (main
         (resource_file
            "resource/label_shrink_wrapper_main.milo")
         (topleft_bone
            "bone_top_left.mesh")
         (topright_bone
            "bone_top_right.mesh")
         (bottomleft_bone
            "bone_bottom_left.mesh")
         (bottomright_bone
            "bone_bottom_right.mesh"))
      (main2
         (resource_file
            "resource/label_shrink_wrapper_main2.milo")
         (topleft_bone
            "bone_top_left.mesh")
         (topright_bone
            "bone_top_right.mesh")
         (bottomleft_bone
            "bone_bottom_left.mesh")
         (bottomright_bone
            "bone_bottom_right.mesh"))))
(CheckboxDisplay
   (allowed_dirs RndDir)
   (init
      {$this set_type default})
   (types
      (default
         (resource_file
            "resource/checkbox_display.milo")
         (check_mesh
            "check.mesh"))))
(MeterDisplay
   (allowed_dirs RndDir)
   (init
      {$this set_type default})
   (types
      (default
         (resource_file
            "resource/meter_display.milo")
         (meter_label
            "meter.lbl")
         (meter_anim
            "meter.anim"))
      (simple_text
         (resource_file
            "resource/meter_display_text.milo")
         (meter_label
            "meter.lbl")
         (meter_anim
            "meter.anim"))
      (campaign_hub
         (resource_file
            "resource/campaign_hubmeter.milo")
         (meter_label
            "meter_complete.lbl")
         (meter_anim
            "meter.anim"))
      (campaign_widget
         (resource_file
            "resource/campaign_widget.milo")
         (meter_label
            "meter_progress.lbl")
         (meter_anim
            "meter.anim"))
      (campaign
         (resource_file
            "resource/campaign_topmeter.milo")
         (meter_label
            "meter_progress.lbl")
         (meter_anim
            "meter.anim")
         (enter
            {{{$this get_resource_dir}
                  find
                  "start.trig"}
               trigger}))
      (content_loading
         (resource_file
            "resource/content_loading_meter.milo")
         (meter_anim
            "meter.anim"))))
(MiniLeaderboardDisplay
   (allowed_dirs RndDir)
   (init
      {$this set_type default})
   (types
      (default
         (resource_file
            "resource/mini_leaderboard_display.milo")
         (title_label
            "title.lbl")
         (icons_label
            "")
         (leaderboard
            "leaderboard.lst")
         (reset_trigger
            "")
         (fade_in_trigger
            "")
         (fade_out_trigger
            "")
         (pending_group
            ""))))
(P9TexMesh
   (allowed_dirs RndDir)
   (init
      {$this set_type default})
   (types
      (default
         (resource_file
            "resource/p9_tex_mesh.milo")
         (mesh
            "Mesh.mesh")
         (mat
            "Mat.mat")
         (tex
            "Tex.tex"))))
(MicInputArrow
   (allowed_dirs RndDir)
   (init
      {$this set_type default})
   (types
      (default
         (resource_file
            "resource/mic_input_arrow.milo")
         (connected_triggers
            "0_connected.trig"
            "1_connected.trig"
            "2_connected.trig")
         (disconnected_triggers
            "0_disconnected.trig"
            "1_disconnected.trig"
            "2_disconnected.trig")
         (hidden_triggers
            "0_hidden.trig"
            "1_hidden.trig"
            "2_hidden.trig")
         (preview_triggers
            "0_preview.trig"
            "1_preview.trig"
            "2_preview.trig")
         (extended_triggers
            "0_extended.trig"
            "1_extended.trig"
            "2_extended.trig")
         (level_anims
            "0_miclevel.anim"
            "1_miclevel.anim"
            "2_miclevel.anim")
         (mic_energy_normalizer 2.0))))
(InlineHelp
   (allowed_dirs RndDir)
   (init
      {$this set_type default})
   (types
      (default
         (resource_file
            "resource/inline_help.milo")
         (text_label
            "text.lbl")
         (action_chars
            (vocals
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               "R"
               ""
               ""
               "X")
            (guitar
               ""
               "g"
               "r"
               "y"
               "S"
               "s"
               "G"
               ""
               "G"
               ""
               ""
               "o"
               ""
               ""
               "b")
            (drums
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               "F"
               ""
               ""
               "X")
            (keys
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               "O"
               ""
               ""
               "X")
            (real_guitar
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               ""
               ""
               ""
               "X")))
      (start_button
         (resource_file
            "resource/inline_help_start_large.milo")
         (text_label
            "text.lbl")
         (action_chars
            (vocals
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               "R"
               ""
               ""
               "X")
            (guitar
               ""
               "g"
               "r"
               "y"
               "S"
               "s"
               "G"
               ""
               "G"
               ""
               ""
               "o"
               ""
               ""
               "b")
            (drums
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               "F"
               ""
               ""
               "X")
            (keys
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               ""
               ""
               ""
               "X")
            (real_guitar
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               ""
               ""
               ""
               "X")))
      (center
         (resource_file
            "resource/inline_help_center.milo")
         (text_label
            "text.lbl")
         (action_chars
            (vocals
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               "R"
               ""
               ""
               "X")
            (guitar
               ""
               "g"
               "r"
               "y"
               "S"
               "s"
               "G"
               ""
               "G"
               ""
               ""
               "o"
               ""
               ""
               "b")
            (drums
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               "F"
               ""
               ""
               "X")
            (keys
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               ""
               ""
               ""
               "X")
            (real_guitar
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               ""
               ""
               ""
               "X")))
      (right
         (resource_file
            "resource/inline_help_right.milo")
         (text_label
            "text.lbl")
         (action_chars
            (vocals
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               "R"
               ""
               ""
               "X")
            (guitar
               ""
               "g"
               "r"
               "y"
               "S"
               "s"
               "G"
               ""
               "G"
               ""
               ""
               "o"
               ""
               ""
               "b")
            (drums
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               "F"
               ""
               ""
               "X")
            (keys
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               ""
               ""
               ""
               "X")
            (real_guitar
               ""
               "A"
               "B"
               "Y"
               "S"
               "s"
               ""
               ""
               ""
               ""
               ""
               ""
               ""
               ""
               "X")))))
(UIPicture
   (types
      (picture_albumart
         (tex_file
            "image/blank_album_art_keep.png"))))
(UISlider
   (init
      {$this set_type audio})
   (types
      (audio
         (resource_file
            "resource/slider_audio.milo")
         (vertical FALSE)
         (meshes
            ("pod.mesh"
               (normal
                  "slider_pod_normal.mat")
               (focused
                  "slider_pod_focused.mat")
               (disabled
                  "slider_pod_disabled.mat")
               (selected
                  "slider_pod_selected.mat"))
            ("slider.mesh"
               (normal
                  "slider_normal.mat")
               (focused
                  "slider_focused.mat")
               (disabled
                  "slider_disabled.mat")
               (selected
                  "slider_selected.mat"))))
      (generic
         (resource_file
            "resource/slider_char_creator.milo")
         (vertical FALSE)
         (meshes
            ("pod.mesh"
               (normal
                  "slider_pod_normal.mat")
               (focused
                  "slider_pod_focused.mat")
               (disabled
                  "slider_pod_disabled.mat")
               (selected
                  "slider_pod_selected.mat"))
            ("slider.mesh"
               (normal
                  "slider_normal.mat")
               (focused
                  "slider_focused.mat")
               (disabled
                  "slider_disabled.mat")
               (selected
                  "slider_selected.mat"))))))
(PanelDir
   (types
      (shell
         (editor SHELL_EDITOR)
         SHELL_TYPE)))
#merge overshell/overshell_dir.dta
#merge character_creator/character_creator_dir.dta
(TexMovie
   (types
      (shell
         (change_file
            {if_else
               {exists game}
               {random_elem
                  ("videos/shell1.bik"
                     "videos/shell2.bik"
                     "videos/shell3.bik")}
               kDataUnhandled}))))
(UIButton
   (allowed_dirs))
(UIList
   (allowed_dirs))
(UILabel
   (allowed_dirs))
(BandHighlight
   (allowed_dirs))