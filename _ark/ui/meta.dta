{new
   MetaPanel
   meta
   (file meta_panel.milo)
   (playing_post_set FALSE)
   (is_crowd_playing FALSE)
   (unload)
   (finish_load)
   (enter
      {ui
         add_sink
         $this
         (screen_change)}
      {set
         [playing_post_set]
         FALSE})
   (exit
      {ui remove_sink $this screen_change}
      {set
         [is_crowd_playing]
         FALSE})
   (play_seq
      ($seq)
      {$seq play})
   (stop_seq
      ($seq)
      {$seq stop})
   (play_postset_loop
      ($play)
   ;idk wtf harmonix was smoking but this doesnt pass linting
   ;   {if_else
   ;      $play
   ;      {unless
   ;         [playing_post_set]}}
      {set
         [playing_post_set]
         $play}
   )
}
{new
   UIPanel
   postsong_sfx_panel
   (active FALSE)
   (load
      {set
         [active]
         TRUE})
   (enter
      {set
         [active]
         TRUE})
   (exit
      {set
         [active]
         FALSE})}
#define COMMON_DIALOG_PANEL_HANDLERS
((set_custom_1btn
      ($msg $opt1)
      {dialog_title.lbl set_showing FALSE}
      {msg.lbl set_token_fmt $msg}
      {opt1.btn set_token_fmt $opt1}
      {opt1.btn set_showing TRUE}
      {opt2.btn set_showing FALSE}
      {opt3.btn set_showing FALSE}
      {opt4.btn set_showing FALSE}
      {$this disable opt2.btn}
      {$this disable opt3.btn}
      {$this disable opt4.btn}
      {yes.btn set_showing FALSE}
      {no.btn set_showing FALSE}
      {ok.btn set_showing FALSE}
      {$this set_focus opt1.btn})
(set_custom
      ($msg $opt1 $opt2 $focus)
      {dialog_title.lbl set_showing FALSE}
      {msg.lbl set_token_fmt $msg}
      {opt1.btn set_token_fmt $opt1}
      {opt2.btn set_token_fmt $opt2}
      {opt1.btn set_showing TRUE}
      {opt2.btn set_showing TRUE}
      {opt3.btn set_showing FALSE}
      {opt4.btn set_showing FALSE}
      #ifdef HX_WII {$this enable opt2.btn} #endif
      {$this disable opt3.btn}
      {$this disable opt4.btn}
      {yes.btn set_showing FALSE}
      {no.btn set_showing FALSE}
      {ok.btn set_showing FALSE}
      {$this set_focus $focus})
   (set_custom_3btn
      ($msg $opt1 $opt2 $opt3 $focus)
      {dialog_title.lbl set_showing FALSE}
      {msg.lbl set_token_fmt $msg}
      {opt1.btn set_token_fmt $opt1}
      {opt2.btn set_token_fmt $opt2}
      {opt3.btn set_token_fmt $opt3}
      {opt1.btn set_showing TRUE}
      {opt2.btn set_showing TRUE}
      {opt3.btn set_showing TRUE}
      {opt4.btn set_showing FALSE}
      #ifdef HX_WII {$this enable opt2.btn} #endif
      {$this enable opt3.btn}
      {$this disable opt4.btn}
      {yes.btn set_showing FALSE}
      {no.btn set_showing FALSE}
      {ok.btn set_showing FALSE}
      {$this set_focus $focus})
   (set_custom_4btn
      ($msg $opt1 $opt2 $opt3 $opt4 $focus)
      {dialog_title.lbl set_showing FALSE}
      {msg.lbl set_token_fmt $msg}
      {opt1.btn set_token_fmt $opt1}
      {opt2.btn set_token_fmt $opt2}
      {opt3.btn set_token_fmt $opt3}
      {opt4.btn set_token_fmt $opt4}
      {opt1.btn set_showing TRUE}
      {opt2.btn set_showing TRUE}
      {opt3.btn set_showing TRUE}
      {opt4.btn set_showing TRUE}
      #ifdef HX_WII {$this enable opt2.btn} #endif
      {$this enable opt3.btn}
      {$this enable opt4.btn}
      {yes.btn set_showing FALSE}
      {no.btn set_showing FALSE}
      {ok.btn set_showing FALSE}
      {$this set_focus $focus})
   (set_yesno
      ($msg $focus)
      {dialog_title.lbl set_showing FALSE}
      {msg.lbl set_token_fmt $msg}
      {opt1.btn set_showing FALSE}
      {opt2.btn set_showing FALSE}
      {opt3.btn set_showing FALSE}
      {opt4.btn set_showing FALSE}
      {yes.btn set_showing TRUE}
      {no.btn set_showing TRUE}
      {ok.btn set_showing FALSE}
      {$this set_focus $focus})
   (set_okcancel
      ($msg $focus)
      {dialog_title.lbl set_showing FALSE}
      {msg.lbl set_token_fmt $msg}
      {opt1.btn set_showing FALSE}
      {opt2.btn set_showing FALSE}
      {opt3.btn set_showing FALSE}
      {opt4.btn set_showing FALSE}
      {yes.btn set_showing TRUE}
      {no.btn set_showing TRUE}
      {ok.btn set_showing FALSE}
      {no.btn set_token_fmt cancel}
      {yes.btn set_token_fmt ok}
      {$this set_focus $focus})
   (set_ok
      ($msg)
      {dialog_title.lbl set_showing FALSE}
      {msg.lbl set_token_fmt $msg}
      {opt1.btn set_showing FALSE}
      {opt2.btn set_showing FALSE}
      {opt3.btn set_showing FALSE}
      {opt4.btn set_showing FALSE}
      {yes.btn set_showing FALSE}
      {no.btn set_showing FALSE}
      {ok.btn set_showing TRUE}
      {$this set_focus ok.btn})
   (set_msg
      ($msg)
      {dialog_title.lbl set_showing FALSE}
      {msg.lbl set_token_fmt $msg}
      {msg.lbl set_showing TRUE}
      {opt1.btn set_showing FALSE}
      {opt2.btn set_showing FALSE}
      {opt3.btn set_showing FALSE}
      {opt4.btn set_showing FALSE}
      {yes.btn set_showing FALSE}
      {no.btn set_showing FALSE}
      {ok.btn set_showing FALSE})
   (set_title
      ($msg)
      {dialog_title.lbl set_showing TRUE}
      {dialog_title.lbl set_token_fmt $msg}))
{new
   UIPanel
   dialog_panel
   COMMON_DIALOG_PANEL_HANDLERS
   (file
      "global/dialog.milo")}
{new
   UIPanel
   dialog_small_panel
   COMMON_DIALOG_PANEL_HANDLERS
   (file
      "global/dialog_small.milo")}
{func
   push_basic_confirm_dialog
   ($dialog_text)
   {basic_confirm_dialog_screen set ok_msg $dialog_text}
   {ui push_screen basic_confirm_dialog_screen}}
{new
   BandScreen
   basic_confirm_dialog_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (ok_msg '')
   (enter
      {dialog_panel
         set_ok
         [ok_msg]})
   (SELECT_MSG
      {ui pop_screen})}
{func
   push_basic_confirm_dialog_small
   ($dialog_text)
   {basic_confirm_dialog_small_screen set ok_msg $dialog_text}
   {ui push_screen basic_confirm_dialog_small_screen}}
{new
   BandScreen
   basic_confirm_dialog_small_screen
   (panels dialog_small_panel)
   (focus dialog_small_panel)
   (ok_msg '')
   (enter
      {dialog_small_panel
         set_ok
         [ok_msg]})
   (SELECT_MSG
      {ui pop_screen})}
{new
   EventDialogPanel
   event_dialog_panel
   (file
      "global/event_dialog.milo")}
{new
   ContentLoadingPanel
   content_loading_panel
   (file
      "global/content_loading.milo")}
{func
   play_goal_sound
   ($metascore)
   {cond
      ({campaign has_score_reached_campaign_level $metascore campaignlevel_jet}
         {synth play achievement_jet.cue})
      ({campaign has_score_reached_campaign_level $metascore campaignlevel_bus}
         {synth play achievement_bus.cue})
      ({campaign has_score_reached_campaign_level $metascore campaignlevel_van}
         {synth play achievement_van.cue})
      (TRUE
         {synth play achievement_subway.cue})}}
#define PASSIVE_MESSAGE_SETUP_HANDLERS
((setup_message_text
      ($msg_fmt $is_levelup)
      {do
         {with
            [message_dir]
            {text.lbl set_token_fmt $msg_fmt}
            {text_state.grp set_showing TRUE}
            {icon_state.grp set_showing FALSE}
            {careerstep_state.grp set_showing FALSE}
            {careergoal_state.grp set_showing FALSE}
            {careermultigoal_state.grp set_showing FALSE}
            {unless $dx_no_message_sound ;prevents message sound from playing when scrolling in menus
               {if_else
                  $is_levelup
                  {synth play career_rankup.cue}
                  {synth play passive_msg_show.cue}}}}
            }
      {$this post_setup})
   (setup_message_icon
      ($msg_fmt $icon)
      {do
         {with
            [message_dir]
            {icon.lbl set_token_fmt $msg_fmt}
            {icon.pic set tex_file $icon}
            {text_state.grp set_showing FALSE}
            {icon_state.grp set_showing TRUE}
            {careerstep_state.grp set_showing FALSE}
            {careergoal_state.grp set_showing FALSE}
            {careermultigoal_state.grp set_showing FALSE}
            {synth play passive_msg_show.cue}}}
      {$this post_setup})
   (setup_message_careergoal
      ($msg_fmt $fans $meter_val $meter_max $meter_anim_val $icon $icon_current $icon_next $metascore)
      {do
         ($delay
            [meter_anim_delay])
         {with
            [message_dir]
            {careergoal.lbl set_token_fmt $msg_fmt}
            {careergoal_fans.lnt snap_to_value 0}
            {careergoal_fans.lnt set desired_value $fans}
            {if_else
               {==
                  $icon_next
                  ""}
               {do
                  {careergoal.md set showing FALSE}
                  {careergoal_current.pic
                     set
                     tex_file
                     ""}
                  {careergoal_next.pic
                     set
                     tex_file
                     ""}}
               {do
                  {careergoal.md set showing TRUE}
                  {careergoal.md set current_value $meter_val}
                  {careergoal.md set max_value $meter_max}
                  {if
                     {>= $meter_anim_val 0}
                     {careergoal.md animate_to_value $meter_anim_val $delay}}
                  {play_goal_sound $metascore}
                  {careergoal_current.pic set tex_file $icon_current}
                  {careergoal_next.pic set tex_file $icon_next}}}
            {careergoal.pic set tex_file $icon}
            {text_state.grp set_showing FALSE}
            {icon_state.grp set_showing FALSE}
            {careerstep_state.grp set_showing FALSE}
            {careergoal_state.grp set_showing TRUE}
            {careermultigoal_state.grp set_showing FALSE}}}
      {$this post_setup})
   (setup_message_careerstep
      ($msg_fmt $meter_val $meter_max $meter_anim_val $icon)
      {do
         ($delay
            [meter_anim_delay])
         {with
            [message_dir]
            {careerstep.lbl set_token_fmt $msg_fmt}
            {careerstep.md set current_value $meter_val}
            {careerstep.md set max_value $meter_max}
            {if
               {>= $meter_anim_val 0}
               {careerstep.md animate_to_value $meter_anim_val $delay}}
            {synth play make_progress.cue}
            {careerstep.pic set tex_file $icon}
            {text_state.grp set_showing FALSE}
            {icon_state.grp set_showing FALSE}
            {careerstep_state.grp set_showing TRUE}
            {careergoal_state.grp set_showing FALSE}
            {careermultigoal_state.grp set_showing FALSE}}}
      {$this post_setup})
   (setup_message_careermulti
      ($msg_fmt $fans $meter_val $meter_max $meter_anim_val $icon_current $icon_next $metascore)
      {do
         ($delay
            [meter_anim_delay])
         {with
            [message_dir]
            {careermultigoal.lbl set_token_fmt $msg_fmt}
            {careermultigoal_fans.lnt snap_to_value 0}
            {careermultigoal_fans.lnt set desired_value $fans}
            {if_else
               {==
                  $icon_next
                  ""}
               {do
                  {careermultigoal.md set showing FALSE}
                  {careermultigoal_current.pic
                     set
                     tex_file
                     ""}
                  {careermultigoal_next.pic
                     set
                     tex_file
                     ""}}
               {do
                  {careermultigoal.md set showing TRUE}
                  {careermultigoal.md set current_value $meter_val}
                  {careermultigoal.md set max_value $meter_max}
                  {if
                     {>= $meter_anim_val 0}
                     {careermultigoal.md animate_to_value $meter_anim_val $delay}}
                  {play_goal_sound $metascore}
                  {careermultigoal_current.pic set tex_file $icon_current}
                  {careermultigoal_next.pic set tex_file $icon_next}}}
            {text_state.grp set_showing FALSE}
            {icon_state.grp set_showing FALSE}
            {careerstep_state.grp set_showing FALSE}
            {careergoal_state.grp set_showing FALSE}
            {careermultigoal_state.grp set_showing TRUE}}}
      {$this post_setup})
      #ifdef HX_WII
      (clear_pics
      {with
         [message_dir]
         {icon.pic set tex_file ''}
         {careergoal_current.pic set tex_file ''}
         {careergoal_next.pic set tex_file ''}
         {careermultigoal_current.pic set tex_file ''}
         {careermultigoal_next.pic set tex_file ''}
         {careergoal.pic set tex_file ''}
         {careerstep.pic set tex_file ''}})
      #endif)
{new
   PassiveMessagesPanel
   passive_messages_panel
   (file
      "global/passive_messages.milo")
   PASSIVE_MESSAGE_SETUP_HANDLERS
   (message_dir passive_messages_panel)
   (msg_duration 4000)
   (meter_anim_delay 500)
   (enter)
   (exit)}
{new
   UIPanel
   abstract_wipe_panel
   (file
      "global/abstract_wipes.milo")
   (is_wiping_in FALSE)
   (is_wiping_out FALSE)
   (has_selected_pp FALSE)
   (finish_load
      {abstract_transition.pp set priority 2.0})
   (check_wipe_done
      {if
         [is_wiping_in]
         {if
            {&&
               {!
                  {wipe_in_forward.trg is_blocking}}
               {!
                  {wipe_in_back.trg is_blocking}}}
            {set
               [is_wiping_in]
               FALSE}
            {abstract_transition.pp multi_unselect}
            {set
               [has_selected_pp]
               FALSE}}}
      {if
         [is_wiping_out]
         {if
            {&&
               {!
                  {wipe_out_forward.trg is_blocking}}
               {!
                  {wipe_out_back.trg is_blocking}}}
            {set
               [is_wiping_out]
               FALSE}}})
   (wipe_in
      ($back)
      {set
         [is_wiping_in]
         TRUE}
      {if_else
         $back
         {wipe_in_back.trg trigger}
         {wipe_in_forward.trg trigger}}
      {unless
         [has_selected_pp]
         {abstract_transition.pp multi_select}
         {set
            [has_selected_pp]
            TRUE}})
   (wiping_in
      [is_wiping_in])
   (wipe_out
      ($back)
      {set
         [is_wiping_out]
         TRUE}
      {if_else
         $back
         {wipe_out_back.trg trigger}
         {wipe_out_forward.trg trigger}}
      {unless
         [has_selected_pp]
         {abstract_transition.pp multi_select}
         {set
            [has_selected_pp]
            TRUE}})
   (wiping_out
      [is_wiping_out])
   #ifdef HX_WII
   (wipe_pp
      {$this find abstract_transition.pp})
   #endif}
#define MOVIE_PANEL_STUFF
((file
      "movie_pause.milo")
   (preload FALSE)
   (audio TRUE)
   (loop FALSE)
   (focus resume.btn)
   (enter
      {if_else
         {$this
            has
            (skip_text)}
         {skip.btn
            set
            text_token
            [skip_text]}
         {skip.btn set text_token story_movie_pause_skip}}
      {platform_mgr
         add_sink
         $this
         (ui_changed)})
   (exit
      {platform_mgr remove_sink $this ui_changed})
   (show_menu
      {$this set_paused TRUE}
      {$this set_menu_shown TRUE}
      {fade.anim animate}
      {$this
         set_focus
         "resume.btn"})
   (hide_menu
      {$this set_paused FALSE}
      {fade.anim stop_animation}
      {fade.anim set_frame 0}
      {$this set_menu_shown FALSE})
   (BUTTON_DOWN_MSG
      {if_else
         {== $action kAction_Start}
         {do
            {if_else
               {$this is_menu_shown}
               {$this hide_menu}
               {$this show_menu}}
            {play_instr_sfx $user button_back}
            kDataUnhandled}
         {if_else
            {$this is_menu_shown}
            {do
               {if
                  {== $action kAction_Cancel}
                  {play_instr_sfx $user button_back}
                  {$this hide_menu}}
               kDataUnhandled}
            {do
               #ifdef HX_PS3
               {if
                  {!
                     {&&
                        {'||'
                           {== $action kAction_Option}
                           {== $action kAction_None}}
                        {==
                           {$user connected_controller_type}
                           kControllerGuitar}}}
                  {$this show_hint}}
               #else
               {$this show_hint}
               #endif
               0}}})
   (SELECT_DONE_MSG
      {if
         {$this is_menu_shown}
         {switch
            $component
            (resume.btn
               {$this hide_menu})
            (skip.btn
               {$this movie_done})}})
   (UI_CHANGED_MSG
      {if
         {&&
            {platform_mgr guide_showing}
            {!
               {$this is_menu_shown}}}
         {$this show_menu}}))
{new
   ConnectionStatusPanel
   connection_status_panel
   (on_connection_lost
      {ui_event_mgr
         trigger_event
         lost_connection
         (dummy
            init
            {if_else
               {platform_mgr is_ethernet_cable_connected}
               kLostConnection
               kEthernetUnplugged})})
   (no_online_privilege
      {ui_event_mgr
         trigger_event
         no_online_privileges
         (dummy init 0)})}