#define TRACK_END_FRAME
(1920)
#define TRACK_PANEL_HANDLERS
((enter
      {game add_sink $this}
      {$this
         set_showing
         {!
            {gamemode in_mode practice}}})
   (exit
      {game remove_sink $this})
   (unison_hit)
   (set_track_out)
   (set_track_in)
   (animate_track
      ($start $end $period $units))
   (animate_track_out)
   (animate_track_out_fast)
   (animate_track_in_fast)
   (finish_load
      {$this set_showing FALSE}
      {$this set_track_out})
   (intro_start
      {$this track_reset}
      {$this set_showing TRUE}
      {$this set_track_in})
   (intro_skip
      {$this track_reset}
      {$this set_showing TRUE}
      {$this set_track_out})
   (on_reset
      {beatmatch
         foreach_active_player
         $m
         {$m on_new_track}})
   (on_extend

{unless $ididthisalready
{if $animatedtextures
;populate memory with textures for replacement
{set $framecounttex 0}
{thread_task kTaskSeconds (script
{new Tex {sprint "frame" $framecounttex ".tex"}}
{set $framecounttex {+ $framecounttex 1}}
{unless {>= $framecounttex 60} {$task loop}})}}}

{unless $ididthisalready
{if $animatedtextures
;populate memory with textures for replacement
{set $gemframecounttex 0}
{thread_task kTaskSeconds (script
{new Tex {sprint "gemframe" $gemframecounttex ".tex"}}
{set $gemframecounttex {+ $gemframecounttex 1}}
{unless {>= $gemframecounttex 60} {$task loop}})}}}

{unless $ididthisalready
{if $animatedhighway
;populate memory with textures for replacement
{set $highframecounttex 0}
{thread_task kTaskSeconds (script
{new Tex {sprint "highframe" $highframecounttex ".tex"}}
{set $highframecounttex {+ $highframecounttex 1}}
{unless {>= $highframecounttex 60} {$task loop}})}}}

;populate texture array if an animated texture modifier is on
{unless $ididthisalready
{if $animatedtextures
{set $framearray (frame0.tex frame1.tex frame2.tex frame3.tex frame4.tex frame5.tex frame6.tex
frame7.tex frame8.tex frame9.tex frame10.tex frame11.tex frame12.tex frame13.tex frame14.tex
frame15.tex frame16.tex frame17.tex frame18.tex frame19.tex frame20.tex frame21.tex frame22.tex
frame23.tex frame24.tex frame25.tex frame26.tex frame27.tex frame28.tex frame29.tex frame30.tex
frame31.tex frame32.tex frame33.tex frame34.tex frame35.tex frame36.tex frame37.tex frame38.tex
frame39.tex frame40.tex frame41.tex frame42.tex frame43.tex frame44.tex frame45.tex frame46.tex
frame47.tex frame48.tex frame49.tex frame50.tex frame51.tex frame52.tex frame53.tex frame54.tex
frame55.tex frame56.tex frame57.tex frame58.tex frame59.tex frame60.tex)}}}

;populate texture array if an animated texture modifier is on
{unless $ididthisalready
{if $rb4ui
{set $gemframearray (gemframe0.tex gemframe1.tex gemframe2.tex gemframe3.tex gemframe4.tex gemframe5.tex gemframe6.tex
gemframe7.tex gemframe8.tex gemframe9.tex gemframe10.tex gemframe11.tex gemframe12.tex gemframe13.tex gemframe14.tex
gemframe15.tex gemframe16.tex gemframe17.tex gemframe18.tex gemframe19.tex gemframe20.tex gemframe21.tex gemframe22.tex
gemframe23.tex gemframe24.tex gemframe25.tex gemframe26.tex gemframe27.tex gemframe28.tex gemframe29.tex gemframe30.tex
gemframe31.tex gemframe32.tex gemframe33.tex gemframe34.tex gemframe35.tex gemframe36.tex gemframe37.tex gemframe38.tex
gemframe39.tex gemframe40.tex gemframe41.tex gemframe42.tex gemframe43.tex gemframe44.tex gemframe45.tex gemframe46.tex
gemframe47.tex gemframe48.tex gemframe49.tex gemframe50.tex gemframe51.tex gemframe52.tex gemframe53.tex gemframe54.tex
gemframe55.tex gemframe56.tex gemframe57.tex gemframe58.tex gemframe59.tex gemframe60.tex)}}}

;populate texture array if an animated texture modifier is on
{unless $ididthisalready
{if $animatedhighway
{set $highframearray (highframe0.tex highframe1.tex highframe2.tex highframe3.tex highframe4.tex highframe5.tex highframe6.tex
highframe7.tex highframe8.tex highframe9.tex highframe10.tex highframe11.tex highframe12.tex highframe13.tex highframe14.tex
highframe15.tex highframe16.tex highframe17.tex highframe18.tex highframe19.tex highframe20.tex highframe21.tex highframe22.tex
highframe23.tex highframe24.tex highframe25.tex highframe26.tex highframe27.tex highframe28.tex highframe29.tex highframe30.tex
highframe31.tex highframe32.tex highframe33.tex highframe34.tex highframe35.tex highframe36.tex highframe37.tex highframe38.tex
highframe39.tex highframe40.tex highframe41.tex highframe42.tex highframe43.tex highframe44.tex highframe45.tex highframe46.tex
highframe47.tex highframe48.tex highframe49.tex highframe50.tex highframe51.tex highframe52.tex highframe53.tex highframe54.tex
highframe55.tex highframe56.tex highframe57.tex highframe58.tex highframe59.tex highframe60.tex)}}}

;populate shiny smasher bitmaps
{unless $ididthisalready
{if $shinysmashers
{set $framecountbit 0}
{thread_task kTaskSeconds (delay 0.2) (script
{{sprint "frame" $framecountbit ".tex"} set_bitmap {sprint "ui/track/custom_track_textures/gem_smashers_shiny/gem_smashers_shiny_" $framecountbit ".png"}}
{set $framecountbit {+ $framecountbit 1}}
{unless {>= $framecountbit 60} {$task loop}})}}}

;apply shiny smasher in game task
{if $shinysmashers
{set $framecountdif 0}
{thread_task kTaskSeconds (delay 0.4) (script
;{gem_smasher_drum.mat set diffuse_tex {elem $framearray $framecountdif}}
{gem_smasher_guitar.mat set diffuse_tex {elem $framearray $framecountdif}}
{set $framecountdif {+ $framecountdif 1}}
{$task sleep 0.016}
{if {>= $framecountdif 60} {set $framecountdif 0}}
{$task loop})}}

;populate starlight smasher bitmaps
{unless $ididthisalready
{if $starlightsmashers
{set $framecountbit 0}
{thread_task kTaskSeconds (delay 0.2) (script
{{sprint "frame" $framecountbit ".tex"} set_bitmap {sprint "ui/track/custom_track_textures/gem_smashers_starlight/gem_smashers_starlight_" $framecountbit ".png"}}
{set $framecountbit {+ $framecountbit 1}}
{unless {>= $framecountbit 60} {$task loop}})}}}

;apply starlight smasher in game task
{if $starlightsmashers
{set $framecountdif 0}
{thread_task kTaskSeconds (delay 0.4) (script
;{gem_smasher_drum.mat set diffuse_tex {elem $framearray $framecountdif}}
{gem_smasher_guitar.mat set diffuse_tex {elem $framearray $framecountdif}}
{set $framecountdif {+ $framecountdif 1}}
{$task sleep 0.016}
{if {>= $framecountdif 60} {set $framecountdif 0}}
{$task loop})}}

;populate animated gems bitmaps
{unless $ididthisalready
{if $rb4ui
{set $gemframecountbit 0}
{thread_task kTaskSeconds (delay 0.2) (script
;{{sprint "gemframe" $gemframecountbit ".tex"} set_bitmap {sprint "ui/track/custom_track_textures/gem_cymbal_diffuse/gem_cymbal_diffuse_" $gemframecountbit ".png"}}
{{sprint "gemframe" $gemframecountbit ".tex"} set_bitmap {sprint "ui/track/custom_track_textures/prism_gems/prism_gems_" $gemframecountbit ".png"}}
;{{sprint "gemframe" $gemframecountbit ".tex"} set_bitmap {sprint "ui/track/custom_track_textures/prism_gem_keyboard_style/prism_gem_keyboard_style_" $gemframecountbit ".png"}}
{set $gemframecountbit {+ $gemframecountbit 1}}
{unless {>= $gemframecountbit 60} {$task loop}})}}}

;apply animated gems in game task
{if $rb4ui
{set $gemframecountdif 0}
{thread_task kTaskSeconds (delay 0.4) (script
{gem_cymbal_diffuse.tex iterate_refs $ref {$ref set diffuse_tex {elem $gemframearray $gemframecountdif}}}
{gem_cymbal_ems.tex iterate_refs $ref {$ref set diffuse_tex {elem $gemframearray $gemframecountdif}}}
{prism_gems.tex iterate_refs $ref {$ref set diffuse_tex {elem $gemframearray $gemframecountdif}}}
{prism_gem_emissive.tex iterate_refs $ref {$ref set diffuse_tex {elem $gemframearray $gemframecountdif}}}
{prism_gem_keyboard_style.tex iterate_refs $ref {$ref set diffuse_tex {elem $gemframearray $gemframecountdif}}}
{set $gemframecountdif {+ $gemframecountdif 1}}
{$task sleep 0.016}
{if {>= $gemframecountdif 60} {set $gemframecountdif 0}}
{$task loop})}}

;populate animated highway bitmaps
{unless $ididthisalready
{if $animatedhighway
{set $highframecountbit 0}
{thread_task kTaskSeconds (delay 0.2) (script
{{sprint "highframe" $highframecountbit ".tex"} set_bitmap {sprint "ui/track/animated_surfaces/rb4effect9_color1/rb4effect9_color1_" $highframecountbit ".png"}}
{set $highframecountbit {+ $highframecountbit 1}}
{unless {>= $highframecountbit 60} {$task loop}})}}}

;apply animated highway in game task
{if $animatedhighway
{set $highframecountdif 0}
{thread_task kTaskSeconds (delay 0.4) (script
{watermark_guitar.tex iterate_refs $ref {$ref set diffuse_tex {elem $highframearray $highframecountdif}}}
{watermark_bass.tex iterate_refs $ref {$ref set diffuse_tex {elem $highframearray $highframecountdif}}}
{watermark_drum.tex iterate_refs $ref {$ref set diffuse_tex {elem $highframearray $highframecountdif}}}
{watermark_keys.tex iterate_refs $ref {$ref set diffuse_tex {elem $highframearray $highframecountdif}}}
{watermark_guitar.tex iterate_refs $ref {$ref set emissive_map {elem $highframearray $highframecountdif}}}
{watermark_bass.tex iterate_refs $ref {$ref set emissive_map {elem $highframearray $highframecountdif}}}
{watermark_drum.tex iterate_refs $ref {$ref set emissive_map {elem $highframearray $highframecountdif}}}
{watermark_keys.tex iterate_refs $ref {$ref set emissive_map {elem $highframearray $highframecountdif}}}
{set $highframecountdif {+ $highframecountdif 1}}
{$task sleep 0.016}
{if {>= $highframecountdif 60} {set $highframecountdif 0}}
{$task loop})}}

{if $rb4ui
      {gem_cymbal_diffuse.tex set_bitmap {sprint "ui/track/custom_track_textures/gem_cymbal_diffuse/gem_cymbal_diffuse_0.png"}}
      {gem_cymbal_ems.tex set_bitmap {sprint "ui/track/custom_track_textures/gem_cymbal_diffuse/gem_cymbal_diffuse_0.png"}}
      {prism_gems.tex set_bitmap {sprint "ui/track/custom_track_textures/prism_gems/prism_gems_0.png"}}
      {prism_gem_emissive.tex set_bitmap {sprint "ui/track/custom_track_textures/prism_gems/prism_gems_0.png"}}
      {prism_gem_keyboard_style.tex set_bitmap {sprint "ui/track/custom_track_textures/prism_gem_keyboard_style/prism_gem_keyboard_style_0.png"}}
      {score_star_frame.tex set_bitmap ui/track/custom_track_textures/score_star_frame.png}
      {score_star_gold.tex set_bitmap ui/track/custom_track_textures/score_star_gold.png}
      {rb3_icons.tex set_bitmap ui/track/custom_track_textures/rb3_icons.png}
      {scoreboard_frame.tex set_bitmap ui/track/custom_track_textures/scoreboard_frame.png}
      {scoreboard_lens.tex set_bitmap ui/track/custom_track_textures/_no_highway.png}
      {crowd_meter_frame.tex set_bitmap ui/track/custom_track_textures/crowd_meter_frame.png}
      {crowd_meter_lens.tex set_bitmap ui/track/custom_track_textures/_no_highway.png}
      {gem_smashers_guitar_nomip.tex set_bitmap ui/track/custom_track_textures/gem_smashers_guitar_nomip.png}
      {gem_smashers_guitar.tex set_bitmap ui/track/custom_track_textures/gem_smashers_guitar_nomip.png}
      {square_smasher_bright_green.tex set_bitmap ui/track/custom_track_textures/square_smasher_bright_green.png}
      {square_smasher_bright_red.tex set_bitmap ui/track/custom_track_textures/square_smasher_bright_red.png}
      {square_smasher_bright_yellow.tex set_bitmap ui/track/custom_track_textures/square_smasher_bright_yellow.png}
      {square_smasher_bright_blue.tex set_bitmap ui/track/custom_track_textures/square_smasher_bright_blue.png}
      {square_smasher_bright_orange.tex set_bitmap ui/track/custom_track_textures/square_smasher_bright_orange.png}}
{unless $defaultemissive
      {spotlight_bass_track_emissive.tex set_bitmap {sprint "ui/track/emissives/" $emissive ".png"}}
      {spotlight_drums_track_emissive.tex set_bitmap {sprint "ui/track/emissives/" $emissive ".png"}}
      {spotlight_guitar_track_emmissive.tex set_bitmap {sprint "ui/track/emissives/" $emissive ".png"}}
      {spotlight_keys_track_emissive.tex set_bitmap {sprint "ui/track/emissives/" $emissive ".png"}}
      {spotlight_prokeys_track_emissive.tex set_bitmap {sprint "ui/track/emissives/" $emissive ".png"}}}
{unless $defaultspotlight
      {spotlight_guitar_track.tex set_bitmap {sprint "ui/track/spotlights/" $spotlight ".png"}}
      {spotlight_bass_track.tex set_bitmap {sprint "ui/track/spotlights/" $spotlight ".png"}}
      {spotlight_drums_track.tex set_bitmap {sprint "ui/track/spotlights/" $spotlight ".png"}}
      {spotlight_prokeys_track.tex set_bitmap {sprint "ui/track/spotlights/" $spotlight ".png"}}
      {spotlight_keys_track.tex set_bitmap {sprint "ui/track/spotlights/" $spotlight ".png"}}}
{unless $defaulthighway
      {watermark_guitar.tex set_bitmap {sprint "ui/track/surfaces/" $highway ".png"}}
      {watermark_bass.tex set_bitmap {sprint "ui/track/surfaces/" $highway ".png"}}
      {watermark_drum.tex set_bitmap {sprint "ui/track/surfaces/" $highway ".png"}}
      {watermark_keys.tex set_bitmap {sprint "ui/track/surfaces/" $highway ".png"}}}
{set $ididthisalready TRUE}
      
{$this play_intro}
      {if
         {&&
            {exists gamemode}
            {gamemode get play_track_intro_sfx}}
         {$this play_seq track_beg.cue}
         #ifdef HX_XBOX
         {unless
            {'||'
               {gamemode in_mode audition}
               {&&
                  {gamemode in_mode practice}
                  {>
                     {gamecfg get practice_speed}
                     0}}}
            {beatmatch set_music_speed $speedmod}}
         #else
         {unless
            {&&
               {gamemode in_mode practice}
               {>
                  {gamecfg get practice_speed}
                  0}}
            {beatmatch set_music_speed $speedmod}}
         #endif
         {if
            {&&
               {gamemode in_mode practice}
               {>
                  {gamecfg get practice_speed}
                  0}}
            {beatmatch set_music_speed $modifier}}}
))
{new
   TrackPanel
   coop_track_panel
   (file
      "track/trackpanel.milo")
   TRACK_PANEL_HANDLERS}
{func
   get_track_panel
   {gamemode get track_panel}}
{set
   $playback_file
   ""}