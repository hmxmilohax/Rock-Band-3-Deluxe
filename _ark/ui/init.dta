;sets default all instruments highway. must set variable to TRUE, name your selected texture
;list can be found in _ark\ui\track\highways\highways.dta
{set $highway none}

;sets default guitar highway. same as above.
{set $highwaygtr none}

;sets default bass highway. same as above.
{set $highwaybass none}

;sets default drum highway. same as above.
{set $highwaydrum none}

;sets default keys highway. same as above.
{set $highwaykeys none}

;sets default all instruments spotlight (any instrument max multiplier).
;list can be found in _ark\ui\track\spotlights\spotlights.dta
{set $spotlight none}

;sets default guitar spotlight. same as above.
{set $spotlightgtr none}

;sets default bass spotlight. same as above.
{set $spotlightbass none}

;sets default drums spotlight. same as above.
{set $spotlightdrum none}

;sets default keys spotlight. same as above.
{set $spotlightkeys none}

;sets default all instruments emissive (in overdrive texture).
;list can be found in _ark\ui\track\emissives\emissives.dta
{set $emissive none}

;sets default guitar emissive. same as above.
{set $emissivegtr none}

;sets default bass emissive. same as above.
{set $emissivebass none}

;sets default drums emissive. same as above.
{set $emissivedrum none}

;sets default keys emissive. same as above.
{set $emissivekeys none}

;sets default keyboard track colors.
;list can be found in _ark\ui\track\keyboards\keyboards.dta
{set $keyboard none}

;sets default smasher track textures.
;list can be found in _ark\ui\track\smashers\smashers.dta
{set $smasher none}

;sets default gem track textures.
;list can be found in _ark\ui\track\gems\gems.dta
{set $gem none}

;enable custom track angles
{set $forcemultiangle FALSE}

;sets default track angle
{set $multiangle 1}

;sets full combo sound effect.
;list can be found in _ark\ui\endgame\fullcombo.dta
{set $fcsfx goul-nug_fc}

;sets default track speed. 1.15 is 115%, 1.30 is 130% and so on.
{set $trackspeed 1.0}

;sets default song speed 1.15 is 115%, 1.30 is 130% and so on.
{set $speedmod 1.0}
{set $speedmod_cap 1.5}



;set default venue fps.
{set $emulatefps 30}

;animated texture name. must have ran "enable_animation.bat" first. current animated highways are
;rb4_new rb4effect5_color4 rb4effect6_color7 rb4effect4_color1 rb4effect9_color1
{set $animatedhighwayname none}

;animated texture name. must have ran "enable_animation.bat" first. current animated gems are
;rb4
{set $animatedgemname none}

;controls animated texture toggles. must have ran "enable_animation.bat" first. current animated smashers are
;shiny starlight
{set $animatedsmashername none}

;chooses which main menu to load, if you dont like the new one, vanilla is "3"
;valid sv values are 2, 3, 4, 5, 7, 8
{set $svnumber 8}

;set default volumes for mics
;0-11, default is "8"
{set $mic_vol_1 8}
{set $mic_vol_2 8}
{set $mic_vol_3 8}

;force a venue name. found in macros.dta.
;the following is all possible venue names internally
;none video_01 video_02 video_03 video_04 video_05 video_06 video_07
;small_club_01 small_club_02 small_club_03 small_club_04 small_club_05
;small_club_06 small_club_10 small_club_11 small_club_13 small_club_14
;small_club_15 big_club_01 big_club_02 big_club_04 big_club_05
;big_club_06 big_club_07 big_club_08 big_club_09 big_club_10
;big_club_11 big_club_12 big_club_13 big_club_14 big_club_15
;big_club_17 arena_01 arena_02 arena_03 arena_04 arena_06
;arena_07 arena_10 arena_11 arena_12 festival_01 festival_02
;the following are groups of venues. these are organized by campaign progression
;JET_VENUES contain BUS_VENUES which contain VAN_VENUES which contain SUBWAY_VENUES
;ALL_VENUES VENUES JET_VENUES BUS_VENUES VAN_VENUES SUBWAY_VENUES VENUES_VIDEO
{set $venue VENUES}

;set default colors for notes
;5 is overdrive (white)
{set $slot1_color 0} ;green
{set $slot2_color 1} ;red
{set $slot3_color 2} ;yellow
{set $slot4_color 3} ;blue
{set $slot5_color 4} ;orange

;set default colors for frets
{set $fret1_color 0} ;green
{set $fret2_color 1} ;red
{set $fret3_color 2} ;yellow
{set $fret4_color 3} ;blue
{set $fret5_color 4} ;orange

;set default colors for sustains
;5 is overdrive (white)
{set $sus1_color 0} ;green
{set $sus2_color 1} ;red
{set $sus3_color 2} ;yellow
{set $sus4_color 3} ;blue
{set $sus5_color 4} ;orange

;set default colors for tom notes
;4 is overdrive (white)
{set $drum1_color 0} ;red
{set $drum2_color 1} ;yellow
{set $drum3_color 2} ;blue
{set $drum4_color 3} ;green

;set default colors for kick note
;1 is overdrive (white)
{set $kick_color 0} ;orange

;set default colors for cymbal notes
;4 is overdrive (white)
{set $cym1_color 0} ;red
{set $cym2_color 1} ;yellow
{set $cym3_color 2} ;blue
{set $cym4_color 3} ;green

;set default colors for drum smashers (frets)
{set $smasher1_color 0} ;red
{set $smasher2_color 1} ;yellow
{set $smasher3_color 2} ;blue
{set $smasher4_color 3} ;green

#define INIT_DTA_READER
(
   {foreach $entry {read_file #ifdef HX_XBOX "GAME:/dx.dta" #endif #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/dx.dta" #endif}
      {if {== {elem $entry 0} {basename mic_vols}}
         {set $mic_vol_1
            {elem {find $entry mic_vols} 1}
         }
         {set $mic_vol_2
            {elem {find $entry mic_vols} 2}
         }
         {set $mic_vol_3
            {elem {find $entry mic_vols} 3}
         }
      }
      {if {== {elem $entry 0} {basename mtv_position}}
         {set $mtvpos_0
            {elem {find $entry mtv_position} 1}
         }
         {set $mtvpos_1
            {elem {find $entry mtv_position} 2}
         }
         {set $mtvpos_2
            {elem {find $entry mtv_position} 3}
         }
      }
      {if {== {elem $entry 0} {basename gem_colors}}
         {set $slot1_color
            {elem {find $entry gem_colors} 1}
         }
         {set $slot2_color
            {elem {find $entry gem_colors} 2}
         }
         {set $slot3_color
            {elem {find $entry gem_colors} 3}
         }
         {set $slot4_color
            {elem {find $entry gem_colors} 4}
         }
         {set $slot5_color
            {elem {find $entry gem_colors} 5}
         }
      }
      {if {== {elem $entry 0} {basename sustain_colors}}
         {set $sus1_color
            {elem {find $entry sustain_colors} 1}
         }
         {set $sus2_color
            {elem {find $entry sustain_colors} 2}
         }
         {set $sus3_color
            {elem {find $entry sustain_colors} 3}
         }
         {set $sus4_color
            {elem {find $entry sustain_colors} 4}
         }
         {set $sus5_color
            {elem {find $entry sustain_colors} 5}
         }
      }
      {if {== {elem $entry 0} {basename smasher_colors}}
         {set $fret1_color
            {elem {find $entry smasher_colors} 1}
         }
         {set $fret2_color
            {elem {find $entry smasher_colors} 2}
         }
         {set $fret3_color
            {elem {find $entry smasher_colors} 3}
         }
         {set $fret4_color
            {elem {find $entry smasher_colors} 4}
         }
         {set $fret5_color
            {elem {find $entry smasher_colors} 5}
         }
      }
      {if {== {elem $entry 0} {basename drum_smasher_colors}}
         {set $smasher1_color
            {elem {find $entry drum_smasher_colors} 1}
         }
         {set $smasher2_color
            {elem {find $entry drum_smasher_colors} 2}
         }
         {set $smasher3_color
            {elem {find $entry drum_smasher_colors} 3}
         }
         {set $smasher4_color
            {elem {find $entry drum_smasher_colors} 4}
         }
      }
      {if {== {elem $entry 0} {basename drum_tom_colors}}
         {set $drum1_color
            {elem {find $entry drum_tom_colors} 1}
         }
         {set $drum2_color
            {elem {find $entry drum_tom_colors} 2}
         }
         {set $drum3_color
            {elem {find $entry drum_tom_colors} 3}
         }
         {set $drum4_color
            {elem {find $entry drum_tom_colors} 4}
         }
      }
      {if {== {elem $entry 0} {basename drum_cymbal_color}}
         {set $cym1_color
            {elem {find $entry drum_cymbal_color} 1}
         }
         {set $cym2_color
            {elem {find $entry drum_cymbal_color} 2}
         }
         {set $cym3_color
            {elem {find $entry drum_cymbal_color} 3}
         }
         {set $cym4_color
            {elem {find $entry drum_cymbal_color} 4}
         }
      }
      {if {== {elem $entry 0} {basename kick_color}}
         {set $kick_color
            {elem {find $entry kick_color} 1}
         }
      }
      {if {== {elem $entry 0} {basename main_menu_screen}}
         {set $svnumber
            {elem {find $entry main_menu_screen} 1}
         }
      }
      {if {== {elem $entry 0} {basename emulate_fps}}
         {set $emulatefps
            {elem {find $entry emulate_fps} 1}
         }
      }
      {if {== {elem $entry 0} {basename track_speed}}
         {set $trackspeed
            {elem {find $entry track_speed} 1}
         }
      }
      {if {== {elem $entry 0} {basename song_speed}}
         {set $speedmod
            {elem {find $entry song_speed} 1}
         }
      }
      {if {== {elem $entry 0} {basename animated_highway_texture}}
         {set $animatedhighwayname
            {elem {find $entry animated_highway_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename animated_gem_texture}}
         {set $animatedgemname
            {elem {find $entry animated_gem_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename animated_smasher_texture}}
         {set $animatedsmashername
            {elem {find $entry animated_smasher_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename gem_texture}}
         {set $gem
            {elem {find $entry gem_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename smasher_texture}}
         {set $smasher
            {elem {find $entry smasher_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename keyboard_texture}}
         {set $keyboard
            {elem {find $entry keyboard_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename emissive_texture}}
         {set $emissive
            {elem {find $entry emissive_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename emissive_gtr_texture}}
         {set $emissivegtr
            {elem {find $entry emissive_gtr_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename emissive_bass_texture}}
         {set $emissivebass
            {elem {find $entry emissive_bass_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename emissive_drum_texture}}
         {set $emissivedrum
            {elem {find $entry emissive_drum_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename emissive_keys_texture}}
         {set $emissivekeys
            {elem {find $entry emissive_keys_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_texture}}
         {set $spotlight
            {elem {find $entry spotlight_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_gtr_texture}}
         {set $spotlightgtr
            {elem {find $entry spotlight_gtr_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_bass_texture}}
         {set $spotlightbass
            {elem {find $entry spotlight_bass_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_drum_texture}}
         {set $spotlightdrum
            {elem {find $entry spotlight_drum_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_keys_texture}}
         {set $spotlightkeys
            {elem {find $entry spotlight_keys_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename highway_texture}}
         {set $highway
            {elem {find $entry highway_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename highway_gtr_texture}}
         {set $highwaygtr
            {elem {find $entry highway_gtr_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename highway_bass_texture}}
         {set $highwaybass
            {elem {find $entry highway_bass_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename highway_drum_texture}}
         {set $highwaydrum
            {elem {find $entry highway_drum_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename highway_keys_texture}}
         {set $highwaykeys
            {elem {find $entry highway_keys_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename multi_angle}}
         {set $multiangle
            {elem {find $entry multi_angle} 1}
         }
      }
      {if {== {elem $entry 0} {basename fullcombo_sfx}}
         {set $fcsfx
            {elem {find $entry fullcombo_sfx} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_auto_vocals}}
         {if {== {elem {find $entry mod_auto_vocals} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_auto_vocals}
         }
      }
      {if {== {elem $entry 0} {basename mod_staticfills}}
         {if {== {elem {find $entry mod_staticfills} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_staticfills}
         }
      }
      {if {== {elem $entry 0} {basename mod_chord_numbers}}
         {if {== {elem {find $entry mod_chord_numbers} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_chord_numbers}
         }
      }
      {if {== {elem $entry 0} {basename mod_nohud}}
         {if {== {elem {find $entry mod_nohud} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nohud}
         }
      }
      {if {== {elem $entry 0} {basename mod_miss_sounds}}
         {if {== {elem {find $entry mod_miss_sounds} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_miss_sounds}
         }
      }
      {if {== {elem $entry 0} {basename mod_songtitle}}
         {if {== {elem {find $entry mod_songtitle} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_songtitle}
         }
      }
      {if {== {elem $entry 0} {basename mod_whammyfx}}
         {if {== {elem {find $entry mod_whammyfx} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_whammyfx}
         }
      }
      {if {== {elem $entry 0} {basename mod_nocrowd}}
         {if {== {elem {find $entry mod_nocrowd} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nocrowd}
         }
      }
      {if {== {elem $entry 0} {basename mod_nosustain}}
         {if {== {elem {find $entry mod_nosustain} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nosustain}
         }
      }
      {if {== {elem $entry 0} {basename mod_rb2sustain}}
         {if {== {elem {find $entry mod_rb2sustain} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_rb2sustain}
         }
      }
      {if {== {elem $entry 0} {basename mod_rb4sustain}}
         {if {== {elem {find $entry mod_rb4sustain} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_rb4sustain}
         }
      }
      {if {== {elem $entry 0} {basename mod_songselectnoise}}
         {if {== {elem {find $entry mod_songselectnoise} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_songselectnoise}
         }
      }
      {if {== {elem $entry 0} {basename mod_nobre}}
         {if {== {elem {find $entry mod_nobre} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nobre}
         }
      }
      {if {== {elem $entry 0} {basename mod_practiceoverdrive}}
         {if {== {elem {find $entry mod_practiceoverdrive} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_practiceoverdrive}
         }
      }
      {if {== {elem $entry 0} {basename mod_nolanes}}
         {if {== {elem {find $entry mod_nolanes} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nolanes}
         }
      }
      {if {== {elem $entry 0} {basename mod_rb4lanes}}
         {if {== {elem {find $entry mod_rb4lanes} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_rb4lanes}
         }
      }
      {if {== {elem $entry 0} {basename mod_chmode}}
         {if {== {elem {find $entry mod_chmode} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_chmode}
         }
      }
      {if {== {elem $entry 0} {basename mod_nomv}}
         {if {== {elem {find $entry mod_nomv} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nomv}
         }
      }
      {if {== {elem $entry 0} {basename mod_blackmenu}}
         {if {== {elem {find $entry mod_blackmenu} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_blackmenu}
         }
      }
      {if {== {elem $entry 0} {basename mod_noflames}}
         {if {== {elem {find $entry mod_noflames} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_noflames}
         }
      }
      {if {== {elem $entry 0} {basename mod_noflares}}
         {if {== {elem {find $entry mod_noflares} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_noflares}
         }
      }
      {if {== {elem $entry 0} {basename mod_nopart}}
         {if {== {elem {find $entry mod_nopart} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_nopart}
         }
      }
      {if {== {elem $entry 0} {basename mod_rb4trk}}
         {if {== {elem {find $entry mod_rb4trk} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_rb4trk}
         }
      }
      {if {== {elem $entry 0} {basename mod_rb4os}}
         {if {== {elem {find $entry mod_rb4os} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_rb4os}
         }
      }
      {if {== {elem $entry 0} {basename mod_rb2trk}}
         {if {== {elem {find $entry mod_rb2trk} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_rb2trk}
         }
      }
      {if {== {elem $entry 0} {basename mod_xboxos}}
         {if {== {elem {find $entry mod_xboxos} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_xboxos}
         }
      }
      {if {== {elem $entry 0} {basename mod_ps3os}}
         {if {== {elem {find $entry mod_ps3os} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_ps3os}
         }
      }
      {if {== {elem $entry 0} {basename mod_wiios}}
         {if {== {elem {find $entry mod_wiios} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_wiios}
         }
      }
      {if {== {elem $entry 0} {basename mod_rb4ui}}
         {if {== {elem {find $entry mod_rb4ui} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_rb4ui}
         }
      }
      {if {== {elem $entry 0} {basename mod_auto_kick}}
         {if {== {elem {find $entry mod_auto_kick} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_auto_kick}
         }
      }
      {if {== {elem $entry 0} {basename mod_fcclip}}
         {if {== {elem {find $entry mod_fcclip} 1} 1}
            {modifier_mgr toggle_modifier_enabled mod_fcclip}
         }
      }
      {if {== {elem $entry 0} {basename mod_doublespeed}}
         {if {== {elem {find $entry mod_doublespeed} 1} 1}
            {unless {modifier_mgr is_modifier_active mod_doublespeed}
               {modifier_mgr toggle_modifier_enabled mod_doublespeed}
            }
         }
      }
   }
)
;{unless {file_exists dx.dta} INIT_DTA_WRITER}
{if {file_exists #ifdef HX_XBOX "GAME:/dx.dta" #endif #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30463/USRDIR/dx.dta" #endif} INIT_DTA_READER}


;developer settings below do not modify
#ifdef UI_INIT_DTA
#else
#define UI_INIT_DTA
(1)
#include global.dta
#include cheats_funcs.dta
#include choose_color.dta
#include closet.dta
#include game.dta
#include meta.dta
#include vignettes.dta
#include meta_loading.dta
#include splash/splash.dta
#include main/main.dta
#include accomplishments/accomplishments.dta
#include main/main_hub.dta
#include main/main_dialogs.dta
#include loading/loading.dta
#include overshell/overshell.dta
#include endgame/endgame.dta
#include endgame/complete.dta
#include endgame/lose.dta
#include song_select/song_select.dta
#include seldiff/seldiff.dta
#include hints/hints.dta
#include tour/tour.dta
#include band/band.dta
#include net/join_invite.dta
#include calibration/calibration.dta
#include practice/training.dta
#include global/saveload.dta
#include net_delegator.dta
#include store/store.dta
#include store/store_info.dta
#include store/store_root.dta
#include store/token_redemption.dta
#include customize/customize.dta
#include art_maker/patch_select.dta
#include art_maker/patchcreator.dta
#include character_creator/character_creator.dta
#include trainers/training.dta
#include audition/audition.dta
#ifndef _SHIP
#include dev_only/selvenue.dta
#include framerate/frame_rate.dta
#endif
{platform_mgr set_notify_ui_location kOSNotifyBottomCenter}
{set $saveload_skip_upload FALSE}

#endif
;developer settings below do not modify
{set $screensaver TRUE}

{set $gotcha TRUE}

{set $leaderspeed $speedmod}

{unless {== $venue VENUES} {set $force TRUE}}

{unless {== $spotlight none} {set $spotlightcustomtexture TRUE}}

{unless {== $spotlightgtr none} {set $spotlightgtrcustomtexture TRUE}}

{unless {== $spotlightbass none} {set $spotlightbasscustomtexture TRUE}}

{unless {== $spotlightdrum none} {set $spotlightdrumcustomtexture TRUE}}

{unless {== $spotlightkeys none} {set $spotlightkeyscustomtexture TRUE}}

{unless {== $emissive none} {set $emissivecustomtexture TRUE}}

{unless {== $emissivegtr none} {set $emissivegtrcustomtexture TRUE}}

{unless {== $emissivebass none} {set $emissivebasscustomtexture TRUE}}

{unless {== $emissivedrum none} {set $emissivedrumcustomtexture TRUE}}

{unless {== $emissivekeys none} {set $emissivekeyscustomtexture TRUE}}

{unless {== $keyboard none} {set $keyboardcustomtexture TRUE}}

{unless {== $highway none} {set $highwaycustomtexture TRUE}}

{unless {== $highwaygtr none} {set $highwaygtrcustomtexture TRUE}}

{unless {== $highwaybass none} {set $highwaybasscustomtexture TRUE}}

{unless {== $highwaydrum none} {set $highwaydrumcustomtexture TRUE}}

{unless {== $highwaykeys none} {set $highwaykeyscustomtexture TRUE}}

{unless {== $smasher none} {set $smashercustomtexture TRUE}}

{unless {== $gem none} {set $gemcustomtexture TRUE}}

{unless {== $multiangle 1} {set $forcemultiangle TRUE}}

{unless {== $animatedhighwayname none} {do {set $animatedhighway TRUE} {set $animatedhighwaycustomtexture TRUE}}}

{unless {== $animatedgemname none} {do {set $animatedgems TRUE} {set $animatedgemscustomtexture TRUE}}}

{unless {== $animatedsmashername none} {do {set $animatedsmashers TRUE} {set $animatedsmasherscustomtexture TRUE}}}

{if {modifier_mgr is_modifier_active mod_rb4ui} {set $rb4uicustomtexture TRUE}}

{if {modifier_mgr is_modifier_active mod_rb2ui} {set $rb2uicustomtexture TRUE}}

{if {modifier_mgr is_modifier_active mod_rb4trk} {set $rb4trkcustomtexture TRUE}}

{if {modifier_mgr is_modifier_active mod_rb2trk} {set $rb2trkcustomtexture TRUE}}

{profile_mgr set_mic_vol 0 $mic_vol_1} {profile_mgr update_mic_levels 0}

{profile_mgr set_mic_vol 1 $mic_vol_2} {profile_mgr update_mic_levels 1}

{profile_mgr set_mic_vol 2 $mic_vol_3} {profile_mgr update_mic_levels 2}
