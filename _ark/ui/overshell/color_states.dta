(kState_RB3EColorSelector
 (view options)
 (enter
 {options.lst set_selected $color5menuval}
  {options.lst
   set_data
   (os_gemcol
    os_fretcol
    os_suscol
    os_emissivecolor)})
 (SELECT_MSG
 {set $color5menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_gemcol
    {$this show_state kState_RB3EGemColorSelector})
   (os_fretcol
    {$this show_state kState_RB3EFretColorSelector})
   (os_suscol
    {$this show_state kState_RB3ESusColorSelector})
   (os_emissivecolor
    {$this show_state kState_RB3Ergbcolormenu})})
 (on_cancel
  {online_options.lst set_selected 4}
  {$this show_state kState_RB3EAppearanceMenu}))

;guitar

(kState_RB3EGemColorSelector
 (view options_audio)
 (enter
  {set $gemsliders TRUE}
  {instruments.sld set_num_steps 6}
  {bg_music.sld set_num_steps 6}
  {crowd.sld set_num_steps 6}
  {sfx.sld set_num_steps 6}
  {voice_chat.sld set_num_steps 6}
  {instruments.sld set_current $slot1_color}
  {bg_music.sld set_current $slot2_color}
  {crowd.sld set_current $slot3_color}
  {sfx.sld set_current $slot4_color}
  {voice_chat.sld set_current $slot5_color}
  {options_audio.lst set_selected $color6menuval}
  {options_audio.lst
   set_data
   (os_gem1
    os_gem2
    os_gem3
    os_gem4
    os_gem5)})
 (SELECT_MSG
 {set $color6menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_gem1
    {set $sld1 TRUE}
    {set $slds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_gem2
    {set $sld2 TRUE}
    {set $slds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_gem3
    {set $sld3 TRUE}
    {set $slds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_gem4
    {set $sld4 TRUE}
    {set $slds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})
   (os_gem5
    {set $sld5 TRUE}
    {set $slds TRUE}
    {voice_chat.sld store}
    {voice_chat.sld set_showing TRUE}
    {$this set_focus voice_chat.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld"
               "voice_chat.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $slds
               {do {$this show_state kState_RB3EGemMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus options_audio.lst}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
  {set $gemsliders FALSE})
 (on_cancel
  {$this show_state kState_RB3EColorSelector}))

(kState_RB3EGemMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $sld1 {do
               {if_else {== {int $slot1_color} 0} os_gemmsg1
               {if_else {== {int $slot1_color} 1} os_gemmsg2
               {if_else {== {int $slot1_color} 2} os_gemmsg3
               {if_else {== {int $slot1_color} 3} os_gemmsg4
               {if_else {== {int $slot1_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}
            {if_else $sld2 {do
               {if_else {== {int $slot2_color} 0} os_gemmsg1
               {if_else {== {int $slot2_color} 1} os_gemmsg2
               {if_else {== {int $slot2_color} 2} os_gemmsg3
               {if_else {== {int $slot2_color} 3} os_gemmsg4
               {if_else {== {int $slot2_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}
            {if_else $sld3 {do
               {if_else {== {int $slot3_color} 0} os_gemmsg1
               {if_else {== {int $slot3_color} 1} os_gemmsg2
               {if_else {== {int $slot3_color} 2} os_gemmsg3
               {if_else {== {int $slot3_color} 3} os_gemmsg4
               {if_else {== {int $slot3_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}
            {if_else $sld4 {do
               {if_else {== {int $slot4_color} 0} os_gemmsg1
               {if_else {== {int $slot4_color} 1} os_gemmsg2
               {if_else {== {int $slot4_color} 2} os_gemmsg3
               {if_else {== {int $slot4_color} 3} os_gemmsg4
               {if_else {== {int $slot4_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}
            {do
               {if_else {== {int $slot5_color} 0} os_gemmsg1
               {if_else {== {int $slot5_color} 1} os_gemmsg2
               {if_else {== {int $slot5_color} 2} os_gemmsg3
               {if_else {== {int $slot5_color} 3} os_gemmsg4
               {if_else {== {int $slot5_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}}}}})})
   (SELECT_MSG
      {set $sld1 FALSE}
      {set $sld2 FALSE}
      {set $sld3 FALSE}
      {set $sld4 FALSE}
      {set $sld5 FALSE}
      {set $slds FALSE}
      {$this show_state kState_RB3EGemColorSelector}))

(kState_RB3EFretColorSelector
 (view options_audio)
 (enter
  {set $fretsliders TRUE}
  {instruments.sld set_num_steps 5}
  {bg_music.sld set_num_steps 5}
  {crowd.sld set_num_steps 5}
  {sfx.sld set_num_steps 5}
  {voice_chat.sld set_num_steps 5}
  {instruments.sld set_current $fret1_color}
  {bg_music.sld set_current $fret2_color}
  {crowd.sld set_current $fret3_color}
  {sfx.sld set_current $fret4_color}
  {voice_chat.sld set_current $fret5_color}
  {options_audio.lst set_selected $color7menuval}
  {options_audio.lst
   set_data
   (os_fret1
    os_fret2
    os_fret3
    os_fret4
    os_fret5)})
 (SELECT_MSG
 {set $color7menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_fret1
    {set $sld1 TRUE}
    {set $slds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_fret2
    {set $sld2 TRUE}
    {set $slds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_fret3
    {set $sld3 TRUE}
    {set $slds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_fret4
    {set $sld4 TRUE}
    {set $slds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})
   (os_fret5
    {set $sld5 TRUE}
    {set $slds TRUE}
    {voice_chat.sld store}
    {voice_chat.sld set_showing TRUE}
    {$this set_focus voice_chat.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld"
               "voice_chat.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $slds
               {do {$this show_state kState_RB3EFretMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus options_audio.lst}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
   {set $fretsliders FALSE})
 (on_cancel
  {$this show_state kState_RB3EColorSelector}))

(kState_RB3EFretMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $sld1 {do
               {if_else {== {int $fret1_color} 0} os_fretmsg1
               {if_else {== {int $fret1_color} 1} os_fretmsg2
               {if_else {== {int $fret1_color} 2} os_fretmsg3
               {if_else {== {int $fret1_color} 3} os_fretmsg4
               os_fretmsg5}}}}}
            {if_else $sld2 {do
               {if_else {== {int $fret2_color} 0} os_fretmsg1
               {if_else {== {int $fret2_color} 1} os_fretmsg2
               {if_else {== {int $fret2_color} 2} os_fretmsg3
               {if_else {== {int $fret2_color} 3} os_fretmsg4
               os_fretmsg5}}}}}
            {if_else $sld3 {do
               {if_else {== {int $fret3_color} 0} os_fretmsg1
               {if_else {== {int $fret3_color} 1} os_fretmsg2
               {if_else {== {int $fret3_color} 2} os_fretmsg3
               {if_else {== {int $fret3_color} 3} os_fretmsg4
               os_fretmsg5}}}}}
            {if_else $sld4 {do
               {if_else {== {int $fret4_color} 0} os_fretmsg1
               {if_else {== {int $fret4_color} 1} os_fretmsg2
               {if_else {== {int $fret4_color} 2} os_fretmsg3
               {if_else {== {int $fret4_color} 3} os_fretmsg4
               os_fretmsg5}}}}}
            {do
               {if_else {== {int $fret5_color} 0} os_fretmsg1
               {if_else {== {int $fret5_color} 1} os_fretmsg2
               {if_else {== {int $fret5_color} 2} os_fretmsg3
               {if_else {== {int $fret5_color} 3} os_fretmsg4
               os_fretmsg5}}}}}}}}})})
   (SELECT_MSG
      {set $sld1 FALSE}
      {set $sld2 FALSE}
      {set $sld3 FALSE}
      {set $sld4 FALSE}
      {set $sld5 FALSE}
      {set $slds FALSE}
      {$this show_state kState_RB3EFretColorSelector}))

(kState_RB3ESusColorSelector
 (view options_audio)
 (enter
  {set $sussliders TRUE}
  {instruments.sld set_num_steps 5}
  {bg_music.sld set_num_steps 5}
  {crowd.sld set_num_steps 5}
  {sfx.sld set_num_steps 5}
  {voice_chat.sld set_num_steps 5}
  {instruments.sld set_current $sus1_color}
  {bg_music.sld set_current $sus2_color}
  {crowd.sld set_current $sus3_color}
  {sfx.sld set_current $sus4_color}
  {voice_chat.sld set_current $sus5_color}
  {options_audio.lst set_selected $color8menuval}
  {options_audio.lst
   set_data
   (os_sus1
    os_sus2
    os_sus3
    os_sus4
    os_sus5)})
 (SELECT_MSG
 {set $color8menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_sus1
    {set $sld1 TRUE}
    {set $slds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_sus2
    {set $sld2 TRUE}
    {set $slds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_sus3
    {set $sld3 TRUE}
    {set $slds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_sus4
    {set $sld4 TRUE}
    {set $slds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})
   (os_sus5
    {set $sld5 TRUE}
    {set $slds TRUE}
    {voice_chat.sld store}
    {voice_chat.sld set_showing TRUE}
    {$this set_focus voice_chat.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld"
               "voice_chat.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $slds
               {do {$this show_state kState_RB3ESusMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus options_audio.lst}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
   {set $sussliders FALSE})
 (on_cancel
  {$this show_state kState_RB3EColorSelector}))

(kState_RB3ESusMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $sld1 {do
               {if_else {== {int $sus1_color} 0} os_susmsg1
               {if_else {== {int $sus1_color} 1} os_susmsg2
               {if_else {== {int $sus1_color} 2} os_susmsg3
               {if_else {== {int $sus1_color} 3} os_susmsg4
               os_susmsg5}}}}}
            {if_else $sld2 {do
               {if_else {== {int $sus2_color} 0} os_susmsg1
               {if_else {== {int $sus2_color} 1} os_susmsg2
               {if_else {== {int $sus2_color} 2} os_susmsg3
               {if_else {== {int $sus2_color} 3} os_susmsg4
               os_susmsg5}}}}}
            {if_else $sld3 {do
               {if_else {== {int $sus3_color} 0} os_susmsg1
               {if_else {== {int $sus3_color} 1} os_susmsg2
               {if_else {== {int $sus3_color} 2} os_susmsg3
               {if_else {== {int $sus3_color} 3} os_susmsg4
               os_susmsg5}}}}}
            {if_else $sld4 {do
               {if_else {== {int $sus4_color} 0} os_susmsg1
               {if_else {== {int $sus4_color} 1} os_susmsg2
               {if_else {== {int $sus4_color} 2} os_susmsg3
               {if_else {== {int $sus4_color} 3} os_susmsg4
               os_susmsg5}}}}}
            {do
               {if_else {== {int $sus5_color} 0} os_susmsg1
               {if_else {== {int $sus5_color} 1} os_susmsg2
               {if_else {== {int $sus5_color} 2} os_susmsg3
               {if_else {== {int $sus5_color} 3} os_susmsg4
               os_susmsg5}}}}}}}}})})
   (SELECT_MSG
      {set $sld1 FALSE}
      {set $sld2 FALSE}
      {set $sld3 FALSE}
      {set $sld4 FALSE}
      {set $sld5 FALSE}
      {set $slds FALSE}
      {$this show_state kState_RB3ESusColorSelector}))

;drums

(kState_RB3EDrumColorSelector
 (view options_extras)
 (enter
  {options_extras.lst set_selected $color1menuval}
  {options_extras.lst
   set_data
   (os_gemcol
    os_cymcol
    os_smashcol)})
 (SELECT_MSG
 {set $color1menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_gemcol
    {$this show_state kState_RB3EDrumGemColorSelector})
   (os_cymcol
    {$this show_state kState_RB3ECymbalColorSelector})
   (os_smashcol
    {$this show_state kState_RB3ESmasherColorSelector})})
 (on_cancel
  {$this show_state kState_RB3EAppearanceMenu}))

(kState_RB3ECymbalColorSelector
 (view options_audio)
 (enter
  {set $cymsliders TRUE}
  {instruments.sld set_num_steps 5}
  {bg_music.sld set_num_steps 5}
  {crowd.sld set_num_steps 5}
  {sfx.sld set_num_steps 5}
  {instruments.sld set_current $cym2_color}
  {bg_music.sld set_current $cym3_color}
  {crowd.sld set_current $cym4_color}
  {sfx.sld set_current $cym1_color}
  {options_audio.lst set_selected $color2menuval}
  {options_audio.lst
   set_data
   (os_cym1
    os_cym2
    os_cym3
    os_cym3lh)})
 (SELECT_MSG
 {set $color2menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_cym1
    {set $drumsld1 TRUE}
    {set $drumslds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_cym2
    {set $drumsld2 TRUE}
    {set $drumslds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_cym3
    {set $drumsld3 TRUE}
    {set $drumslds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_cym3lh
    {set $drumsld4 TRUE}
    {set $drumslds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $drumslds
               {do {$this show_state kState_RB3ECymMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus options_audio.lst}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
  {set $cymsliders FALSE})
 (on_cancel
  {$this show_state kState_RB3EDrumColorSelector}))

(kState_RB3ECymMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $drumsld1 {do
               {if_else {== {int $cym2_color} 0} os_cymmsg2
               {if_else {== {int $cym2_color} 1} os_cymmsg3
               {if_else {== {int $cym2_color} 2} os_cymmsg4
               {if_else {== {int $cym2_color} 3} os_cymmsg1
               os_cymmsg5}}}}}
            {if_else $drumsld2 {do
               {if_else {== {int $cym3_color} 0} os_cymmsg2
               {if_else {== {int $cym3_color} 1} os_cymmsg3
               {if_else {== {int $cym3_color} 2} os_cymmsg4
               {if_else {== {int $cym3_color} 3} os_cymmsg1
               os_cymmsg5}}}}}
            {if_else $drumsld3 {do
               {if_else {== {int $cym4_color} 0} os_cymmsg2
               {if_else {== {int $cym4_color} 1} os_cymmsg3
               {if_else {== {int $cym4_color} 2} os_cymmsg4
               {if_else {== {int $cym4_color} 3} os_cymmsg1
               os_cymmsg5}}}}}
            {do
               {if_else {== {int $cym1_color} 0} os_cymmsg2
               {if_else {== {int $cym1_color} 1} os_cymmsg3
               {if_else {== {int $cym1_color} 2} os_cymmsg4
               {if_else {== {int $cym1_color} 3} os_cymmsg1
               os_cymmsg5}}}}}}}})})
   (SELECT_MSG
      {set $drumsld1 FALSE}
      {set $drumsld2 FALSE}
      {set $drumsld3 FALSE}
      {set $drumsld4 FALSE}
      {set $drumslds FALSE}
      {$this show_state kState_RB3ECymbalColorSelector}))

(kState_RB3EDrumGemColorSelector
 (view options_audio)
 (enter
  {set $drumgemsliders TRUE}
  
  {instruments.sld set_num_steps 5}
  {bg_music.sld set_num_steps 5}
  {crowd.sld set_num_steps 5}
  {sfx.sld set_num_steps 5}
  {voice_chat.sld set_num_steps 2}
  {instruments.sld set_current $drum1_color}
  {bg_music.sld set_current $drum2_color}
  {crowd.sld set_current $drum3_color}
  {sfx.sld set_current $drum4_color}
  {voice_chat.sld set_current $kick_color}
  {options_audio.lst set_selected $color3menuval}
  {options_audio.lst
   set_data
   (os_gem1
    os_gem2
    os_gem3
    os_gem4
    os_kick)})
 (SELECT_MSG
 {set $color3menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_gem1
    {set $drumsld1 TRUE}
    {set $drumslds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_gem2
    {set $drumsld2 TRUE}
    {set $drumslds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_gem3
    {set $drumsld3 TRUE}
    {set $drumslds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_gem4
    {set $drumsld4 TRUE}
    {set $drumslds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})
   (os_kick
    {set $drumsld5 TRUE}
    {set $drumslds TRUE}
    {voice_chat.sld store}
    {voice_chat.sld set_showing TRUE}
    {$this set_focus voice_chat.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld"
               "voice_chat.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $drumslds
               {do {$this show_state kState_RB3EDrumGemMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus options_audio.lst}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
  {set $drumgemsliders FALSE})
 (on_cancel
  {$this show_state kState_RB3EDrumColorSelector}))

(kState_RB3EDrumGemMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $drumsld1 {do
               {if_else {== {int $drum1_color} 0} os_gemmsg2
               {if_else {== {int $drum1_color} 1} os_gemmsg3
               {if_else {== {int $drum1_color} 2} os_gemmsg4
               {if_else {== {int $drum1_color} 3} os_gemmsg1
               os_gemmsg6}}}}}
            {if_else $drumsld2 {do
               {if_else {== {int $drum2_color} 0} os_gemmsg2
               {if_else {== {int $drum2_color} 1} os_gemmsg3
               {if_else {== {int $drum2_color} 2} os_gemmsg4
               {if_else {== {int $drum2_color} 3} os_gemmsg1
               os_gemmsg6}}}}}
            {if_else $drumsld3 {do
               {if_else {== {int $drum3_color} 0} os_gemmsg2
               {if_else {== {int $drum3_color} 1} os_gemmsg3
               {if_else {== {int $drum3_color} 2} os_gemmsg4
               {if_else {== {int $drum3_color} 3} os_gemmsg1
               os_gemmsg6}}}}}
            {if_else $drumsld4 {do
               {if_else {== {int $drum4_color} 0} os_gemmsg2
               {if_else {== {int $drum4_color} 1} os_gemmsg3
               {if_else {== {int $drum4_color} 2} os_gemmsg4
               {if_else {== {int $drum4_color} 3} os_gemmsg1
               os_gemmsg6}}}}}
            {do
               {if_else {== {int $kick_color} 0} os_kickmsg1
               os_kickmsg2}}}}}})})
   (SELECT_MSG
      {set $drumsld1 FALSE}
      {set $drumsld2 FALSE}
      {set $drumsld3 FALSE}
      {set $drumsld4 FALSE}
      {set $drumsld5 FALSE}
      {set $drumslds FALSE}
      {$this show_state kState_RB3EDrumGemColorSelector}))

(kState_RB3ESmasherColorSelector
 (view options_audio)
 (enter
  {set $smashersliders TRUE}
  {instruments.sld set_num_steps 4}
  {bg_music.sld set_num_steps 4}
  {crowd.sld set_num_steps 4}
  {sfx.sld set_num_steps 4}
  {instruments.sld set_current $smasher1_color}
  {bg_music.sld set_current $smasher2_color}
  {crowd.sld set_current $smasher3_color}
  {sfx.sld set_current $smasher4_color}
  {options_audio.lst set_selected $color4menuval}
  {options_audio.lst
   set_data
   (os_smash1
    os_smash2
    os_smash3
    os_smash4)})
 (SELECT_MSG
  {set $color4menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_smash1
    {set $drumsld1 TRUE}
    {set $drumslds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_smash2
    {set $drumsld2 TRUE}
    {set $drumslds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_smash3
    {set $drumsld3 TRUE}
    {set $drumslds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_smash4
    {set $drumsld4 TRUE}
    {set $drumslds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $drumslds
               {do {$this show_state kState_RB3ESmasherMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus options_audio.lst}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
   {set $smashersliders FALSE})
 (on_cancel
  {$this show_state kState_RB3EDrumColorSelector}))

(kState_RB3ESmasherMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $drumsld1 {do
               {if_else {== {int $smasher1_color} 0} os_smashermsg2
               {if_else {== {int $smasher1_color} 1} os_smashermsg3
               {if_else {== {int $smasher1_color} 2} os_smashermsg4
               os_smashermsg1}}}}
            {if_else $drumsld2 {do
               {if_else {== {int $smasher2_color} 0} os_smashermsg2
               {if_else {== {int $smasher2_color} 1} os_smashermsg3
               {if_else {== {int $smasher2_color} 2} os_smashermsg4
               os_smashermsg1}}}}
            {if_else $drumsld3 {do
               {if_else {== {int $smasher3_color} 0} os_smashermsg2
               {if_else {== {int $smasher3_color} 1} os_smashermsg3
               {if_else {== {int $smasher3_color} 2} os_smashermsg4
               os_smashermsg1}}}}
            {do
               {if_else {== {int $smasher4_color} 0} os_smashermsg2
               {if_else {== {int $smasher4_color} 1} os_smashermsg3
               {if_else {== {int $smasher4_color} 2} os_smashermsg4
               os_smashermsg1}}}}}}})})
   (SELECT_MSG
      {set $drumsld1 FALSE}
      {set $drumsld2 FALSE}
      {set $drumsld3 FALSE}
      {set $drumsld4 FALSE}
      {set $drumslds FALSE}
      {$this show_state kState_RB3ESmasherColorSelector}))

(kState_RB3EKeysColorWarning
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message os_kColorWarn)})
   (SELECT_MSG
      {$this show_state kState_RB3EColorSelector}))

;overdrive

(kState_RB3Ergbcolormenu
   (view online_options)
   (enter
   {set $colorslider TRUE}
   {online_options.lst set_selected $colormenuval}
   {online_options.grp add_object choose_character.mesh}
   {choose_character.mesh set_local_pos_index 0 25}
   {choose_character.mesh set_local_pos_index 2 175}
   {choose_character.mesh set_local_scale_index 0 0.2}
   {choose_character.mesh set_local_scale_index 2 0.4}
   {choose_character.mat set diffuse_tex choose_character.tex}
   {if_else $emissivecustomtexture
   {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissive ".png"}} ;hide the texture on first entry because the script is bad whatever
   {choose_character.tex set_bitmap {sprint "ui/track/emissives/rb3_guitar.png"}}}
   {choose_character.tex iterate_refs $ref {$ref set color {pack_color $emissive_r $emissive_g $emissive_b}}}
   {choose_character.tex iterate_refs $ref {$ref set intensify TRUE}}
   {instruments.sld set_num_steps 100} ;number of steps for venue fps slider
   {bg_music.sld set_num_steps 100} ;number of steps for note speed slider
   {crowd.sld set_num_steps 100} ;number of steps for song speed slider
   {instruments.sld set_current {int {* $emissive_r 100}}} ;set FPS slider based on current value
   {bg_music.sld set_current {int {* $emissive_g 100}}} ;set note speed slider based on current value
   {crowd.sld set_current {int {* $emissive_b 100}}} ;set song speed slider based on current value
   {trackspeed_msg set_token_fmt {sprint {localize color_msg} " " $emissive_r  ", " $emissive_g ", " $emissive_b}} ;set note speed msg (or not, thanks rb3)
   {speed_msg.lbl set_token_fmt {sprint {localize color_msg} " " $emissive_r  ", " $emissive_g ", " $emissive_b}} ;set song speed msg (or not, thanks rb3)
   {fps_msg set_token_fmt {sprint {localize color_msg} " " $emissive_r  ", " $emissive_g ", " $emissive_b}} ;set venue fps msg (or not, thanks rb3)
   {online_options.lst set_data 
   (
      os_default
      os_color_r
      os_color_g
      os_color_b
   )})
  (update_view
      {handle
         ($this
            update_slider
            instruments.sld
            "")}
      {handle
         ($this
            update_slider
            bg_music.sld
            "")}
      {handle
         ($this
            update_slider
            crowd.sld
            "")}
      {handle
         ($this
            update_slider
            sfx.sld
            "")}
      {handle
         ($this
            update_slider
            voice_chat.sld
            "")})
   (SELECT_MSG
   {set $colormenuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_color_r
      {set $colorrslider TRUE}
      {instruments.sld store}
      {instruments.sld set_showing TRUE}
      {$this set_focus instruments.sld})
   (os_color_g
    {set $colorgslider TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_color_b
      {set $colorbslider TRUE}
      {crowd.sld store}
      {crowd.sld set_showing TRUE}
      {$this set_focus crowd.sld})
    (os_default
      {set $emissive_r 0.71} {set $emissive_g 0.54} {set $emissive_b 0.0}
      {do {$this show_state kState_colorbSliderMsg} {$this set_focus confirm_action.lst}})
   })
(BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $colorrslider
                  {do {$this show_state kState_colorrSliderMsg} {$this set_focus confirm_action.lst}}
               {if_else $colorgslider
                  {do {$this show_state kState_colorgSliderMsg} {$this set_focus confirm_action.lst}}
               {if_else $colorbslider
                  {do {$this show_state kState_colorbSliderMsg} {$this set_focus confirm_action.lst}}
                  {$this set_focus options_audio.lst}}}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user}
      {choose_character.tex iterate_refs $ref {$ref set color {pack_color $emissive_r $emissive_g $emissive_b}}})
   (SCROLL_MSG
      {$this on_slider_change $component $user}
      {choose_character.tex iterate_refs $ref {$ref set color {pack_color $emissive_r $emissive_g $emissive_b}}})
 (exit
  {set $rb3eslider FALSE})
 (on_cancel
  {options_audio.lst set scroll_time 0.25}
  {$this show_state kState_RB3EColorSelector}
  {choose_character.mesh set_local_pos_index 0 0}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {choose_character.tex iterate_refs $ref {$ref set color {pack_color 1 1 1}}}
  {choose_character.tex iterate_refs $ref {$ref set intensify FALSE}}
  {online_options.grp remove_object choose_character.mesh}
  {$this show_state kState_RB3EColorSelector}))

(kState_colorrSliderMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message {sprint {localize color_msg} " " $emissive_r  ", " $emissive_g ", " $emissive_b})})
   (SELECT_MSG
      {set $colorrslider FALSE}
      {$this show_state kState_RB3Ergbcolormenu}))

(kState_colorgSliderMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message {sprint {localize color_msg} " " $emissive_r  ", " $emissive_g ", " $emissive_b})})
   (SELECT_MSG
      {set $colorrslider FALSE}
      {$this show_state kState_RB3Ergbcolormenu}))

(kState_colorbSliderMsg
   (view confirm_action)
   (enter
      {choose_character.tex iterate_refs $ref {$ref set color {pack_color $emissive_r $emissive_g $emissive_b}}}
      {handle
         ($this set_confirm_message {sprint {localize color_msg} " " $emissive_r  ", " $emissive_g ", " $emissive_b})})
   (SELECT_MSG
      {set $colorrslider FALSE}
      {$this show_state kState_RB3Ergbcolormenu}))
