#define PLAY_ERROR_ON_START_OR_CONFIRM
((on_start
      ($user)
      {synth play button_error.cue})
   (BUTTON_DOWN_MSG
      {if_else
         {== $action kAction_Confirm}
         {synth play button_error.cue}
         kDataUnhandled}))
(kState_NoInstrument
   (view no_instrument)
   (allows_hiding TRUE)
   (ready_to_play TRUE)
   (retracted_position TRUE)
   PLAY_ERROR_ON_START_OR_CONFIRM)
(kState_Join
   (view join)
   (allows_hiding TRUE)
   (ready_to_play TRUE)
   (retracted_position TRUE)
   (on_start
      ($user)
      {overshell attempt_to_add_user $user}
      {play_instr_sfx $user button_select})
   (BUTTON_DOWN_MSG
      {if_else
         {== $action kAction_Confirm}
         {do
            {overshell attempt_to_add_user $user}
            {play_instr_sfx $user button_select}}
         kDataUnhandled}))
(kState_SignIn
   (view join)
   (allows_hiding TRUE)
   (ready_to_play TRUE)
   (retracted_position TRUE)
   (BUTTON_DOWN_MSG
      {if_else
         {== $action kAction_Confirm}
         {unless
            {$this in_song}
            {ui_event_mgr trigger_event sign_in}}
         kDataUnhandled})
   (on_start
      ($user)
      {unless
         {$this in_song}
         {ui_event_mgr trigger_event sign_in}}))
(kState_ConnectMic
   (view connect_mic)
   (allows_hiding TRUE)
   (ready_to_play TRUE)
   (retracted_position TRUE)
   PLAY_ERROR_ON_START_OR_CONFIRM)
(kState_NoJoinInGame
   (view no_join_in_game)
   (allows_hiding TRUE)
   (ready_to_play TRUE)
   (retracted_position TRUE)
   PLAY_ERROR_ON_START_OR_CONFIRM)
(kState_Finding
   (view finding)
   (retracted_position TRUE)
   PLAY_ERROR_ON_START_OR_CONFIRM)
(kState_JoinedDefault
   (view joined_default)
   (allows_input_to_shell TRUE)
   (allows_hiding TRUE)
   (ready_to_play TRUE)
   (retracted_position TRUE)
   (on_start
      ($user)
      {if
         {'||'
            {$user is_participating}
            {!
               {$this in_song}}}
         {$this show_options}}))
(kState_ChooseChar
   (view choose_char)
   (choose_char_flow TRUE)
   (remote_status remote_status_choose_char)
   (enter
      {prefab_mgr load_portraits $this}
      {if
         {{$this get_user}
            is_local}
         {$this update_character_list}}
      {handle
         ($this set_default_option '')}
      {handle
         ($this
            set_default_option_index
            {$this get_default_char_index})})
   (exit
      {prefab_mgr unload_portraits $this})
   (update_view
      {if
         {==
            {$this focus_name}
            chars.lst}
         {$this update_character_list}
         {$this
            refresh_highlighted_char
            {chars.lst selected_pos}}})
   (SCROLL_MSG
      {$this update})
   (SELECT_MSG
      {$this
         select_char
         {chars.lst selected_pos}})
   (on_cancel
      {if_else
         {{$this get_user}
            has_char}
         {$this show_options}
         {$this attempt_remove_user}})
   (BUTTON_DOWN_MSG
      {if_else
         {== $action kAction_Option}
         {do
            ($index
               {chars.lst selected_pos})
            {if
               {$this can_edit_character $index}
               {$this
                  show_char_edit
                  {chars.lst selected_pos}}}}
         kDataUnhandled}))
(kState_ChooseCharDenial
   (view confirm_action)
   (update_view
      {handle
         ($this set_confirm_message error_cannot_choose_char_while_editing)})
   (on_cancel
      {$this show_options})
   (SELECT_MSG
      {$this show_options}))
(kState_ChooseContribute
   (view confirm_action)
   (prevents_override TRUE)
   (update_view
      {handle
         ($this
            set_confirm_actions
            overshell_choose_contribute
            (overshell_confirm_yes overshell_confirm_no))})
   (on_cancel
      {$this attempt_remove_user})
   (SELECT_MSG
      {do
         ($user
            {$this get_user})
         {switch
            {$component selected_sym}
            (overshell_confirm_yes
               {$user set_contributes_song_progress TRUE})
            (overshell_confirm_no
               {$user set_contributes_song_progress FALSE})}}
      {$this leave_options}))
(kState_ChooseProfile
   (view choose_profile)
   (prevents_override TRUE)
   (on_cancel
      {$this attempt_remove_user})
   (update_view
      {$this update_profiles_list})
   (SELECT_MSG
      {if_else
         {== $component profiles.lst}
         {$this
            attempt_swap_user_profile
            {profiles.lst selected_pos}}
         {switch
            {$component selected_sym}
            (overshell_continue_without_profile
               {$this leave_options})
            (overshell_sign_in
               {platform_mgr signin 1})}}))
(kState_ChooseProfileConfirm
   (view confirm_action)
   (prevents_override TRUE)
   (on_cancel
      {$this show_choose_profile})
   (update_view
      {handle
         ($this
            set_confirm_actions
            overshell_confirm_swap_profile
            (overshell_confirm_yes overshell_confirm_no))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {$this confirm_swap_user_profile})
         (overshell_confirm_no
            {$this show_choose_profile})}))
(kState_Options
   (view
      {if_else
         {'||'
            {$this in_game}
            {gamemode in_mode drum_freestyle}}
         options_in_game
         options})
   (update_view
      {handle
         ($this
            update_online_options_allowed
            {!
               {session_mgr is_busy}})}
      {do
         ($in_game_options
            {'||'
               {$this in_game}
               {gamemode in_mode drum_freestyle}})
         ($showing_metronome
            {&&
               {gamemode get show_metronome_options}
               {==
                  {{$this get_user}
                     get_controller_type}
                  kControllerDrum}})
         ($can_skip_song
            {&&
               {$this in_song}
               {{$this get_session_mgr}
                  is_leader_local}
               {exists meta_performer}
               {>
                  {meta_performer num_songs}
                  1}
               {!
                  {meta_performer is_set_complete}}
               {!
                  {meta_performer is_last_song}}
               {gamemode get can_skip_songs}})
         ($can_quit
            {'||'
               {{$this get_session_mgr}
                  is_leader_local}
               {gamemode get non_leader_can_quit}})
         ($show_pause_restart
            {&&
               {gamemode get show_pause_restart}
               {$this in_song}})
         ($restart_allowed
            {{$this get_session_mgr}
               is_leader_local})
         {if_else
            $in_game_options
            {do
               {handle
                  ($this
                     update_in_game_options
                     {gamemode get pause_menu_quit_token}
                     $can_skip_song
                     $show_pause_restart
                     {gamemode get show_change_difficulty}
                     $showing_metronome
                     {gamemode get show_pause_practice_new}
                     $can_quit)}
               {handle
                  ($this update_restart_allowed $restart_allowed)}}
            {handle
               ($this
                  setup_options_list
                  {{$this get_session_mgr}
                     is_online_enabled})}}
         {handle
            ($this
               update_can_access_song_options_in_game
               {$this in_song})}
         {handle
            ($this update_metronome_check $showing_metronome)}
         {if
            $showing_metronome
            {metronome_vol.sld set_num_steps 12}
            {metronome_vol_freestyle.sld set_num_steps 12}
            {handle
               ($this
                  update_slider
                  metronome_vol.sld
                  "")}
            {handle
               ($this
                  update_slider
                  metronome_vol_freestyle.sld
                  "")}}})
   (SELECT_MSG
      {if_else
         {$this
            is_quit_token
            {$component selected_sym}}
         {if_else
            {gamemode get skip_quit_prompt}
            {ui_event_mgr trigger_event quit_early}
            {$this show_state kState_QuitEarlyConfirm}}
         {switch
            {$component selected_sym}
            (overshell_change_character
               {$this show_chars})
            (overshell_end_game
               {$this show_options_end_game})
            (overshell_restart
               {if_else
                  {gamemode get skip_restart_prompt}
                  {if_else
                     {gamemode in_mode trainer}
                     {{gamemode get game_panel}
                        restart_section}
                     {session end_game kRestart}}
                  {$this show_state kState_RestartConfirm}})
            (overshell_change_diff
               {$this begin_override_flow kOverrideFlow_SongSettings})
            (overshell_practice_new_section
               {ui_event_mgr trigger_event go_to_practice_screen})
            (overshell_metronome
               {metronome.chk
                  set
                  checked
                  {!
                     {metronome.chk get checked}}}
               {{gamemode get game_panel}
                  enable_metronome
                  {metronome.chk get checked}})
            (overshell_relearn_chords
               {{gamemode get game_panel}
                  relearn_chords}
               {$this show_chord_book})
            (overshell_metronome_volume
               {if_else
                  {gamemode in_mode drum_freestyle}
                  {do
                     {metronome_vol_freestyle.sld store}
                     {metronome_vol_freestyle.sld set_showing TRUE}
                     {$this set_focus metronome_vol_freestyle.sld}}
                  {do
                     {metronome_vol.sld store}
                     {metronome_vol.sld set_showing TRUE}
                     {$this set_focus metronome_vol.sld}}})
            (overshell_return
               {$this leave_options})
            (overshell_online_options
               {$this show_online_options})
            (overshell_register_online
               {$this attempt_register_online})
            (overshell_game_options
               {$this show_game_options})
            (overshell_leave
               {$this attempt_remove_user})}})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
   (BUTTON_DOWN_MSG
      {cond
         ({==
               {$this focus_name}
               "metronome_vol.sld"}
            {switch
               $action
               ((kAction_Confirm kAction_Cancel)
                  {metronome_vol.sld confirm}
                  {metronome_vol.sld set_showing FALSE}
                  {$this set_focus options.lst})
               kDataUnhandled})
         ({==
               {$this focus_name}
               "metronome_vol_freestyle.sld"}
            {switch
               $action
               ((kAction_Confirm kAction_Cancel)
                  {metronome_vol_freestyle.sld confirm}
                  {metronome_vol_freestyle.sld set_showing FALSE}
                  {$this set_focus options.lst})
               kDataUnhandled})
         kDataUnhandled})
   (on_cancel
      {$this leave_options})
   (on_start
      ($user)
      {$this leave_options}))
(kState_OptionsEndGame
   (view options_end_game)
   (SELECT_MSG
      {cond
         ({$this
               is_quit_token
               {$component selected_sym}}
            {$this show_state kState_QuitEarlyConfirm})
         ({==
               {$component selected_sym}
               overshell_skip_song}
            {$this show_state kState_SkipSongConfirm})})
   (on_cancel
      {$this show_options}))
(kState_QuitEarlyConfirm
   (view confirm_action)
   (update_view
      {if_else
         {{$this get_session_mgr}
            is_local}
         {handle
            ($this
               set_confirm_actions
               confirm_quit
               (overshell_confirm_yes overshell_confirm_no))}
         {handle
            ($this
               set_confirm_actions
               confirm_quit_online
               (overshell_confirm_yes overshell_confirm_no))}})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {ui_event_mgr trigger_event quit_early}
            {$this leave_options})
         (overshell_confirm_no
            {$this show_options})})
   (on_cancel
      {$this show_options}))
(kState_RestartConfirm
   (view confirm_action)
   (update_view
      {handle
         ($this
            set_confirm_actions
            confirm_restart
            (overshell_confirm_yes overshell_confirm_no))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {if_else
               {gamemode in_mode trainer}
               {{gamemode get game_panel}
                  restart_section}
               {session end_game kRestart}})
         (overshell_confirm_no
            {$this show_options})})
   (on_cancel
      {$this show_options}))
(kState_SkipSongConfirm
   (view confirm_action)
   (update_view
      {handle
         ($this
            set_confirm_actions
            confirm_quit
            (overshell_confirm_yes overshell_confirm_no))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {session end_game kSkip}
            {$this leave_options})
         (overshell_confirm_no
            {$this show_options})})
   (on_cancel
      {$this show_options}))
(kState_OnlineOptions
   (enter
   {online_options.lst set circular 0})
   (view online_options)
   (update_view
      {do
         ($session_mgr
            {$this get_session_mgr})
         ($is_local
            {$session_mgr is_local})
         ($has_remote_users
            {$session_mgr has_remote_users})
         ($is_leader_local
            {$session_mgr is_leader_local})
         ($are_invites_allowed
            {$session_mgr are_invites_allowed})
         #ifdef HX_XBOX
         ($is_partying
            {&&
               {platform_mgr is_in_party_with_others}
               {$session_mgr are_invites_allowed}})
         {handle
            ($this update_in_xbox_party $is_partying)}
         #endif
         {handle
            ($this
               update_kick_allowed
               {&&
                  {! $is_local}
                  $is_leader_local})}
         {handle
            ($this update_mute_allowed $has_remote_users)}
         {handle
            ($this update_invites_allowed $are_invites_allowed)}})
   (requires_online_session TRUE)
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_invite
            #ifdef HX_XBOX
            {platform_mgr show_user_friends $user}
            #else
            {$this show_invite_friends}
            #endif)
         (overshell_kick
            {$this show_kick_users})
         (overshell_mute
            {$this show_mute_users})
         (overshell_gamercard
            {$this show_gamercard_users})
         (overshell_disconnect
            {$this attempt_disconnect})
         (overshell_invite_xbox_party
            {platform_mgr invite_user_party $user})
         (overshell_check_invites
            {join_invite_panel set_joining_user $user}
            {platform_mgr check_mailbox})})
   (on_cancel
      {if_else
         {$this in_game}
         {$this show_game_options}
         {$this show_options}}))
(kState_DisconnectConfirm
   (view confirm_action)
   (requires_online_session TRUE)
   (enter
      {handle
         ($this
            set_confirm_actions
            overshell_confirm_disconnect
            (overshell_confirm_yes overshell_confirm_no))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {session disconnect})
         (overshell_confirm_no
            {$this show_online_options})})
   (on_cancel
      {$this show_online_options}))
(kState_RemoveUserDisconnectConfirm
   (view confirm_action)
   (prevents_override TRUE)
   (remove_user_prompt TRUE)
   (enter
      {handle
         ($this
            set_confirm_actions
            overshell_confirm_remove_user
            (overshell_confirm_yes overshell_confirm_no))}
      {handle
         ($this set_default_option overshell_confirm_no)})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {$this remove_user})
         (overshell_confirm_no
            {$this leave_options})})
   (on_cancel
      {$this leave_options}))
(kState_RemoveCriticalUserConfirm
   (view confirm_action)
   (prevents_override TRUE)
   (remove_user_prompt TRUE)
   (enter
      {handle
         ($this
            set_confirm_actions
            overshell_confirm_remove_critical_user
            (overshell_confirm_yes overshell_confirm_no))}
      {handle
         ($this set_default_option overshell_confirm_no)})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {$this remove_user})
         (overshell_confirm_no
            {$this leave_options})})
   (on_cancel
      {$this leave_options}))
(kState_RemoveUserInSongConfirm
   (view confirm_action)
   (prevents_override TRUE)
   (remove_user_prompt TRUE)
   (enter
      {handle
         ($this
            set_confirm_actions
            overshell_confirm_remove_user_in_song
            (overshell_confirm_yes overshell_confirm_no))}
      {handle
         ($this set_default_option overshell_confirm_no)})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {$this remove_user})
         (overshell_confirm_no
            {$this show_options})})
   (on_cancel
      {$this show_options}))
(kState_RemoveUserDenial
   (view confirm_action)
   (update_view
      {handle
         ($this set_confirm_message overshell_remove_user_denial_failure_on)})
   (SELECT_MSG
      {$this show_options})
   (on_cancel
      {$this show_options}))
(kState_GameOptions
   (view game_options)
   (update_view
      {do
         ($controller
            {{$this get_user}
               get_controller_sym})
         ($controller_type
            {{$this get_user}
               get_controller_type})
         {if_else
            {'||'
               {== vocals $controller}
               {== keys $controller}
               {== drum $controller}}
            {do
               {instr_option.chk set checked FALSE}
               {instr_option.chk set_showing FALSE}}
            {do
               {instr_option.chk set_showing TRUE}
               {$this
                  update_options_check
                  {{$this get_user}
                     get_gameplay_options}}}}
         {handle
            ($this
               setup_game_options_list
               $controller_type
               {&&
                  {gamemode get show_pause_multiplayer}
                  {$this in_song}}
               {{$this get_session_mgr}
                  is_online_enabled}
               {$this in_game}
               {==
                  {user_mgr get_num_participants}
                  1})}}
      {handle
         ($this
            update_auto_vocals_enabled
            {modifier_mgr is_modifier_active mod_auto_vocals})}
      {do
         ($no_fail_enabled
            {modifier_mgr is_modifier_active mod_no_fail_band})
         {handle
            ($this update_no_fail_enabled $no_fail_enabled)}})
   (exit
      {instr_option.chk set_showing FALSE})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (mod_auto_vocals
            {$this attempt_toggle_auto_vocals})
         (mod_no_fail_band
            {if_else
               {session_mgr is_leader_local}
               {meta_performer
                  set_band_no_fail
                  {!
                     {meta_performer is_band_no_fail_set}}}
               {$this show_toggle_no_fail_denial}}
            {overshell update_all})
         (overshell_lefty_flip
            {do
               ($options
                  {{$this get_user}
                     get_gameplay_options})
               ($lefty_flipped
                  {$options get_lefty})
               {$options
                  set_lefty
                  {! $lefty_flipped}}
               {$this update}
               {if
                  {$user player}
                  {{$user player}
                     update_lefty_flip}}})
         (overshell_register_online
            {$this attempt_register_online})
         (overshell_online_options
            {$this show_online_options})
         (overshell_drum_options
            {$this show_options_drum})
         (overshell_vocal_options
            {$this show_options_vocal})
         (overshell_av_settings
            {$this show_options_av_settings})
         (overshell_extras
            {$this show_options_extras})
         (overshell_modifiers
            {$this show_modifiers})
         (overshell_rb3esettings
            {$this show_state kState_RB3ESettings})
         })
   (on_cancel
      {$this show_options}))
(kState_ToggleNoFailDenial
   (view confirm_action)
   (update_view
      {handle
         ($this set_confirm_message overshell_toggle_no_fail_denial)})
   (SELECT_MSG
      {$this show_game_options})
   (on_cancel
      {$this show_game_options}))
(kState_OptionsAVSettings
   (view options_av_settings)
   (on_cancel
      {$this show_game_options})
   (update_view
      {handle
         ($this update_dolby_check)}
      {handle
         ($this update_bass_boost_check)}
      {handle
         ($this update_overscan_check)}
      {do
         ($user
            {$this get_user})
         ($enabled
            {if_else
               {$user can_save_data}
               {saveload_mgr is_autosave_enabled $user}
               FALSE})
         {$this
            update_autosave_enabled
            {!
               {saveload_mgr is_idle}}
            $enabled}}
      {$this
         set_options_signed_in
         {profile_mgr
            get_profile
            {$this get_user}}})
   (exit
      {unless
	  {'||'
         {$this in_game}
		 {modifier_mgr is_modifier_active mod_auto_play}}
         {saveload_mgr autosave}})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_calibration
            {$this show_enter_calibration})
         (overshell_dolby
            {profile_mgr
               set_dolby
               {!
                  {profile_mgr get_dolby}}}
            {$this update_dolby_check})
         (overshell_bass_boost
            {profile_mgr
               set_bass_boost
               {!
                  {profile_mgr get_bass_boost}}}
            {$this update_bass_boost_check})
         (overshell_overscan
            {profile_mgr
               set_overscan
               {!
                  {profile_mgr get_overscan}}}
            {$this update_overscan_check})
         (overshell_audio_options
            {$this show_options_audio})
         (overshell_autosave_enabled
            {if_else
               {meta is_up}
               {if_else
                  {saveload_mgr is_idle}
                  {do
                     {if_else
                        {saveload_mgr is_autosave_enabled $user}
                        {$this show_saveloadmgr_autosave_confirm}
						{unless {|| {! $gotcha} {modifier_mgr is_modifier_active mod_auto_play}}
                        {saveload_mgr enable_autosave $user}}}
                     {overshell update_all}}
                  {$this show_saveloadmgr_not_idle}}
               {$this show_saveloadmgr_not_meta}})}))
(kState_OptionsAudio
   (view options_audio)
   (on_cancel
      {$this show_options_av_settings})
   (enter
      {options_audio.lst set_selected 0}
      {instruments.sld set_num_steps 12}
      {bg_music.sld set_num_steps 12}
      {crowd.sld set_num_steps 12}
      {sfx.sld set_num_steps 12}
      {voice_chat.sld set_num_steps 12}
      {instruments.sld set_current {profile_mgr get_foreground_volume}}
      {bg_music.sld set_current {profile_mgr get_background_volume}}
      {crowd.sld set_current {profile_mgr get_crowd_volume}}
      {sfx.sld set_current {profile_mgr get_fx_volume}}
      {voice_chat.sld set_current {profile_mgr get_voice_chat_volume}}
         {options_audio.lst
            set_data
              (overshell_audio_instruments
               overshell_audio_bg_music
               overshell_audio_crowd
               overshell_audio_sfx
               #ifdef HX_PS3
                overshell_audio_voice_chat
               #endif)}
   )
   (update_view
      {handle
         ($this
            update_slider
            instruments.sld
            "")}
      {handle
         ($this
            update_slider
            bg_music.sld
            "")}
      {handle
         ($this
            update_slider
            crowd.sld
            "")}
      {handle
         ($this
            update_slider
            sfx.sld
            "")}
      {handle
         ($this
            update_slider
            voice_chat.sld
            "")})
   (SELECT_MSG
      {if
         {== $component options_audio.lst}
         {switch
            {$component selected_sym}
            (overshell_audio_instruments
               {instruments.sld store}
               {instruments.sld set_showing TRUE}
               {$this set_focus instruments.sld})
            (overshell_audio_bg_music
               {bg_music.sld store}
               {bg_music.sld set_showing TRUE}
               {$this set_focus bg_music.sld})
            (overshell_audio_crowd
               {crowd.sld store}
               {crowd.sld set_showing TRUE}
               {$this set_focus crowd.sld})
            (overshell_audio_sfx
               {sfx.sld store}
               {sfx.sld set_showing TRUE}
               {$this set_focus sfx.sld})
            (overshell_audio_voice_chat
               {voice_chat.sld store}
               {voice_chat.sld set_showing TRUE}
               {$this set_focus voice_chat.sld})}})
   (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld"
               "voice_chat.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {$this set_focus options_audio.lst})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user}))
(kState_OptionsVocal
   (view options_vocal)
   (on_cancel
      {$this show_game_options})
   (enter
      {vocal_track.sld set_num_steps 12}
      {vocal_sens1.sld set_num_steps 12}
      {vocal_sens2.sld set_num_steps 12}
      {vocal_sens3.sld set_num_steps 12}
         {static_vocals.chk set_showing 1}
         {synapse.chk set_showing 1}
         {options_vocal.lst
            set_data
               (overshell_vocals_mode_static overshell_synapse overshell_vocal_track_vol mic_1_gain mic_2_gain mic_3_gain)}
      )
   (update_view
      {do
         ($options
            {{$this get_user}
               get_gameplay_options})
         ($can_change_synapse
            {$this can_change_synapse_option})
         {handle
            ($this
               update_synapse_check
               {profile_mgr get_synapse_enabled})}
         {handle
            ($this
               update_static_check
               {==
                  {$options get_vocal_style}
                  kVocalStyleStatic})}
         {handle
            ($this
               update_slider
               vocal_track.sld
               "")}
         {handle
            ($this
               update_slider
               vocal_sens1.sld
               "")}
         {handle
            ($this
               update_slider
               vocal_sens2.sld
               "")}
         {handle
            ($this
               update_slider
               vocal_sens3.sld
               "")}
         {handle
            ($this set_can_change_synapse $can_change_synapse)}})
   (SELECT_MSG
      {if
         {== $component options_vocal.lst}
         {switch
            {$component selected_sym}
            (overshell_vocals_mode_static
               {do
                  ($options
                     {{$this get_user}
                        get_gameplay_options})
                  {$options
                     set_vocal_style
                     {if_else
                        {==
                           {$options get_vocal_style}
                           kVocalStyleStatic}
                        kVocalStyleScrolling
                        kVocalStyleStatic}}}
               {if
                  {$user player}
                  {{$user player}
                     update_vocal_style}}
               {$this update})
            (overshell_synapse
               {profile_mgr
                  set_synapse_enabled
                  {!
                     {profile_mgr get_synapse_enabled}}}
               {$this update})
            (overshell_vocal_track_vol
               {vocal_track.sld store}
               {vocal_track.sld set_showing TRUE}
               {$this set_focus vocal_track.sld})
            (mic_1_gain
               {vocal_sens1.sld store}
               {vocal_sens1.sld set_showing TRUE}
               {$this set_focus vocal_sens1.sld})
            (mic_2_gain
               {vocal_sens2.sld store}
               {vocal_sens2.sld set_showing TRUE}
               {$this set_focus vocal_sens2.sld})
            (mic_3_gain
               {vocal_sens3.sld store}
               {vocal_sens3.sld set_showing TRUE}
               {$this set_focus vocal_sens3.sld})}})
   (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("vocal_track.sld"
               "vocal_sens1.sld"
               "vocal_sens2.sld"
               "vocal_sens3.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {$this set_focus options_vocal.lst})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user}))
(kState_OptionsExtras
   (view options_extras)
      (enter
         {options_extras.lst
            set_data
               (overshell_credits
                overshell_linking_code
                #ifdef HX_XBOX
                overshell_audition
                #endif)})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_credits
            {$this show_enter_credits})
         (overshell_linking_code
            {if_else
               {&&
                  {$user can_save_data}
                  {$user is_signed_in_online}}
               {$this show_linking_code}
               #ifdef HX_PS3
               {do
                  {$this show_linking_code_error}
                  {platform_mgr run_net_start_utility}}
               #else
               {$this show_linking_code_error}
               #endif})
         (overshell_audition
            #ifdef HX_XBOX
            {cond
               ({!
                     {platform_mgr has_hard_drive}}
                  {$this show_state kState_AuditionNoHardDriveConfirm})
               ({&&
                     {! $cheat_skip_ugc_membership_check}
                     {==
                        -1
                        {platform_mgr get_rbn_member_pad_num}}}
                  {$this show_state kState_AuditionNoMembershipConfirm})
               ({!
                     {server is_connected}}
                  {$this show_state kState_AuditionNoRockCentral})
               ({!
                     {session_mgr is_local}}
                  {$this show_state kState_AuditionDenialRemotePlayers})
               ({audition_mgr can_enter_audition}
                  {$this show_state kState_AuditionEnterConfirm})
               {$this leave_options}}
            #else
            {$this leave_options}
            #endif)})
   (on_cancel
      {$this show_game_options}))
(kState_AuditionNoHardDriveConfirm
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message audition_no_hard_drive_found)})
   (SELECT_MSG
      {$this show_options_extras})
   (on_cancel
      {$this show_options_extras}))
(kState_AuditionNoMembershipConfirm
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message audition_no_club_found)})
   (SELECT_MSG
      {$this show_options_extras})
   (on_cancel
      {$this show_options_extras}))
(kState_AuditionNoRockCentral
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message audition_no_rock_central)})
   (SELECT_MSG
      {$this show_options_extras})
   (on_cancel
      {$this show_options_extras}))
(kState_AuditionDenialRemotePlayers
   (view confirm_action)
   (update_view
      {handle
         ($this set_confirm_message overshell_audition_denial_remote_players)})
   (SELECT_MSG
      {$this show_options_extras})
   (on_cancel
      {$this show_options_extras}))
(kState_AuditionEnterConfirm
   (view confirm_action)
   (enter
      {handle
         ($this
            set_confirm_actions
            overshell_enter_audition
            (overshell_confirm_yes overshell_confirm_no))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {ui_event_mgr trigger_event go_to_audition}
            {$this leave_options})
         (overshell_confirm_no
            {$this show_options_extras})})
   (on_cancel
      {$this show_options_extras}))
(kState_LinkingCode
   (view linking_code)
   (success FALSE)
   (waiting TRUE)
   (code
      "")
   (update_view
      {do
         ($profile
            {profile_mgr
               get_profile
               {$this get_user}})
         {if
            $profile
            {$this
               update_linking_code
               {{$this get_state}
                  get
                  waiting}
               {{$this get_state}
                  get
                  success}
               {{$this get_state}
                  get
                  code}
               $profile}}})
   (enter
      {$this fetch_linking_code})
   (BUTTON_DOWN_MSG
      {if_else
         {&&
            {== $action kAction_Confirm}
            {!
               {{$this get_state}
                  get
                  waiting}}}
         {$this show_options_extras}
         kDataUnhandled})
   (on_cancel
      {$this cancel_linking_code}
      {$this show_options_extras}))
(kState_LinkingCodeError
   (view confirm_action)
   (enter
      {if_else
         {{$this get_user}
            can_save_data}
         {handle
            ($this set_confirm_message linking_code_connect_error)}
         {handle
            ($this set_confirm_message linking_code_signin_error)}})
   (SELECT_MSG
      {$this show_options_extras}))
      
(kState_RB3EInstHW
   (view options)
   (enter
   {options.lst set_selected $rb3einsthwval}
   {options.lst set_data 
   (
      os_allhw
      os_guitarhw
      os_basshw
      os_drumshw
      os_keyshw
   )})
   (SELECT_MSG
   {set $rb3einsthwval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_allhw
      {$this show_state kState_RB3EFretboardSelectorAll})
   (os_guitarhw
      {$this show_state kState_RB3EFretboardSelectorGtr})
   (os_basshw
      {$this show_state kState_RB3EFretboardSelectorBass})
   (os_drumshw
     {$this show_state kState_RB3EFretboardSelectorDrum})
   (os_keyshw
     {$this show_state kState_RB3EFretboardSelectorKeys})
   })
   (on_cancel
      {$this show_state kState_RB3TextureMenu}))

(kState_RB3EFretboardSelectorAll
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $highway}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highway ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/highways/highways.dta)}
 )
   (SCROLL_MSG
      {set $highwaymenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highwaymenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $highwaycustomtexture TRUE}
        {set $highwaygtrcustomtexture FALSE}
        {set $highwaybasscustomtexture FALSE}
        {set $highwaydrumcustomtexture FALSE}
        {set $highwaykeyscustomtexture FALSE}
        {set $highway {$component selected_sym}}
        {set $highwaygtr none}
        {set $highwaybass none}
        {set $highwaydrum none}
        {set $highwaykeys none}
        {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highway ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstHW}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))
  
(kState_RB3EFretboardSelectorGtr
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $highwaygtr}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highwaygtr ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/highways/highways.dta)}
 )
   (SCROLL_MSG
      {set $highwaygtrmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highwaygtrmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $highwaygtrcustomtexture TRUE}
        {set $highwaygtr {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highwaygtr ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstHW}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))
  
(kState_RB3EFretboardSelectorBass
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $highwaybass}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highwaybass ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/highways/highways.dta)}
 )
   (SCROLL_MSG
      {set $highwaybassmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highwaybassmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $highwaybasscustomtexture TRUE}
        {set $highwaybass {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highwaybass ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstHW}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EFretboardSelectorDrum
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $highwaydrum}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highwaydrum ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/highways/highways.dta)}
 )
   (SCROLL_MSG
      {set $highwaydrummenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highwaydrummenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $highwaydrumcustomtexture TRUE}
        {set $highwaydrum {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highwaydrum ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstHW}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EFretboardSelectorKeys
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $highwaykeys}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highwaykeys ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/highways/highways.dta)}
 )
   (SCROLL_MSG
      {set $highwaykeysmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highwaykeysmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $highwaykeyscustomtexture TRUE}
        {set $highwaykeys {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/highways/" $highwaykeys ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstHW}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EFullComboSFXSelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $fcsfx}
    {online_options.lst set_data (#include ../endgame/fullcombo.dta)}
 )
   (SELECT_MSG
       {set $fcsfx {$component selected_sym}}
       {if_else {exists fc_preview_clip}
          {do
             {delete fc_preview_clip}
             {new MoggClip fc_preview_clip}
          }
          {new MoggClip fc_preview_clip}
       }
       {fc_preview_clip set file {sprint "sfx/streams/fc/" $fcsfx ".mogg"}}
       {fc_preview_clip set loop FALSE}
       {fc_preview_clip set volume -8}
       {fc_preview_clip play}
    )
 (on_cancel
  {$this show_state kState_RB3EAudioMenu}))

(kState_RB3EInstStrk
   (view options)
   (enter
   {options.lst set_selected $rb3einststrkval}
   {options.lst set_data 
   (
      os_allstrk
      os_guitarstrk
      os_bassstrk
      os_drumsstrk
      os_keysstrk
   )})
   (SELECT_MSG
   {set $rb3einststrkval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_allstrk
      {$this show_state kState_RB3ESpotlightSelectorAll})
   (os_guitarstrk
      {$this show_state kState_RB3ESpotlightSelectorGtr})
   (os_bassstrk
      {$this show_state kState_RB3ESpotlightSelectorBass})
   (os_drumsstrk
     {$this show_state kState_RB3ESpotlightSelectorDrum})
   (os_keysstrk
     {$this show_state kState_RB3ESpotlightSelectorKeys})
   })
   (on_cancel
      {$this show_state kState_RB3TextureMenu}))

(kState_RB3EMTVSetup
   (view online_options)
   (enter
   {set $mtvtracked 0}
   {online_options.lst set_selected $rb3emtvval}
   {online_options.lst set_data 
   (
      os_horizontal
      os_vertical
      os_zspace
   )})
   (SELECT_MSG
   {set $rb3emtvval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_horizontal
      {set $mtvtracked 0}
      {$this show_state kState_RB3EMTVXYZ})
   (os_vertical
      {set $mtvtracked 2}
      {$this show_state kState_RB3EMTVXYZ})
   (os_zspace
      {set $mtvtracked 1}
      {$this show_state kState_RB3EMTVXYZ})
   })
   (on_cancel
      {$this show_state kState_RB3EAppearanceMenu}))

(kState_RB3EMTVXYZ
   (view options)
   (enter
   {options.lst set_selected $rb3emtvval}
   {options.lst set_data 
   (
      os_100
      os_50
      os_25
      os_10
      os_1
      os_reset
      os_minus1
      os_minus10
      os_minus25
      os_minus50
      os_minus100
   )})
   (SELECT_MSG
   {set $rb3emtvval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_100
      {switch $mtvtracked
         (0 {set $mtvpos_0 {+ $mtvpos_0 100}})
         (1 {set $mtvpos_1 {- $mtvpos_1 100}})
         (2 {set $mtvpos_2 {+ $mtvpos_2 100}})
      }
   )
   (os_50
      {switch $mtvtracked
         (0 {set $mtvpos_0 {+ $mtvpos_0 50}})
         (1 {set $mtvpos_1 {- $mtvpos_1 50}})
         (2 {set $mtvpos_2 {+ $mtvpos_2 50}})
      }
   )
   (os_25
      {switch $mtvtracked
         (0 {set $mtvpos_0 {+ $mtvpos_0 25}})
         (1 {set $mtvpos_1 {- $mtvpos_1 25}})
         (2 {set $mtvpos_2 {+ $mtvpos_2 25}})
      }
   )
   (os_10
      {switch $mtvtracked
         (0 {set $mtvpos_0 {+ $mtvpos_0 10}})
         (1 {set $mtvpos_1 {- $mtvpos_1 10}})
         (2 {set $mtvpos_2 {+ $mtvpos_2 10}})
      }
   )
   (os_1
      {switch $mtvtracked
         (0 {set $mtvpos_0 {+ $mtvpos_0 1}})
         (1 {set $mtvpos_1 {- $mtvpos_1 1}})
         (2 {set $mtvpos_2 {+ $mtvpos_2 1}})
      }
   )
   (os_reset
      {switch $mtvtracked
         (0 {set $mtvpos_0 0})
         (1 {set $mtvpos_1 0})
         (2 {set $mtvpos_2 0})
      }
   )
   (os_minus100
      {switch $mtvtracked
         (0 {set $mtvpos_0 {- $mtvpos_0 100}})
         (1 {set $mtvpos_1 {+ $mtvpos_1 100}})
         (2 {set $mtvpos_2 {- $mtvpos_2 100}})
      }
   )
   (os_minus50
      {switch $mtvtracked
         (0 {set $mtvpos_0 {- $mtvpos_0 50}})
         (1 {set $mtvpos_1 {+ $mtvpos_1 50}})
         (2 {set $mtvpos_2 {- $mtvpos_2 50}})
      }
   )
   (os_minus25
      {switch $mtvtracked
         (0 {set $mtvpos_0 {- $mtvpos_0 25}})
         (1 {set $mtvpos_1 {+ $mtvpos_1 25}})
         (2 {set $mtvpos_2 {- $mtvpos_2 25}})
      }
   )
   (os_minus10
      {switch $mtvtracked
         (0 {set $mtvpos_0 {- $mtvpos_0 10}})
         (1 {set $mtvpos_1 {+ $mtvpos_1 10}})
         (2 {set $mtvpos_2 {- $mtvpos_2 10}})
      }
   )
   (os_minus1
      {switch $mtvtracked
         (0 {set $mtvpos_0 {- $mtvpos_0 1}})
         (1 {set $mtvpos_1 {+ $mtvpos_1 1}})
         (2 {set $mtvpos_2 {- $mtvpos_2 1}})
      }
   )
   }
   {{{gamemode get track_panel} find mtv_overlay} set_pos}
   )
   (on_cancel
      {$this show_state kState_RB3EMTVSetup}))

(kState_RB3ESpotlightSelectorAll
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $spotlight}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlight ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/spotlights/spotlights.dta)}
 )
   (SCROLL_MSG
      {set $spotlightmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlightmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $spotlightcustomtexture TRUE}
        {set $spotlightgtrcustomtexture FALSE}
        {set $spotlightbasscustomtexture FALSE}
        {set $spotlightdrumcustomtexture FALSE}
        {set $spotlightkeyscustomtexture FALSE}
        {set $spotlight {$component selected_sym}}
        {set $spotlightgtr none}
        {set $spotlightbass none}
        {set $spotlightdrum none}
        {set $spotlightkeys none}
        {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlight ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstStrk}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3ESpotlightSelectorGtr
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $spotlightgtr}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlightgtr ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/spotlights/spotlights.dta)}
 )
   (SCROLL_MSG
      {set $spotlightgtrmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlightgtrmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $spotlightgtrcustomtexture TRUE}
        {set $spotlightgtr {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlightgtr ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstStrk}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3ESpotlightSelectorBass
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $spotlightbass}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlightbass ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/spotlights/spotlights.dta)}
 )
   (SCROLL_MSG
      {set $spotlightbassmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlightbassmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $spotlightbasscustomtexture TRUE}
        {set $spotlightbass {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlightbass ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstStrk}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3ESpotlightSelectorDrum
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $spotlightdrum}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlightdrum ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/spotlights/spotlights.dta)}
 )
   (SCROLL_MSG
      {set $spotlightdrummenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlightdrummenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $spotlightdrumcustomtexture TRUE}
        {set $spotlightdrum {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlightdrum ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstStrk}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3ESpotlightSelectorKeys
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $spotlightkeys}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlightkeys ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/spotlights/spotlights.dta)}
 )
   (SCROLL_MSG
      {set $spotlightkeysmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlightkeysmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $spotlightkeyscustomtexture TRUE}
        {set $spotlightkeys {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/spotlights/" $spotlightkeys ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstStrk}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EInstOD
   (view options)
   (enter
   {options.lst set_selected $rb3einstodval}
   {options.lst set_data 
   (
      os_allod
      os_guitarod
      os_bassod
      os_drumsod
      os_keysod
   )})
   (SELECT_MSG
   {set $rb3einstodval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_allod
      {$this show_state kState_RB3EEmissiveSelectorAll})
   (os_guitarod
      {$this show_state kState_RB3EEmissiveSelectorGtr})
   (os_bassod
      {$this show_state kState_RB3EEmissiveSelectorBass})
   (os_drumsod
     {$this show_state kState_RB3EEmissiveSelectorDrum})
   (os_keysod
     {$this show_state kState_RB3EEmissiveSelectorKeys})
   })
   (on_cancel
      {$this show_state kState_RB3TextureMenu}))

(kState_RB3EEmissiveSelectorAll
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $emissive}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissive ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/emissives/emissives.dta)}
 )
   (SCROLL_MSG
      {set $emissivemenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissivemenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $emissivecustomtexture TRUE}
        {set $emissivegtrcustomtexture FALSE}
        {set $emissivebasscustomtexture FALSE}
        {set $emissivedrumcustomtexture FALSE}
        {set $emissivekeyscustomtexture FALSE}
        {set $emissive {$component selected_sym}}
        {set $emissivegtr none}
        {set $emissivebass none}
        {set $emissivedrum none}
        {set $emissivekeys none}
        {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissive ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstOD}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))
  
(kState_RB3EEmissiveSelectorGtr
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $emissivegtr}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissivegtr ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/emissives/emissives.dta)}
 )
   (SCROLL_MSG
      {set $emissivegtrmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissivegtrmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $emissivegtrcustomtexture TRUE}
        {set $emissivegtr {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissivegtr ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstOD}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EEmissiveSelectorBass
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $emissivebass}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissivebass ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/emissives/emissives.dta)}
 )
   (SCROLL_MSG
      {set $emissivebassmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissivebassmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $emissivebasscustomtexture TRUE}
        {set $emissivebass {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissivebass ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstOD}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EEmissiveSelectorDrum
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $emissivedrum}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissivedrum ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/emissives/emissives.dta)}
 )
   (SCROLL_MSG
      {set $emissivedrummenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissivedrummenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $emissivedrumcustomtexture TRUE}
        {set $emissivedrum {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissivedrum ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstOD}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EEmissiveSelectorKeys
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $emissivekeys}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissivekeys ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/emissives/emissives.dta)}
 )
   (SCROLL_MSG
      {set $emissivekeysmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissivekeysmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $emissivekeyscustomtexture TRUE}
        {set $emissivekeys {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/emissives/" $emissivekeys ".png"}})
 (on_cancel
  {$this show_state kState_RB3EInstOD}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EAnimatedGemSelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $animatedgemmenu}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/animated_gems/prism_gems_rb4/prism_gems_rb4_0.png"}}
    {online_options.lst set_data ("rb4")}
 )
   (SCROLL_MSG
      {set $animatedgemmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/animated_gems/prism_gems_" $animatedgemmenu "/prism_gems_" $animatedgemmenu "_0.png"}}
      {$this update})
   (SELECT_MSG
        {set $animatedgems TRUE}
        {set $animatedgemscustomtexture TRUE}
        {set $animatedgemname {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/animated_gems/prism_gems_" $animatedgemname "/prism_gems_" $animatedgemname "_0.png"}})
 (on_cancel
  {$this show_state kState_RB3AnimationMenu}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))
  
(kState_RB3EAnimatedSmasherSelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $animatedsmashermenu}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/animated_smashers/gem_smasher_guitar_shiny/gem_smasher_guitar_shiny_0.png"}}
    {online_options.lst set_data ("shiny" "starlight")}
 )
   (SCROLL_MSG
      {set $animatedsmashermenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/animated_smashers/gem_smasher_guitar_" $animatedsmashermenu "/gem_smasher_guitar_" $animatedsmashermenu "_0.png"}}
      {$this update})
   (SELECT_MSG
        {set $animatedsmashers TRUE}
        {set $animatedsmasherscustomtexture TRUE}
        {set $animatedsmashername {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/animated_smashers/gem_smasher_guitar_" $animatedsmashername "/gem_smasher_guitar_" $animatedsmashername "_0.png"}})
 (on_cancel
  {$this show_state kState_RB3AnimationMenu}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EAnimatedHighwaySelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $animatedhighwaymenu}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {online_options.lst set_data ("rb4_new" "rb4effect5_color4" "rb4effect6_color7" "rb4effect4_color1" "rb4effect9_color1")}
    {choose_character.tex set_bitmap {sprint "ui/track/animated_surfaces/rb4_new/rb4_new_0.png"}}
 )
   (SCROLL_MSG
      {set $animatedhighwaymenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/animated_surfaces/" $animatedhighwaymenu "/" $animatedhighwaymenu "_0.png"}}
      {$this update})
   (SELECT_MSG
        {set $animatedhighway TRUE}
        {set $animatedhighwaycustomtexture TRUE}
        {set $highway _rb3_guitar}
        {set $animatedhighwayname {$component selected_sym}})
 (on_cancel
  {$this show_state kState_RB3AnimationMenu}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3ESmasherSelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $smasher}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/smashers/gem_smashers_guitar_" $smasher ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/smashers/smashers.dta)}
 )
   (SCROLL_MSG
      {set $smashermenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/smashers/gem_smashers_guitar_" $smashermenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $smashercustomtexture TRUE}
        {set $smasher {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/smashers/gem_smashers_guitar_" $smasher ".png"}})
 (on_cancel
  {$this show_state kState_RB3TextureMenu}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EFlamesSelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $flames}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/flames/flare_style_" $flames ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/flames/flames.dta)}
 )
   (SCROLL_MSG
      {set $flamesmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/flames/flare_style_" $flamesmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $flamescustomtexture TRUE}
        {set $flames {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/flames/flare_style_" $flames ".png"}})
 (on_cancel
  {$this show_state kState_RB3TextureMenu}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EScoreSelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $scoretex}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/score/scoreboard_frame_" $scoretex ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/score/score.dta)}
 )
   (SCROLL_MSG
      {set $scoremenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/score/scoreboard_frame_" $scoremenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $scorecustomtexture TRUE}
        {set $scoretex {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/score/scoreboard_frame_" $scoretex ".png"}})
 (on_cancel
  {$this show_state kState_RB3TextureMenu}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3ERailsSelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $rails}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/rails/rails_" $rails ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/rails/rails.dta)}
 )
   (SCROLL_MSG
      {set $railsmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/rails/rails_" $railsmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $railscustomtexture TRUE}
        {set $rails {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/rails/rails_" $rails ".png"}})
 (on_cancel
  {$this show_state kState_RB3TextureMenu}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EODbarSelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $odbar}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/overdrive_bar/overdrive_meter_background_fill_" $odbar ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/overdrive_bar/overdrive_bar.dta)}
 )
   (SCROLL_MSG
      {set $odbarmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/overdrive_bar/overdrive_meter_background_fill_" $odbarmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $odbarcustomtexture TRUE}
        {set $odbar {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/overdrive_bar/overdrive_meter_background_fill_" $odbar ".png"}})
 (on_cancel
  {$this show_state kState_RB3TextureMenu}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EMultiRingSelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $multiring}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/multiplier_ring/streak_meter_bg_" $multiring ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/multiplier_ring/multiplier_ring.dta)}
 )
   (SCROLL_MSG
      {set $multiringmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/multiplier_ring/streak_meter_bg_" $multiringmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $multiringcustomtexture TRUE}
        {set $multiring {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/multiplier_ring/streak_meter_bg_" $multiring ".png"}})
 (on_cancel
  {$this show_state kState_RB3TextureMenu}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3ECrowdMeterSelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $crowdmeter}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/crowd_meter/crowd_meter_frame_" $crowdmeter ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/crowd_meter/crowd_meter.dta)}
 )
   (SCROLL_MSG
      {set $crowdmetermenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/crowd_meter/crowd_meter_frame_" $crowdmetermenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $crowdmetercustomtexture TRUE}
        {set $crowdmeter {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/crowd_meter/crowd_meter_frame_" $crowdmeter ".png"}})
 (on_cancel
  {$this show_state kState_RB3TextureMenu}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EGemSelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $gemmenu}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/gems/prism_gems_" $gem ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/gems/gems.dta)}
 )
   (SCROLL_MSG
      {set $gemmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/gems/prism_gems_" $gemmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $gemcustomtexture TRUE}
        {set $gem {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/gems/prism_gems_" $gem ".png"}})
 (on_cancel
  {$this show_state kState_RB3TextureMenu}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EKeyboardSelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $keyboard}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/keyboards/track_lanes_keyboard_" $keyboard ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/keyboards/keyboards.dta)}
 )
   (SCROLL_MSG
      {set $keyboardmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/keyboards/track_lanes_keyboard_" $keyboardmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $keyboardcustomtexture TRUE}
        {set $keyboard {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/keyboards/track_lanes_keyboard_" $keyboard ".png"}})
 (on_cancel
  {$this show_state kState_RB3TextureMenu}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))
  
(kState_RB3EVoxHWSelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $voxhw}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/voxhw/vocal_bg_combined_" $voxhw ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/voxhw/voxhw.dta)}
 )
   (SCROLL_MSG
      {set $voxhwmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/voxhw/vocal_bg_combined_" $voxhwmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $voxhwcustomtexture TRUE}
        {set $voxhw {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/voxhw/vocal_bg_combined_" $voxhw ".png"}})
 (on_cancel
  {$this show_state kState_RB3TextureMenu}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EVoxArrowSelector
 (view online_options)
 (enter
    {online_options.lst set circular 1}
    {online_options.lst set_selected $voxarrow}
    {online_options.grp add_object choose_character.mesh}
    {choose_character.mesh set_local_pos_index 2 175}
    {choose_character.mesh set_local_scale_index 0 0.2}
    {choose_character.mesh set_local_scale_index 2 0.4}
    {choose_character.mat set diffuse_tex choose_character.tex}
    {choose_character.tex set_bitmap {sprint "ui/track/voxarrow/arrow_lead_c_" $voxarrow ".png"}} ;hide the texture on first entry because the script is bad whatever
    {online_options.lst set_data (#include ../track/voxarrow/voxarrow.dta)}
 )
   (SCROLL_MSG
      {set $voxarrowmenu {$component selected_sym}}
      {choose_character.tex set_bitmap {sprint "ui/track/voxarrow/arrow_lead_c_" $voxarrowmenu ".png"}}
      {$this update})
   (SELECT_MSG
        {set $voxarrowcustomtexture TRUE}
        {set $voxarrow {$component selected_sym}}
        {choose_character.tex set_bitmap {sprint "ui/track/voxarrow/arrow_lead_c_" $voxarrow ".png"}})
 (on_cancel
  {$this show_state kState_RB3TextureMenu}
  {choose_character.mesh set_local_scale_index 0 0.5}
  {choose_character.mesh set_local_scale_index 2 1}
  {choose_character.mesh set_local_pos_index 2 300}
  {online_options.grp remove_object choose_character.mesh}))

(kState_RB3EScreensaver
 (view confirm_action)
 (enter
   {confirm_action.lst set_selected 1}
      {handle
         ($this set_confirm_actions screensaver_warning (overshell_continue overshell_cancel))})
 (SELECT_MSG
  {switch
   {$component selected_sym}
   (overshell_continue
   {set $screensaver FALSE}
   {unless
   {$this in_song}
   {do
    {ui goto_screen meta_loading_main_screen}
    {overshell exit}}})
   (overshell_cancel
   {$this show_state kState_RB3ECameraMenu})
   })
 (on_cancel
  {$this show_state kState_RB3ECameraMenu})
 (exit
 {options_end_game.lst set_selected 0}))
(kState_RB3EDrumColorSelector
 (view options_extras)
 (enter
  {options_extras.lst set_selected $color1menuval}
  {options_extras.lst
   set_data
   (os_gemcol
    os_cymcol
    os_smashcol)})
 (SELECT_MSG
 {set $color1menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_gemcol
    {$this show_state kState_RB3EDrumGemColorSelector})
   (os_cymcol
    {$this show_state kState_RB3ECymbalColorSelector})
   (os_smashcol
    {$this show_state kState_RB3ESmasherColorSelector})})
 (on_cancel
  {$this show_state kState_RB3EAppearanceMenu}))
(kState_RB3ECymbalColorSelector
 (view options_audio)
 (enter
  {set $cymsliders TRUE}
  {instruments.sld set_num_steps 5}
  {bg_music.sld set_num_steps 5}
  {crowd.sld set_num_steps 5}
  {sfx.sld set_num_steps 5}
  {instruments.sld set_current $cym2_color}
  {bg_music.sld set_current $cym3_color}
  {crowd.sld set_current $cym4_color}
  {sfx.sld set_current $cym1_color}
  {options_audio.lst set_selected $color2menuval}
  {options_audio.lst
   set_data
   (os_cym1
    os_cym2
    os_cym3
    os_cym3lh)})
 (SELECT_MSG
 {set $color2menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_cym1
    {set $drumsld1 TRUE}
    {set $drumslds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_cym2
    {set $drumsld2 TRUE}
    {set $drumslds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_cym3
    {set $drumsld3 TRUE}
    {set $drumslds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_cym3lh
    {set $drumsld4 TRUE}
    {set $drumslds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $drumslds
               {do {$this show_state kState_RB3ECymMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus options_audio.lst}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
  {set $cymsliders FALSE})
 (on_cancel
  {$this show_state kState_RB3EDrumColorSelector}))
(kState_RB3ECymMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $drumsld1 {do
               {if_else {== {int $cym2_color} 0} os_cymmsg2
               {if_else {== {int $cym2_color} 1} os_cymmsg3
               {if_else {== {int $cym2_color} 2} os_cymmsg4
               {if_else {== {int $cym2_color} 3} os_cymmsg1
               os_cymmsg5}}}}}
            {if_else $drumsld2 {do
               {if_else {== {int $cym3_color} 0} os_cymmsg2
               {if_else {== {int $cym3_color} 1} os_cymmsg3
               {if_else {== {int $cym3_color} 2} os_cymmsg4
               {if_else {== {int $cym3_color} 3} os_cymmsg1
               os_cymmsg5}}}}}
            {if_else $drumsld3 {do
               {if_else {== {int $cym4_color} 0} os_cymmsg2
               {if_else {== {int $cym4_color} 1} os_cymmsg3
               {if_else {== {int $cym4_color} 2} os_cymmsg4
               {if_else {== {int $cym4_color} 3} os_cymmsg1
               os_cymmsg5}}}}}
            {do
               {if_else {== {int $cym1_color} 0} os_cymmsg2
               {if_else {== {int $cym1_color} 1} os_cymmsg3
               {if_else {== {int $cym1_color} 2} os_cymmsg4
               {if_else {== {int $cym1_color} 3} os_cymmsg1
               os_cymmsg5}}}}}}}})})
   (SELECT_MSG
      {set $drumsld1 FALSE}
      {set $drumsld2 FALSE}
      {set $drumsld3 FALSE}
      {set $drumsld4 FALSE}
      {set $drumslds FALSE}
      {$this show_state kState_RB3ECymbalColorSelector}))
 (kState_RB3EVideoMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message os_videoconfirm)})
   (SELECT_MSG
      {$this show_state kState_Modifiers}))
 (kState_RB3ENoMusicVideos
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message os_nomvconfirm)})
   (SELECT_MSG
      {$this show_state kState_Modifiers}))	  
(kState_RB3EDrumGemColorSelector
 (view options_audio)
 (enter
  {set $drumgemsliders TRUE}
  
  {instruments.sld set_num_steps 5}
  {bg_music.sld set_num_steps 5}
  {crowd.sld set_num_steps 5}
  {sfx.sld set_num_steps 5}
  {voice_chat.sld set_num_steps 2}
  {instruments.sld set_current $drum1_color}
  {bg_music.sld set_current $drum2_color}
  {crowd.sld set_current $drum3_color}
  {sfx.sld set_current $drum4_color}
  {voice_chat.sld set_current $kick_color}
  {options_audio.lst set_selected $color3menuval}
  {options_audio.lst
   set_data
   (os_gem1
    os_gem2
    os_gem3
    os_gem4
    os_kick)})
 (SELECT_MSG
 {set $color3menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_gem1
    {set $drumsld1 TRUE}
    {set $drumslds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_gem2
    {set $drumsld2 TRUE}
    {set $drumslds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_gem3
    {set $drumsld3 TRUE}
    {set $drumslds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_gem4
    {set $drumsld4 TRUE}
    {set $drumslds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})
   (os_kick
    {set $drumsld5 TRUE}
    {set $drumslds TRUE}
    {voice_chat.sld store}
    {voice_chat.sld set_showing TRUE}
    {$this set_focus voice_chat.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld"
               "voice_chat.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $drumslds
               {do {$this show_state kState_RB3EDrumGemMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus options_audio.lst}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
  {set $drumgemsliders FALSE})
 (on_cancel
  {$this show_state kState_RB3EDrumColorSelector}))
(kState_RB3EDrumGemMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $drumsld1 {do
               {if_else {== {int $drum1_color} 0} os_gemmsg2
               {if_else {== {int $drum1_color} 1} os_gemmsg3
               {if_else {== {int $drum1_color} 2} os_gemmsg4
               {if_else {== {int $drum1_color} 3} os_gemmsg1
               os_gemmsg6}}}}}
            {if_else $drumsld2 {do
               {if_else {== {int $drum2_color} 0} os_gemmsg2
               {if_else {== {int $drum2_color} 1} os_gemmsg3
               {if_else {== {int $drum2_color} 2} os_gemmsg4
               {if_else {== {int $drum2_color} 3} os_gemmsg1
               os_gemmsg6}}}}}
            {if_else $drumsld3 {do
               {if_else {== {int $drum3_color} 0} os_gemmsg2
               {if_else {== {int $drum3_color} 1} os_gemmsg3
               {if_else {== {int $drum3_color} 2} os_gemmsg4
               {if_else {== {int $drum3_color} 3} os_gemmsg1
               os_gemmsg6}}}}}
            {if_else $drumsld4 {do
               {if_else {== {int $drum4_color} 0} os_gemmsg2
               {if_else {== {int $drum4_color} 1} os_gemmsg3
               {if_else {== {int $drum4_color} 2} os_gemmsg4
               {if_else {== {int $drum4_color} 3} os_gemmsg1
               os_gemmsg6}}}}}
            {do
               {if_else {== {int $kick_color} 0} os_kickmsg1
               os_kickmsg2}}}}}})})
   (SELECT_MSG
      {set $drumsld1 FALSE}
      {set $drumsld2 FALSE}
      {set $drumsld3 FALSE}
      {set $drumsld4 FALSE}
      {set $drumsld5 FALSE}
      {set $drumslds FALSE}
      {$this show_state kState_RB3EDrumGemColorSelector}))
(kState_RB3ESmasherColorSelector
 (view options_audio)
 (enter
  {set $smashersliders TRUE}
  {instruments.sld set_num_steps 4}
  {bg_music.sld set_num_steps 4}
  {crowd.sld set_num_steps 4}
  {sfx.sld set_num_steps 4}
  {instruments.sld set_current $smasher1_color}
  {bg_music.sld set_current $smasher2_color}
  {crowd.sld set_current $smasher3_color}
  {sfx.sld set_current $smasher4_color}
  {options_audio.lst set_selected $color4menuval}
  {options_audio.lst
   set_data
   (os_smash1
    os_smash2
    os_smash3
    os_smash4)})
 (SELECT_MSG
  {set $color4menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_smash1
    {set $drumsld1 TRUE}
    {set $drumslds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_smash2
    {set $drumsld2 TRUE}
    {set $drumslds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_smash3
    {set $drumsld3 TRUE}
    {set $drumslds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_smash4
    {set $drumsld4 TRUE}
    {set $drumslds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $drumslds
               {do {$this show_state kState_RB3ESmasherMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus options_audio.lst}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
   {set $smashersliders FALSE})
 (on_cancel
  {$this show_state kState_RB3EDrumColorSelector}))
(kState_RB3ESmasherMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $drumsld1 {do
               {if_else {== {int $smasher1_color} 0} os_smashermsg2
               {if_else {== {int $smasher1_color} 1} os_smashermsg3
               {if_else {== {int $smasher1_color} 2} os_smashermsg4
               os_smashermsg1}}}}
            {if_else $drumsld2 {do
               {if_else {== {int $smasher2_color} 0} os_smashermsg2
               {if_else {== {int $smasher2_color} 1} os_smashermsg3
               {if_else {== {int $smasher2_color} 2} os_smashermsg4
               os_smashermsg1}}}}
            {if_else $drumsld3 {do
               {if_else {== {int $smasher3_color} 0} os_smashermsg2
               {if_else {== {int $smasher3_color} 1} os_smashermsg3
               {if_else {== {int $smasher3_color} 2} os_smashermsg4
               os_smashermsg1}}}}
            {do
               {if_else {== {int $smasher4_color} 0} os_smashermsg2
               {if_else {== {int $smasher4_color} 1} os_smashermsg3
               {if_else {== {int $smasher4_color} 2} os_smashermsg4
               os_smashermsg1}}}}}}})})
   (SELECT_MSG
      {set $drumsld1 FALSE}
      {set $drumsld2 FALSE}
      {set $drumsld3 FALSE}
      {set $drumsld4 FALSE}
      {set $drumslds FALSE}
      {$this show_state kState_RB3ESmasherColorSelector}))
(kState_RB3EColorSelector
 (view options_extras)
 (enter
 {options_extras.lst set_selected $color5menuval}
  {options_extras.lst
   set_data
   (os_gemcol
    os_fretcol
    os_suscol)})
 (SELECT_MSG
 {set $color5menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_gemcol
    {$this show_state kState_RB3EGemColorSelector})
   (os_fretcol
    {$this show_state kState_RB3EFretColorSelector})
   (os_suscol
    {$this show_state kState_RB3ESusColorSelector})})
 (on_cancel
  {$this show_state kState_RB3EAppearanceMenu}))
(kState_RB3EGemColorSelector
 (view options_audio)
 (enter
  {set $gemsliders TRUE}
  {instruments.sld set_num_steps 6}
  {bg_music.sld set_num_steps 6}
  {crowd.sld set_num_steps 6}
  {sfx.sld set_num_steps 6}
  {voice_chat.sld set_num_steps 6}
  {instruments.sld set_current $slot1_color}
  {bg_music.sld set_current $slot2_color}
  {crowd.sld set_current $slot3_color}
  {sfx.sld set_current $slot4_color}
  {voice_chat.sld set_current $slot5_color}
  {options_audio.lst set_selected $color6menuval}
  {options_audio.lst
   set_data
   (os_gem1
    os_gem2
    os_gem3
    os_gem4
    os_gem5)})
 (SELECT_MSG
 {set $color6menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_gem1
    {set $sld1 TRUE}
    {set $slds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_gem2
    {set $sld2 TRUE}
    {set $slds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_gem3
    {set $sld3 TRUE}
    {set $slds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_gem4
    {set $sld4 TRUE}
    {set $slds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})
   (os_gem5
    {set $sld5 TRUE}
    {set $slds TRUE}
    {voice_chat.sld store}
    {voice_chat.sld set_showing TRUE}
    {$this set_focus voice_chat.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld"
               "voice_chat.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $slds
               {do {$this show_state kState_RB3EGemMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus options_audio.lst}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
  {set $gemsliders FALSE})
 (on_cancel
  {$this show_state kState_RB3EColorSelector}))
(kState_RB3EGemMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $sld1 {do
               {if_else {== {int $slot1_color} 0} os_gemmsg1
               {if_else {== {int $slot1_color} 1} os_gemmsg2
               {if_else {== {int $slot1_color} 2} os_gemmsg3
               {if_else {== {int $slot1_color} 3} os_gemmsg4
               {if_else {== {int $slot1_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}
            {if_else $sld2 {do
               {if_else {== {int $slot2_color} 0} os_gemmsg1
               {if_else {== {int $slot2_color} 1} os_gemmsg2
               {if_else {== {int $slot2_color} 2} os_gemmsg3
               {if_else {== {int $slot2_color} 3} os_gemmsg4
               {if_else {== {int $slot2_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}
            {if_else $sld3 {do
               {if_else {== {int $slot3_color} 0} os_gemmsg1
               {if_else {== {int $slot3_color} 1} os_gemmsg2
               {if_else {== {int $slot3_color} 2} os_gemmsg3
               {if_else {== {int $slot3_color} 3} os_gemmsg4
               {if_else {== {int $slot3_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}
            {if_else $sld4 {do
               {if_else {== {int $slot4_color} 0} os_gemmsg1
               {if_else {== {int $slot4_color} 1} os_gemmsg2
               {if_else {== {int $slot4_color} 2} os_gemmsg3
               {if_else {== {int $slot4_color} 3} os_gemmsg4
               {if_else {== {int $slot4_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}
            {do
               {if_else {== {int $slot5_color} 0} os_gemmsg1
               {if_else {== {int $slot5_color} 1} os_gemmsg2
               {if_else {== {int $slot5_color} 2} os_gemmsg3
               {if_else {== {int $slot5_color} 3} os_gemmsg4
               {if_else {== {int $slot5_color} 4} os_gemmsg5
               os_gemmsg6}}}}}}}}}})})
   (SELECT_MSG
      {set $sld1 FALSE}
      {set $sld2 FALSE}
      {set $sld3 FALSE}
      {set $sld4 FALSE}
      {set $sld5 FALSE}
      {set $slds FALSE}
      {$this show_state kState_RB3EGemColorSelector}))
(kState_RB3EFretColorSelector
 (view options_audio)
 (enter
  {set $fretsliders TRUE}
  {instruments.sld set_num_steps 5}
  {bg_music.sld set_num_steps 5}
  {crowd.sld set_num_steps 5}
  {sfx.sld set_num_steps 5}
  {voice_chat.sld set_num_steps 5}
  {instruments.sld set_current $fret1_color}
  {bg_music.sld set_current $fret2_color}
  {crowd.sld set_current $fret3_color}
  {sfx.sld set_current $fret4_color}
  {voice_chat.sld set_current $fret5_color}
  {options_audio.lst set_selected $color7menuval}
  {options_audio.lst
   set_data
   (os_fret1
    os_fret2
    os_fret3
    os_fret4
    os_fret5)})
 (SELECT_MSG
 {set $color7menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_fret1
    {set $sld1 TRUE}
    {set $slds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_fret2
    {set $sld2 TRUE}
    {set $slds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_fret3
    {set $sld3 TRUE}
    {set $slds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_fret4
    {set $sld4 TRUE}
    {set $slds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})
   (os_fret5
    {set $sld5 TRUE}
    {set $slds TRUE}
    {voice_chat.sld store}
    {voice_chat.sld set_showing TRUE}
    {$this set_focus voice_chat.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld"
               "voice_chat.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $slds
               {do {$this show_state kState_RB3EFretMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus options_audio.lst}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
   {set $fretsliders FALSE})
 (on_cancel
  {$this show_state kState_RB3EColorSelector}))
(kState_RB3EFretMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $sld1 {do
               {if_else {== {int $fret1_color} 0} os_fretmsg1
               {if_else {== {int $fret1_color} 1} os_fretmsg2
               {if_else {== {int $fret1_color} 2} os_fretmsg3
               {if_else {== {int $fret1_color} 3} os_fretmsg4
               os_fretmsg5}}}}}
            {if_else $sld2 {do
               {if_else {== {int $fret2_color} 0} os_fretmsg1
               {if_else {== {int $fret2_color} 1} os_fretmsg2
               {if_else {== {int $fret2_color} 2} os_fretmsg3
               {if_else {== {int $fret2_color} 3} os_fretmsg4
               os_fretmsg5}}}}}
            {if_else $sld3 {do
               {if_else {== {int $fret3_color} 0} os_fretmsg1
               {if_else {== {int $fret3_color} 1} os_fretmsg2
               {if_else {== {int $fret3_color} 2} os_fretmsg3
               {if_else {== {int $fret3_color} 3} os_fretmsg4
               os_fretmsg5}}}}}
            {if_else $sld4 {do
               {if_else {== {int $fret4_color} 0} os_fretmsg1
               {if_else {== {int $fret4_color} 1} os_fretmsg2
               {if_else {== {int $fret4_color} 2} os_fretmsg3
               {if_else {== {int $fret4_color} 3} os_fretmsg4
               os_fretmsg5}}}}}
            {do
               {if_else {== {int $fret5_color} 0} os_fretmsg1
               {if_else {== {int $fret5_color} 1} os_fretmsg2
               {if_else {== {int $fret5_color} 2} os_fretmsg3
               {if_else {== {int $fret5_color} 3} os_fretmsg4
               os_fretmsg5}}}}}}}}})})
   (SELECT_MSG
      {set $sld1 FALSE}
      {set $sld2 FALSE}
      {set $sld3 FALSE}
      {set $sld4 FALSE}
      {set $sld5 FALSE}
      {set $slds FALSE}
      {$this show_state kState_RB3EFretColorSelector}))
(kState_RB3ESusColorSelector
 (view options_audio)
 (enter
  {set $sussliders TRUE}
  {instruments.sld set_num_steps 5}
  {bg_music.sld set_num_steps 5}
  {crowd.sld set_num_steps 5}
  {sfx.sld set_num_steps 5}
  {voice_chat.sld set_num_steps 5}
  {instruments.sld set_current $sus1_color}
  {bg_music.sld set_current $sus2_color}
  {crowd.sld set_current $sus3_color}
  {sfx.sld set_current $sus4_color}
  {voice_chat.sld set_current $sus5_color}
  {options_audio.lst set_selected $color8menuval}
  {options_audio.lst
   set_data
   (os_sus1
    os_sus2
    os_sus3
    os_sus4
    os_sus5)})
 (SELECT_MSG
 {set $color8menuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_sus1
    {set $sld1 TRUE}
    {set $slds TRUE}
    {instruments.sld store}
    {instruments.sld set_showing TRUE}
    {$this set_focus instruments.sld})
   (os_sus2
    {set $sld2 TRUE}
    {set $slds TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_sus3
    {set $sld3 TRUE}
    {set $slds TRUE}
    {crowd.sld store}
    {crowd.sld set_showing TRUE}
    {$this set_focus crowd.sld})
   (os_sus4
    {set $sld4 TRUE}
    {set $slds TRUE}
    {sfx.sld store}
    {sfx.sld set_showing TRUE}
    {$this set_focus sfx.sld})
   (os_sus5
    {set $sld5 TRUE}
    {set $slds TRUE}
    {voice_chat.sld store}
    {voice_chat.sld set_showing TRUE}
    {$this set_focus voice_chat.sld})})
 (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld"
               "sfx.sld"
               "voice_chat.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $slds
               {do {$this show_state kState_RB3ESusMsg} {$this set_focus confirm_action.lst}}
               {$this set_focus options_audio.lst}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
   {set $sussliders FALSE})
 (on_cancel
  {$this show_state kState_RB3EColorSelector}))
(kState_RB3ESusMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
            {if_else $sld1 {do
               {if_else {== {int $sus1_color} 0} os_susmsg1
               {if_else {== {int $sus1_color} 1} os_susmsg2
               {if_else {== {int $sus1_color} 2} os_susmsg3
               {if_else {== {int $sus1_color} 3} os_susmsg4
               os_susmsg5}}}}}
            {if_else $sld2 {do
               {if_else {== {int $sus2_color} 0} os_susmsg1
               {if_else {== {int $sus2_color} 1} os_susmsg2
               {if_else {== {int $sus2_color} 2} os_susmsg3
               {if_else {== {int $sus2_color} 3} os_susmsg4
               os_susmsg5}}}}}
            {if_else $sld3 {do
               {if_else {== {int $sus3_color} 0} os_susmsg1
               {if_else {== {int $sus3_color} 1} os_susmsg2
               {if_else {== {int $sus3_color} 2} os_susmsg3
               {if_else {== {int $sus3_color} 3} os_susmsg4
               os_susmsg5}}}}}
            {if_else $sld4 {do
               {if_else {== {int $sus4_color} 0} os_susmsg1
               {if_else {== {int $sus4_color} 1} os_susmsg2
               {if_else {== {int $sus4_color} 2} os_susmsg3
               {if_else {== {int $sus4_color} 3} os_susmsg4
               os_susmsg5}}}}}
            {do
               {if_else {== {int $sus5_color} 0} os_susmsg1
               {if_else {== {int $sus5_color} 1} os_susmsg2
               {if_else {== {int $sus5_color} 2} os_susmsg3
               {if_else {== {int $sus5_color} 3} os_susmsg4
               os_susmsg5}}}}}}}}})})
   (SELECT_MSG
      {set $sld1 FALSE}
      {set $sld2 FALSE}
      {set $sld3 FALSE}
      {set $sld4 FALSE}
      {set $sld5 FALSE}
      {set $slds FALSE}
      {$this show_state kState_RB3ESusColorSelector}))
(kState_RB3ESettings
 (view options)
 (enter
 {options.lst set_selected $rb3esettingsval}
 {online_options.lst set circular 0}
;  {set $rb3eslider TRUE}
;  {instruments.sld set_num_steps 60} ;number of steps for venue fps slider
;  {bg_music.sld set_num_steps 41} ;number of steps for note speed slider
;  {crowd.sld set_num_steps 31} ;number of steps for song speed slider
;  {instruments.sld set_current {int {- $emulatefps 1}}} ;set FPS slider based on current value
;  {bg_music.sld set_current {int {+ 0.5 {/ {+ {- $trackspeed 1} 0.5} 0.05}}}} ;set note speed slider based on current value
;  {crowd.sld set_current {int {+ 0.5 {/ {- $speedmod 1} 0.05}}}} ;set song speed slider based on current value
;  {trackspeed_msg set_token_fmt {sprintf {localize trackspeed_msg} {int {+ 0.5 {* $trackspeed 100}}}}} ;set note speed msg (or not, thanks rb3)
;  {speed_msg.lbl set_token_fmt {sprintf {localize speed_msg} {int {+ 0.5 {* $speedmod 100}}}}} ;set song speed msg (or not, thanks rb3)
;  {fps_msg set_token_fmt {sprintf {localize fps_msg} {int $emulatefps}}} ;set venue fps msg (or not, thanks rb3)
  {if_else {== {{$this get_user} get_controller_type} kControllerVocals}
  {options.lst
   set_data
   (os_writesettings
    os_spds
;    os_venuefps
;    os_trkspd
;    os_sngspd
    os_venuesel
    os_thm
;    os_fretboard
;    os_spotlight
;    os_emissive
;	os_keyboard
;    os_gems
;    os_smashers
;    #ifdef ANIMATION_ENABLED
;    os_animatedgem
;    os_animatedsmasher
;    os_animatedhighway
;    #endif
;    os_setcol
;    os_scrsvr
    os_cam
;    os_fx
      )}
  {if_else {== {{$this get_user} get_controller_type} kControllerRealGuitar}
  {options.lst
   set_data
   (os_writesettings
    os_spds
;    os_venuefps
;    os_trkspd
;    os_sngspd
    os_venuesel
    os_thm
;    os_fretboard
;    os_spotlight
;    os_emissive
;	os_keyboard
;    os_gems
;    os_smashers
;    #ifdef ANIMATION_ENABLED
;    os_animatedgem
;    os_animatedsmasher
;    os_animatedhighway
;    #endif
;    os_scrsvr
    os_cam
;    os_fx
      )}
  {options.lst
   set_data
   (os_writesettings
    os_spds
;    os_venuefps
;    os_trkspd
;    os_sngspd
    os_venuesel
    os_thm
;    os_fretboard
;    os_spotlight
;    os_emissive
;	os_keyboard
;    os_gems
;    os_smashers
;    #ifdef ANIMATION_ENABLED
;    os_animatedgem
;    os_animatedsmasher
;    os_animatedhighway
;    #endif
;    os_setcol
;    os_scrsvr
    os_cam
;    os_fx
	)}}})
 (SELECT_MSG
 {set $rb3esettingsval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_writesettings
         {do INIT_DTA_WRITER {$this show_state kState_SettingsSave}}
   )
   (os_spds
      {$this show_state kState_RB3ESpeedMenu})
   (os_thm
      {$this show_state kState_RB3EAppearanceMenu})
;   (os_venuefps
;      {set $fpsslider TRUE}
;      {instruments.sld store}
;      {instruments.sld set_showing TRUE}
;      {$this set_focus instruments.sld})
;   (os_trkspd
;    {set $trackspeedslider TRUE}
;    {bg_music.sld store}
;    {bg_music.sld set_showing TRUE}
;    {$this set_focus bg_music.sld})
;   (os_sngspd
;      {set $songspeedslider TRUE}
;      {crowd.sld store}
;      {crowd.sld set_showing TRUE}
;      {$this set_focus crowd.sld})
   (os_venuesel
    {$this show_state kState_RB3EVenueSelector})
;   (os_fretboard
;    {$this show_state kState_RB3EFretboardSelector})
;   (os_spotlight
;    {$this show_state kState_RB3ESpotlightSelector})
;   (os_emissive
;    {$this show_state kState_RB3EEmissiveSelector})
;   (os_keyboard
;    {$this show_state kState_RB3EKeyboardSelector})
;   (os_gems
;    {$this show_state kState_RB3EGemSelector})
;   (os_smashers
;    {$this show_state kState_RB3ESmasherSelector})
;   (os_animatedgem
;    {$this show_state kState_RB3EAnimatedGemSelector})
;   (os_animatedsmasher
;    {$this show_state kState_RB3EAnimatedSmasherSelector})
;   (os_animatedhighway
;    {$this show_state kState_RB3EAnimatedHighwaySelector})
;   (os_setcol
;    {do {set $rb3eslider FALSE} {if_else {== {{$this get_user} get_controller_type} kControllerDrum}
;    {$this show_state kState_RB3EDrumColorSelector} {if_else {== {{$this get_user} get_controller_type} kControllerKeys}
;    {$this show_state kState_RB3EKeysColorWarning}
;    {$this show_state kState_RB3EColorSelector}}}})
;   (os_scrsvr
;    {$this show_state kState_RB3EScreensaver})
   (os_cam
    {$this show_state kState_RB3ECameraMenu})
   (os_fx
    {$this show_state kState_RB3EFXMenu})})
	(on_cancel
      {$this show_game_options}))
(kState_RB3ESpeedMenu
   (view online_options)
   (on_cancel
      {options.lst set_selected 1}
      {$this show_state kState_RB3ESettings})
   (enter
   {set $rb3eslider TRUE}
   {online_options.lst set_selected $speedmenuval}
   {instruments.sld set_num_steps 60} ;number of steps for venue fps slider
   {bg_music.sld set_num_steps 41} ;number of steps for note speed slider
   {crowd.sld set_num_steps 31} ;number of steps for song speed slider
   {instruments.sld set_current {int {- $emulatefps 1}}} ;set FPS slider based on current value
   {bg_music.sld set_current {int {+ 0.5 {/ {+ {- $trackspeed 1} 0.5} 0.05}}}} ;set note speed slider based on current value
   {crowd.sld set_current {int {+ 0.5 {/ {- $speedmod 1} 0.05}}}} ;set song speed slider based on current value
   {trackspeed_msg set_token_fmt {sprintf {localize trackspeed_msg} {int {+ 0.5 {* $trackspeed 100}}}}} ;set note speed msg (or not, thanks rb3)
   {speed_msg.lbl set_token_fmt {sprintf {localize speed_msg} {int {+ 0.5 {* $speedmod 100}}}}} ;set song speed msg (or not, thanks rb3)
   {fps_msg set_token_fmt {sprintf {localize fps_msg} {int $emulatefps}}} ;set venue fps msg (or not, thanks rb3)
   {online_options.lst set_data 
   (
      os_venuefps
      os_trkspd
      os_sngspd
      os_faster
   )})
  (update_view
      {handle
         ($this
            update_slider
            instruments.sld
            "")}
      {handle
         ($this
            update_slider
            bg_music.sld
            "")}
      {handle
         ($this
            update_slider
            crowd.sld
            "")}
      {handle
         ($this
            update_slider
            sfx.sld
            "")}
      {handle
         ($this
            update_slider
            voice_chat.sld
            "")})
   (SELECT_MSG
   {set $speedmenuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_venuefps
      {set $fpsslider TRUE}
      {instruments.sld store}
      {instruments.sld set_showing TRUE}
      {$this set_focus instruments.sld})
   (os_trkspd
    {set $trackspeedslider TRUE}
    {bg_music.sld store}
    {bg_music.sld set_showing TRUE}
    {$this set_focus bg_music.sld})
   (os_sngspd
      {if_else {$this in_game}
      {$this show_state kState_RB3ESpeedDenyMsg}
      {do
      {set $songspeedslider TRUE}
      {crowd.sld store}
      {crowd.sld set_showing TRUE}
      {$this set_focus crowd.sld}
      }
      })
   (os_faster
      {$this show_state kState_RB3EFasterMode})
   })
(BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $fpsslider
                  {do {$this show_state kState_VenueFPSSliderMsg} {$this set_focus confirm_action.lst}}
               {if_else $songspeedslider
                  {do {$this show_state kState_SongSpeedSliderMsg} {$this set_focus confirm_action.lst}}
               {if_else $trackspeedslider
                  {do {$this show_state kState_TrackSpeedSliderMsg} {$this set_focus confirm_action.lst}}
                  {$this set_focus options_audio.lst}}}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
  {set $rb3eslider FALSE})
 (on_cancel
  {$this show_game_options}))
#define FASTER_DATA
(
   {if_else {modifier_mgr is_modifier_active mod_fastermode} os_disable os_enable}
   os_sngspdcap
)
(kState_RB3EFasterMode
   (view options_extras)
   (on_cancel
      {$this show_state kState_RB3ESpeedMenu})
   (lst_reset
      {options_extras.lst set_data (FASTER_DATA)}
      {if $fastermenuval
         {options_extras.lst set_selected $fastermenuval}
      }
   )
   (enter
   {$this lst_reset}
   {set $rb3eslider_cap TRUE}
   {options_extras.lst set_selected $fastermenuval}
   {bg_music.sld set_num_steps 31} ;number of steps for song speed slider
   {bg_music.sld set_current {int {+ 0.5 {/ {- $speedmod_cap 1} 0.05}}}} ;set song speed slider based on current value
   {speed_msg.lbl set_token_fmt {sprintf {localize speedcap_msg} {int {+ 0.5 {* $speedmod_cap 100}}}}} ;set song speed msg (or not, thanks rb3)
   {options_extras.lst set_data 
   (
      FASTER_DATA
   )})
  (update_view
      {handle
         ($this
            update_slider
            instruments.sld
            "")}
      {handle
         ($this
            update_slider
            bg_music.sld
            "")}
      {handle
         ($this
            update_slider
            crowd.sld
            "")}
      {handle
         ($this
            update_slider
            sfx.sld
            "")}
      {handle
         ($this
            update_slider
            voice_chat.sld
            "")})
   (SELECT_MSG
   {set $fastermenuval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_sngspdcap
      {set $songspeedcapslider TRUE}
      {bg_music.sld store}
      {bg_music.sld set_showing TRUE}
      {$this set_focus bg_music.sld})
   (os_enable
      {unless {modifier_mgr is_modifier_active mod_fastermode}
         {modifier_mgr toggle_modifier_enabled mod_fastermode}
         {options_extras.lst set_data (FASTER_DATA)}
      {if $fastermenuval
         {options_extras.lst set_selected $fastermenuval}
      }
      }
   )
   (os_disable
      {if {modifier_mgr is_modifier_active mod_fastermode}
         {modifier_mgr toggle_modifier_enabled mod_fastermode}
      }
      {options_extras.lst set_data (FASTER_DATA)}
      {if $fastermenuval
         {options_extras.lst set_selected $fastermenuval}
      }
      )
   }
   {$this lst_reset}
   )
   (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
               {if_else $fpsslider
                  {do {$this show_state kState_VenueFPSSliderMsg} {$this set_focus confirm_action.lst}}
               {if_else $songspeedcapslider
                  {do {$this show_state kState_SongSpeedCapSliderMsg} {$this set_focus confirm_action.lst}}
               {if_else $trackspeedslider
                  {do {$this show_state kState_TrackSpeedSliderMsg} {$this set_focus confirm_action.lst}}
                  {$this set_focus options_audio.lst}}}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
 (exit
  {set $rb3eslider_cap FALSE})
 (on_cancel
  {$this show_game_options}))
(kState_VenueFPSSliderMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message {sprintf {localize os_fps} {int $emulatefps}})})
   (SELECT_MSG
      {set $fpsslider FALSE}
      {$this show_state kState_RB3ESpeedMenu}))
(kState_RB3ESpeedDenyMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message os_speed_deny)})
   (SELECT_MSG
      {$this show_state kState_RB3ESpeedMenu}))
(kState_RB3EReloadDenyMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message os_reload_deny)})
   (SELECT_MSG
      {$this show_state kState_RB3ECameraMenu}))
(kState_RB3EThmResetMsg
   (view confirm_action)
   (enter
      {confirm_action.lst set_selected 1}
      {handle
         ($this set_confirm_actions os_resetmsg (overshell_continue overshell_cancel))})
   (SELECT_MSG
      {switch {$component selected_sym}
      (overshell_continue
         {set $emissivecustomtexture FALSE}
         {set $emissive none}
         {set $emissivegtrcustomtexture FALSE}
         {set $emissivegtr none}
         {set $emissivebasscustomtexture FALSE}
         {set $emissivebass none}
         {set $emissivedrumcustomtexture FALSE}
         {set $emissivedrum none}
         {set $emissivekeyscustomtexture FALSE}
         {set $emissivekeys none}
         {set $spotlightcustomtexture FALSE}
         {set $spotlight none}
         {set $spotlightgtrcustomtexture FALSE}
         {set $spotlightgtr none}
         {set $spotlightbasscustomtexture FALSE}
         {set $spotlightbass none}
         {set $spotlightdrumcustomtexture FALSE}
         {set $spotlightdrum none}
         {set $spotlightkeyscustomtexture FALSE}
         {set $spotlightkeys none}
         {set $highwaycustomtexture FALSE}
         {set $highway none}
         {set $highwaygtrcustomtexture FALSE}
         {set $highwaygtr none}
         {set $highwaybasscustomtexture FALSE}
         {set $highwaybass none}
         {set $highwaydrumcustomtexture FALSE}
         {set $highwaydrum none}
         {set $highwaykeyscustomtexture FALSE}
         {set $highwaykeys none}
         {set $crowdmetercustomtexture FALSE}
         {set $crowdmeter none}
         {set $multiringcustomtexture TRUE}
         {set $multiring rb3}
         {set $odbarcustomtexture FALSE}
         {set $odbar none}
         {set $railscustomtexture FALSE}
         {set $rails none}
         {set $scorecustomtexture FALSE}
         {set $scoretex none}
         {set $flamescustomtexture FALSE}
         {set $flames none}
         {set $smashercustomtexture FALSE}
         {set $smasher none}
         {set $gemcustomtexture FALSE}
         {set $gem none}
         {set $voxarrowcustomtexture FALSE}
         {set $voxarrow none}
         {set $voxhwcustomtexture FALSE}
         {set $voxhw none}
         {set $keyboardcustomtexture FALSE}
         {set $keyboard none}
         {if {modifier_mgr is_modifier_active mod_rb2sustain}
            {modifier_mgr toggle_modifier_enabled mod_rb2sustain}}
         {if {modifier_mgr is_modifier_active mod_rb4sustain}
            {modifier_mgr toggle_modifier_enabled mod_rb4sustain}}
         {$this show_state kState_RB3EThemeMenu})
      (overshell_cancel
         {$this show_state kState_RB3EThemeMenu})})
      (on_cancel
      {$this show_state kState_RB3EThemeMenu}))
(kState_SongSpeedSliderMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message {sprintf {localize os_speed} {int {+ 0.5 {* $speedmod 100}}}})})
   (SELECT_MSG
      {set $songspeedslider FALSE}
      {$this show_state kState_RB3ESpeedMenu}))
(kState_SongSpeedCapSliderMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message {sprintf {localize os_speedcap} {int {+ 0.5 {* $speedmod_cap 100}}}})})
   (SELECT_MSG
      {set $songspeedcapslider FALSE}
      {$this show_state kState_RB3EFasterMode}))
(kState_TrackSpeedSliderMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message {sprintf {localize os_tspeed} {int {+ 0.5 {* $trackspeed 100}}}})})
   (SELECT_MSG
      {set $trackspeedslider FALSE}
      {$this show_state kState_RB3ESpeedMenu}))
(kState_RB3EKeysColorWarning
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message os_kColorWarn)})
   (SELECT_MSG
      {$this show_state kState_RB3EColorSelector}))
(kState_RB3EAppearanceMenu
   (view options_audio)
   (enter
   {online_options.lst set circular 0}
   {options_audio.lst set_selected $rb3eappearanceval}
   {options_audio.lst set_data 
   (
      os_audiomenu
      os_theme
      os_osthm
      os_mtvpos
      os_angle
      os_setcol
   )})
   (SELECT_MSG
   {set $rb3eappearanceval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_audiomenu
      {$this show_state kState_RB3EAudioMenu})
   (os_theme
      {$this show_state kState_RB3EThemeMenu})
   (os_osthm
      {$this show_state kState_RB3EOvershellThemes})
   (os_mtvpos
      {$this show_state kState_RB3EMTVSetup})
   (os_flames
      {$this show_state kState_RB3ETrackThemes})
   (os_setcol
     {do {set $rb3eslider FALSE} {if_else {== {{$this get_user} get_controller_type} kControllerDrum}
     {$this show_state kState_RB3EDrumColorSelector} {if_else {== {{$this get_user} get_controller_type} kControllerKeys}
     {$this show_state kState_RB3EKeysColorWarning}
     {$this show_state kState_RB3EColorSelector}}}})
   (os_angle
     {$this show_state kState_RB3EAngleMenu}
   )
   })
   (on_cancel
      {options.lst set_selected 3}
      {$this show_state kState_RB3ESettings}))
(kState_RB3EThemeMenu
   (view options)
   (enter
   {options.lst set_selected $rb3ethemeval}
   {options.lst set_data 
   (
      os_thmreset
      os_rb3thm
      os_rb4thm
      os_rb2thm
      os_settex
   )})
   (SELECT_MSG
   {set $rb3ethemeval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_thmreset
      {$this show_state kState_RB3EThmResetMsg}
   )
   (os_rb3thm
      {set $emissivecustomtexture FALSE}
      {set $emissive none}
      {set $emissivegtrcustomtexture TRUE}
      {set $emissivegtr _guitar_track_emmissive}
      {set $emissivebasscustomtexture TRUE}
      {set $emissivebass _bass_track_emissive}
      {set $emissivedrumcustomtexture TRUE}
      {set $emissivedrum _drums_track_emissive}
      {set $emissivekeyscustomtexture TRUE}
      {set $emissivekeys _keys_track_emissive}
      {set $spotlightcustomtexture FALSE}
      {set $spotlight none}
      {set $spotlightgtrcustomtexture TRUE}
      {set $spotlightgtr _spotlight_guitar_track}
      {set $spotlightbasscustomtexture TRUE}
      {set $spotlightbass _spotlight_bass_track}
      {set $spotlightdrumcustomtexture TRUE}
      {set $spotlightdrum _spotlight_drums_track}
      {set $spotlightkeyscustomtexture TRUE}
      {set $spotlightkeys _spotlight_prokeys_track}
      {set $highwaycustomtexture FALSE}
      {set $highway none}
      {set $highwaygtrcustomtexture TRUE}
      {set $highwaygtr _rb3_guitar}
      {set $highwaybasscustomtexture TRUE}
      {set $highwaybass _rb3_bass}
      {set $highwaydrumcustomtexture TRUE}
      {set $highwaydrum _rb3_drum}
      {set $highwaykeyscustomtexture TRUE}
      {set $highwaykeys _rb3_keys}
      {set $crowdmetercustomtexture TRUE}
      {set $crowdmeter rb3}
      {set $multiringcustomtexture TRUE}
      {set $multiring rb3}
      {set $odbarcustomtexture TRUE}
      {set $odbar rb3}
      {set $railscustomtexture TRUE}
      {set $rails rb3}
      {set $scorecustomtexture TRUE}
      {set $scoretex rb3}
      {set $flamescustomtexture TRUE}
      {set $flames rb3}
      {set $smashercustomtexture TRUE}
      {set $smasher rb3}
      {set $gemcustomtexture TRUE}
      {set $gem rb3}
      {set $voxarrowcustomtexture TRUE}
      {set $voxarrow rb3}
      {set $voxhwcustomtexture TRUE}
      {set $voxhw rb3}
   ;   {set $keyboardcustomtexture TRUE}
   ;   {set $keyboard none}
      {if {modifier_mgr is_modifier_active mod_rb2sustain}
         {modifier_mgr toggle_modifier_enabled mod_rb2sustain}}
      {if {modifier_mgr is_modifier_active mod_rb4sustain}
         {modifier_mgr toggle_modifier_enabled mod_rb4sustain}}
   )
   (os_rb4thm
      {set $emissivecustomtexture TRUE}
      {set $emissive rb4_guitar}
      {set $emissivegtrcustomtexture FALSE}
      {set $emissivegtr none}
      {set $emissivebasscustomtexture FALSE}
      {set $emissivebass none}
      {set $emissivedrumcustomtexture FALSE}
      {set $emissivedrum none}
      {set $emissivekeyscustomtexture FALSE}
      {set $emissivekeys none}
      {set $spotlightcustomtexture TRUE}
      {set $spotlight spotlight_rb4_rivals}
      {set $spotlightgtrcustomtexture FALSE}
      {set $spotlightgtr none}
      {set $spotlightbasscustomtexture FALSE}
      {set $spotlightbass none}
      {set $spotlightdrumcustomtexture FALSE}
      {set $spotlightdrum none}
      {set $spotlightkeyscustomtexture FALSE}
      {set $spotlightkeys none}
      {set $highwaycustomtexture TRUE}
      {set $highway rb4_black_rivals}
      {set $highwaygtrcustomtexture FALSE}
      {set $highwaygtr none}
      {set $highwaybasscustomtexture FALSE}
      {set $highwaybass none}
      {set $highwaydrumcustomtexture FALSE}
      {set $highwaydrum none}
      {set $highwaykeyscustomtexture FALSE}
      {set $highwaykeys none}
      {set $crowdmetercustomtexture TRUE}
      {set $crowdmeter rb4}
      {set $multiringcustomtexture TRUE}
      {set $multiring rb4}
      {set $odbarcustomtexture TRUE}
      {set $odbar rb4}
      {set $railscustomtexture TRUE}
      {set $rails rb4}
      {set $scorecustomtexture TRUE}
      {set $scoretex rb4}
      {set $flamescustomtexture TRUE}
      {set $flames rb4}
      {set $smashercustomtexture TRUE}
      {set $smasher rb4}
      {set $gemcustomtexture TRUE}
      {set $gem rb4}
      {set $voxarrowcustomtexture TRUE}
      {set $voxarrow rb4}
      {set $voxhwcustomtexture TRUE}
      {set $voxhw rb4}
   ;   {set $keyboardcustomtexture TRUE}
   ;   {set $keyboard none}
      {if {modifier_mgr is_modifier_active mod_rb2sustain}
         {modifier_mgr toggle_modifier_enabled mod_rb2sustain}}
      {unless {modifier_mgr is_modifier_active mod_rb4sustain}
         {modifier_mgr toggle_modifier_enabled mod_rb4sustain}}
   )
   (os_rb2thm
      {set $emissivecustomtexture FALSE}
      {set $emissive none}
      {set $emissivegtrcustomtexture TRUE}
      {set $emissivegtr rb2_guitar_yellow}
      {set $emissivebasscustomtexture TRUE}
      {set $emissivebass rb2_bass_yellow}
      {set $emissivedrumcustomtexture TRUE}
      {set $emissivedrum rb2_drums_yellow}
      {set $emissivekeyscustomtexture TRUE}
      {set $emissivekeys none}
      {set $spotlightcustomtexture TRUE}
      {set $spotlight rb2_bass_superstreak}
      {set $spotlightgtrcustomtexture FALSE}
      {set $spotlightgtr none}
      {set $spotlightbasscustomtexture FALSE}
      {set $spotlightbass none}
      {set $spotlightdrumcustomtexture FALSE}
      {set $spotlightdrum none}
      {set $spotlightkeyscustomtexture FALSE}
      {set $spotlightkeys none}
      {set $highwaycustomtexture TRUE}
      {set $highway _black_highway}
      {set $highwaygtrcustomtexture FALSE}
      {set $highwaygtr none}
      {set $highwaybasscustomtexture FALSE}
      {set $highwaybass none}
      {set $highwaydrumcustomtexture FALSE}
      {set $highwaydrum none}
      {set $highwaykeyscustomtexture FALSE}
      {set $highwaykeys none}
      {set $crowdmetercustomtexture TRUE}
      {set $crowdmeter rb2}
      {set $multiringcustomtexture TRUE}
      {set $multiring rb2}
      {set $odbarcustomtexture TRUE}
      {set $odbar rb2}
      {set $railscustomtexture TRUE}
      {set $rails rb3}
      {set $scorecustomtexture TRUE}
      {set $scoretex rb2}
      {set $flamescustomtexture TRUE}
      {set $flames rb2}
      {set $smashercustomtexture TRUE}
      {set $smasher rb2}
      {set $gemcustomtexture TRUE}
      {set $gem rb3}
      {set $voxarrowcustomtexture TRUE}
      {set $voxarrow gdrb}
      {set $voxhwcustomtexture TRUE}
      {set $voxhw rb3}
   ;   {set $keyboardcustomtexture TRUE}
   ;   {set $keyboard none}
      {if {modifier_mgr is_modifier_active mod_rb4sustain}
         {modifier_mgr toggle_modifier_enabled mod_rb4sustain}}
      {unless {modifier_mgr is_modifier_active mod_rb2sustain}
         {modifier_mgr toggle_modifier_enabled mod_rb2sustain}}
   )
   (os_settex
     {$this show_state kState_RB3TextureMenu}
   )
   })
   (on_cancel
      {options.lst set_selected 3}
      {$this show_state kState_RB3EAppearanceMenu}))
(kState_RB3TextureMenu
   (view options_audio)
   (enter
   {options_extras.lst set_selected $rb3texval}
   {options_audio.lst set_data 
   (
      os_fretboard
      os_spotlight
      os_emissive
      os_gems
      os_smashers
      os_flames
      os_score
      os_rails
      os_odbar
      os_multiring
      os_crowdmeter
      os_keyboard
      os_voxhw
      os_voxarrow
	  #ifdef ANIMATION_ENABLED
      os_animation
      #endif
   )})
   (SELECT_MSG
   {set $rb3texval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_fretboard
     {$this show_state kState_RB3EInstHW})
   (os_spotlight
     {$this show_state kState_RB3EInstStrk})
   (os_emissive
     {$this show_state kState_RB3EInstOD})
   (os_gems
     {$this show_state kState_RB3EGemSelector})
   (os_smashers
     {$this show_state kState_RB3ESmasherSelector})
   (os_flames
     {$this show_state kState_RB3EFlamesSelector})
   (os_score
     {$this show_state kState_RB3EScoreSelector})
   (os_rails
     {$this show_state kState_RB3ERailsSelector})
   (os_odbar
     {$this show_state kState_RB3EODbarSelector})
   (os_multiring
     {$this show_state kState_RB3EMultiRingSelector})
   (os_crowdmeter
     {$this show_state kState_RB3ECrowdMeterSelector})
   (os_keyboard
     {$this show_state kState_RB3EKeyboardSelector})
   (os_voxhw
     {$this show_state kState_RB3EVoxHWSelector})
   (os_voxarrow
     {$this show_state kState_RB3EVoxArrowSelector})
   (os_animation
     {$this show_state kState_RB3AnimationMenu})
   })
   (on_cancel
      {options.lst set_selected 3}
      {$this show_state kState_RB3EThemeMenu}))
(kState_RB3EAudioMenu
   (view options_end_game)
   (enter
   {options_end_game.lst set_selected $rb3audval}
   {options_end_game.lst set_data
      (os_fcaudio os_cyclefx)})
   (SELECT_MSG
      {set $rb3audval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_cyclefx
      {cycle_guitar_fx})
   (os_fcaudio
      {$this show_state kState_RB3EFullComboSFXSelector})
   })
   (on_cancel
      {$this show_state kState_RB3EAppearanceMenu}))
(kState_RB3EAngleMenu
   (view options_extras)
   (enter
      {set $anglesld TRUE}
      {options_extras.lst set_selected $rb3eangleval}
      {options_extras.lst set_data (os_noang os_angmult)}
      {bg_music.sld set_num_steps 16} ;number of steps for track angle slider
      {bg_music.sld set_current {int {/ {- $multiangle 1} {/ 3 15}}}}
   )
   (update_view
      {handle
         ($this
            update_slider
            bg_music.sld
            "")})
   (SELECT_MSG
   {set $rb3eangleval {$component selected_sym}}
   {switch
   {$component selected_sym}
   (os_noang
      {set $forcemultiangle FALSE}
      {set $multiangle 1}
   )
   (os_angmult
      {set $forcemultiangle TRUE}
      {bg_music.sld store}
      {bg_music.sld set_showing TRUE}
      {$this set_focus bg_music.sld}
   )
   (os_p1
      {set $forcemultiangle TRUE}
      {set $multiangle 1}
   )
   (os_p2
      {set $forcemultiangle TRUE}
      {set $multiangle 2}
   )
   (os_p3
      {set $forcemultiangle TRUE}
      {set $multiangle 3}
   )
   (os_p4
      {set $forcemultiangle TRUE}
      {set $multiangle 4}
   )})
   (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
                  {do {$this show_state kState_TrackAngleSliderMsg} {$this set_focus confirm_action.lst}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
   (on_cancel
      {set $anglesld FALSE}
      {$this show_state kState_RB3EAppearanceMenu}))
(kState_TrackAngleSliderMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
         {switch $multiangle 
            (1 {sprintf {localize os_angleset1} {int {+ {* -16.66 $multiangle} 116.66}}})
            (2 {sprintf {localize os_angleset2} {int {+ {* -16.66 $multiangle} 116.66}}})
            (3 {sprintf {localize os_angleset3} {int {+ {* -16.66 $multiangle} 116.66}}})
            (4 {sprintf {localize os_angleset4} {int {+ {* -16.66 $multiangle} 116.66}}})
            {sprintf {localize os_angleset} {int {+ {* -16.66 $multiangle} 116.66}}}
         }
         )
      }
   )
   (SELECT_MSG
      {$this show_state kState_RB3EAngleMenu}))
(kState_RB3AnimationMenu
   (view options_extras)
   (enter
   {options_extras.lst set_data 
   (
      os_animatedgem
      os_animatedsmasher
      os_animatedhighway
   )})
   (SELECT_MSG
  {switch
   {$component selected_sym}
   (os_animatedgem
     {$this show_state kState_RB3EAnimatedGemSelector})
   (os_animatedsmasher
     {$this show_state kState_RB3EAnimatedSmasherSelector})
   (os_animatedhighway
     {$this show_state kState_RB3EAnimatedHighwaySelector})
   })
   (on_cancel
      {$this show_state kState_RB3TextureMenu}))
(kState_RB3ECameraMenu
   (view online_options)
   (enter
   {online_options.lst set_selected $rb3camval}
   {options_audio.lst set circular 0}
   {online_options.lst set_data 
   (
      os_menubg
      overshell_freecam
      overshell_postproc
      os_reload
      os_scrsvr
   )})
   (SELECT_MSG
      {set $rb3camval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_menubg
      {$this show_state kState_RB3EMenuBG})
   (overshell_freecam
      {if {&& {$this in_song} {modifier_mgr is_modifier_active mod_auto_play}} {cycle_free_camera}})
   (overshell_postproc
      {rnd toggle_all_postprocs})
   (os_reload
      {if_else {$this in_game}
      {$this show_state kState_RB3EReloadDenyMsg}
      {ui goto_screen meta_loading_main_screen}})
   (os_scrsvr
      {$this show_state kState_RB3EScreensaver})
   })
   (on_cancel
      {options.lst set_selected 4}
      {$this show_state kState_RB3ESettings}))
(kState_RB3EMenuBG
   (view options)
   (enter
   {options.lst set_selected $rb3bgval}
   {options.lst set_data
      (os_bg8 os_bg3 os_bg4 os_bg5 os_bg2)})
   (SELECT_MSG
      {set $rb3bgval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_bg8
      {set $svnumber 8}
      {$this show_state kState_RB3EMenuBGWarn})
   (os_bg3
      {set $svnumber 3}
      {$this show_state kState_RB3EMenuBGWarn})
   (os_bg2
      {set $svnumber 2}
      {$this show_state kState_RB3EMenuBGWarn})
   (os_bg4
      {set $svnumber 4}
      {$this show_state kState_RB3EMenuBGWarn})
   (os_bg5
      {set $svnumber 5}
      {$this show_state kState_RB3EMenuBGWarn})
   })
   (on_cancel
      {$this show_state kState_RB3ECameraMenu}))
(kState_RB3EMenuBGWarn
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message {sprintf {localize os_bgwarn}})})
   (SELECT_MSG
      {set $fpsslider FALSE}
      {$this show_state kState_RB3EMenuBG}))
(kState_RB3EFXMenu
   (view online_options)
   (enter
   {online_options.lst set_selected $rb3fxval}
   {online_options.lst set_data
      (os_cyclefx os_fx0 os_fx1 os_fx2 os_fx3 os_fx4 os_fx5)})
   (SELECT_MSG
      {set $rb3fxval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_cyclefx
      {cycle_guitar_fx})
   (os_fx0
      {cycle_guitar_fx}
      {set $test_guitar_fx 0})
   (os_fx1
      {cycle_guitar_fx}
      {set $test_guitar_fx 1})
   (os_fx2
      {cycle_guitar_fx}
      {set $test_guitar_fx 2})
   (os_fx3
      {cycle_guitar_fx}
      {set $test_guitar_fx 3})
   (os_fx4
      {cycle_guitar_fx}
      {set $test_guitar_fx 4})
   (os_fx5
      {cycle_guitar_fx}
      {set $test_guitar_fx 5})
   })
   (on_cancel
      {options.lst set_selected 5}
      {$this show_state kState_RB3ESettings}))
(kState_RB3EUIThemes
   (view options_end_game)
   (enter
   {options_end_game.lst set_selected 0}
   {options_end_game.lst set_data
      (mod_rb4ui mod_rb2ui)})
   (SELECT_MSG
  {switch
   {$component selected_sym}
   (mod_rb4ui
      {modifier_mgr toggle_modifier_enabled mod_rb4ui}
      {set $rb4uicustomtexture TRUE}
      {overshell update_all})
   (mod_rb2ui
      {modifier_mgr toggle_modifier_enabled mod_rb2ui}
      {set $rb2uicustomtexture TRUE}
      {overshell update_all})
   })
   (on_cancel
      {$this show_state kState_RB3EAppearanceMenu}))
(kState_RB3ETrackThemes
   (view options_extras)
   (enter
   {options_extras.lst set_selected 0}
   {options_extras.lst set_data
      (mod_noflames mod_noflares mod_nopart)})
   (SELECT_MSG
  {switch
   {$component selected_sym}
   (mod_noflames
      {modifier_mgr toggle_modifier_enabled mod_noflames}
      {set $rb2trkcustomtexture TRUE}
      {overshell update_all})
   (mod_noflares
      {modifier_mgr toggle_modifier_enabled mod_noflares}
      {set $rb2trkcustomtexture TRUE}
      {overshell update_all})
   (mod_nopart
      {modifier_mgr toggle_modifier_enabled mod_nopart}
      {set $rb2trkcustomtexture TRUE}
      {overshell update_all})
   (mod_flames
      {modifier_mgr toggle_modifier_enabled mod_flames}
      {set $rb2trkcustomtexture TRUE}
      {overshell update_all})
   })
   (on_cancel
      {$this show_state kState_RB3EAppearanceMenu}))
(kState_RB3EOvershellThemes
   (view options)
   (enter
   {options.lst set_selected 0}
   {options.lst set_data (mod_rb4os mod_ps3os mod_xboxos mod_wiios)})
   (SELECT_MSG
  {switch
   {$component selected_sym}
               (mod_rb4os
                  {modifier_mgr toggle_modifier_enabled mod_rb4os}
                  OVERSHELL_RB4OS
                  {overshell update_all})
               (mod_xboxos
                  {modifier_mgr toggle_modifier_enabled mod_xboxos}
                  {if {modifier_mgr is_modifier_active mod_ps3os}
                     {modifier_mgr toggle_modifier_enabled mod_ps3os}}
                  {if {modifier_mgr is_modifier_active mod_wiios}
                     {modifier_mgr toggle_modifier_enabled mod_wiios}}
                  {overshell exit}
                  {overshell enter})
               (mod_ps3os
                  {modifier_mgr toggle_modifier_enabled mod_ps3os}
                  {if {modifier_mgr is_modifier_active mod_xboxos}
                     {modifier_mgr toggle_modifier_enabled mod_xboxos}}
                  {if {modifier_mgr is_modifier_active mod_wiios}
                     {modifier_mgr toggle_modifier_enabled mod_wiios}}
                  {overshell exit}
                  {overshell enter})
               (mod_wiios
                  {modifier_mgr toggle_modifier_enabled mod_wiios}
                  {if {modifier_mgr is_modifier_active mod_ps3os}
                     {modifier_mgr toggle_modifier_enabled mod_ps3os}}
                  {if {modifier_mgr is_modifier_active mod_xboxos}
                     {modifier_mgr toggle_modifier_enabled mod_xboxos}}
                  {overshell exit}
                  {overshell enter})}
               {options.lst set_data (mod_rb4os mod_ps3os mod_xboxos mod_wiios)})
   (on_cancel
      {$this show_state kState_RB3EAppearanceMenu})
   (exit
   {options.lst set_selected 3}))
(kState_RB3EVenueSelector
 (view options_audio)
 (enter
       {do
         ($venue_array
            {array
               (VENUES VENUES_VIDEO)})
         {insert_elem $venue_array 0 none}
		 {insert_elem $venue_array 1 random}
         {options_audio.lst set_data $venue_array}
		 {options_audio.lst set circular 1}
         {options_audio.lst set_selected $rb3evenueval}
         {$this update_venue_selection}})
   (update_venue_selection
      {options_extras.lst
         set_selected
         {{set $force TRUE} {set $venue {options_audio.lst selected_sym}} {ui goto_screen meta_loading_main_screen}}})
   (SELECT_MSG
      {set $rb3evenueval {$component selected_sym}}
      {set $force TRUE} {set $venue {options_audio.lst selected_sym}} {ui goto_screen meta_loading_main_screen}
      {switch
         {$component selected_sym}
         (random
            {set $force FALSE} {set $venue VENUES} {ui goto_screen meta_loading_main_screen})
		 (none
            {set $force TRUE} {set $venue BLACK_VENUE} {ui goto_screen meta_loading_main_screen})}
      {$this show_state kState_RB3ESettings} {ui pop_screen})
  (exit
  {options_audio.lst set circular 0}
  {options_audio.lst set_selected 0})
 (on_cancel
  {options.lst set_selected 2}
  {$this show_state kState_RB3ESettings}))
(kState_SaveloadManagerNotIdle
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message options_autosave_toggle)})
   (SELECT_MSG
      {$this show_options_av_settings}))
(kState_SaveloadManagerNotMeta
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message options_autosave_not_meta)})
   (SELECT_MSG
      {$this show_options_av_settings}))
(kState_SaveloadManagerAutosaveConfirm
   (view confirm_action)
   (enter
      {handle
         ($this
            set_confirm_actions
            options_autosave_confirm
            (overshell_confirm_yes overshell_confirm_no))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {saveload_mgr disable_autosave $user}
            {$this show_options_av_settings})
         (overshell_confirm_no
            {$this show_options_av_settings})})
   (on_cancel
      {$this show_options_av_settings}))
(kState_Modifiers
   (view modifiers)
   (update_view
      {$this update_modifiers_list})
   (exit
      {unless
	  {'||'
         {$this in_game}
		 {modifier_mgr is_modifier_active mod_auto_play}}
         {saveload_mgr autosave}})
   (SELECT_MSG
      {do
         ($modifier
            {$component selected_sym})
         {switch
            $modifier
               (modifier_enter_entry_name
               {$this show_modifier_unlock})
               (mod_nolanes
                  {modifier_mgr toggle_modifier_enabled mod_nolanes}
                  {set $nolanes {! $nolanes}}
                  {overshell update_all})
               (mod_practiceoverdrive
                  {modifier_mgr toggle_modifier_enabled mod_practiceoverdrive}
                  {set $practiceoverdrive {! $practiceoverdrive}}
                  {overshell update_all})
               (mod_nobre
                  {modifier_mgr toggle_modifier_enabled mod_nobre}
                  {overshell update_all})
               (mod_fakebrutal
                  {modifier_mgr toggle_modifier_enabled mod_fakebrutal}
                  {set $fakebrutalmode {! $fakebrutalmode}}
                  {overshell update_all})
               (mod_animatedgems
                  {modifier_mgr toggle_modifier_enabled mod_animatedgems}
                  {set $animatedgems {! $animatedgems}}
                  {set $animatedgemscustomtexture TRUE}
                  {overshell update_all})
               (mod_animatedhighway
                  {modifier_mgr toggle_modifier_enabled mod_animatedhighway}
                  {set $animatedhighwayname rb4effect4_color1}
                  {set $animatedhighwaycustomtexture TRUE}
                  {set $animatedhighway {! $animatedhighway}}
                  {overshell update_all})
               (mod_videobg
                  {modifier_mgr toggle_modifier_enabled mod_videobg}
                  {set $videobg {! $videobg}}
                  {do {$this show_state kState_RB3EVideoMsg} {$this set_focus confirm_action.lst}}
                  {ui goto_screen meta_loading_main_screen})
               (mod_doublespeed
                  {modifier_mgr toggle_modifier_enabled mod_doublespeed}
                  {overshell update_all})
               (mod_auto_play
               {do {session disconnect}
               {session_mgr disconnect}}
               {unless {{$this get_session_mgr} is_online_enabled}
               {unless
                  {modifier_mgr is_modifier_active mod_auto_play}
                  {$this show_state kState_AutoPlayWarn}}
               {if
                  {modifier_mgr is_modifier_active mod_auto_play}
                  {do
                  {modifier_mgr toggle_modifier_enabled $modifier}
                  {overshell update_all}}}})
               (mod_auto_kick
               {do
               {session disconnect}
               {session_mgr disconnect}
               {modifier_mgr toggle_modifier_enabled $modifier}
               {overshell update_all}})
               (mod_chmode
               {unless
                  {modifier_mgr is_modifier_active mod_chmode}
                  {$this show_state kState_CHModeWarn}}
               {if
                  {modifier_mgr is_modifier_active mod_chmode}
                  {do
                  {modifier_mgr toggle_modifier_enabled $modifier}
                  {overshell update_all}}})
               ;(mod_rrdrums
               ;   {modifier_mgr toggle_modifier_enabled $modifier}
               ;   {set $author TRUE} {$this show_modifiers_drum_warning}
               ;   {saveload_mgr disable_autosave $user}
               ;   {if {$this in_song} {ui goto_screen meta_loading_main_screen}}
               ;   {overshell update_all})
               ;(mod_ghdrums
               ;   {modifier_mgr toggle_modifier_enabled $modifier}
               ;   {set $author TRUE} {$this show_modifiers_drum_warning}
               ;   {saveload_mgr disable_autosave $user}
               ;   {if {$this in_song} {ui goto_screen meta_loading_main_screen}}
               ;   {overshell update_all})
               (mod_whammyfx
                  {modifier_mgr toggle_modifier_enabled $modifier}
                  {set $whammyfx {! $whammyfx}}
                  {overshell update_all}) ;whammy fx modifier
				(mod_nomv
					{modifier_mgr toggle_modifier_enabled mod_nomv}
					{do {$this show_state kState_RB3ENoMusicVideos} {$this set_focus confirm_action.lst}}
					{ui goto_screen meta_loading_main_screen})
				(mod_blackmenu
					{modifier_mgr toggle_modifier_enabled mod_blackmenu}
					{ui goto_screen meta_loading_main_screen})
	           (mod_drum_surface_navigation
               {modifier_mgr toggle_modifier_enabled $modifier}
               {unless
                  {modifier_mgr is_modifier_active mod_drum_surface_navigation}
                  {$this show_modifiers_drum_warning}}
               {overshell update_all})
            {modifier_mgr toggle_modifier_enabled $modifier}
            {if
               {&&
                  {$this in_song}
                  {modifier_mgr is_modifier_delayed_effect $modifier}}
               {$this show_modifier_delayed_effect}}
            {overshell update_all}}})
   (on_cancel
      {$this show_game_options}))
(kState_AutoPlayWarn
   (view confirm_action)
   (enter
      {confirm_action.lst set_selected 1}
      {handle
         ($this set_confirm_actions autoplay_warning (overshell_continue overshell_cancel))})
   (SELECT_MSG
      {switch {$component selected_sym}
      (overshell_continue
      {modifier_mgr toggle_modifier_enabled mod_auto_play}
      {set $gotcha FALSE}
      {saveload_mgr disable_autosave $user}
      {overshell update_all}
		{ui goto_screen meta_loading_main_screen})}
      {$this show_modifiers})
   (on_cancel
      {$this show_modifiers}))
(kState_SettingsWarn
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_actions settings_warning (overshell_continue))})
   (SELECT_MSG
      {$this show_modifiers})
   (on_cancel
      {$this show_modifiers}))
(kState_SettingsSave
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_actions settings_save (overshell_continue))})
   (SELECT_MSG
      {$this show_state kState_RB3ESettings})
   (on_cancel
      {$this show_state kState_RB3ESettings}))
(kState_CHModeWarn
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_actions chmode_warning (overshell_continue overshell_cancel))})
   (SELECT_MSG
      {switch {$component selected_sym}
      (overshell_continue
      {modifier_mgr toggle_modifier_enabled mod_chmode}
      {set $gotcha FALSE}
      {saveload_mgr disable_autosave $user}
      {overshell update_all}
      {ui goto_screen meta_loading_main_screen})}
      {$this show_modifiers})
   (on_cancel
      {$this show_modifiers}))
(kState_ModifiersDrumWarning
   (view confirm_action)
   (enter
      {if_else $ingameset
            {handle
               ($this set_confirm_message ingame_warning)}
      {if_else $author
         {do {set $author FALSE}
            {handle
               ($this set_confirm_message author_warning)}}
      {if_else $autoplay
         {do {set $autoplay FALSE}
            {handle
               ($this set_confirm_message autoplay_warning)}}
      {if_else $breakneck
         {do {set $breakneck FALSE}
            {handle
               ($this set_confirm_message breakneck_warning)}}
      {handle
         ($this set_confirm_message disable_drum_surface_navigation_warning)}}}}})
   (SELECT_MSG
      {if_else $ingameset
      {do {set $ingameset FALSE} {$this show_state kState_RB3ESettings}}
      {$this show_modifiers}}))
(kState_ModifierUnlock
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message modifier_enter_msg)})
   (SELECT_MSG
      {$this show_modifiers}))
(kState_ModifierDelayedEffect
   (view confirm_action)
   (update_view
      {handle
         ($this set_confirm_message modifier_delayed_effect)})
   (SELECT_MSG
      {$this show_modifiers})
   (on_cancel
      {$this show_modifiers}))
(kState_AutoVocalsDenial
   (view confirm_action)
   (enter
      {cond
         ({overshell is_non_vocalist_in_vocals_slot}
            {handle
               ($this set_confirm_message overshell_auto_vocals_denial_non_vocalist)})
         ({$this in_game}
            {handle
               ($this set_confirm_message overshell_auto_vocals_denial_in_game)})
         ({&&
               {==
                  {user_mgr get_num_local_participants}
                  1}
               {==
                  {{$this get_user}
                     get_controller_type}
                  kControllerVocals}}
            {handle
               ($this set_confirm_message overshell_auto_vocals_denial_lone_vocalist)})
         {handle
            ($this set_confirm_message overshell_auto_vocals_denial_generic)}})
   (SELECT_MSG
      {$this show_game_options})
   (on_cancel
      {$this show_game_options}))
#define TOGGLE_LEFTY_FLIP_AND_STATIC_VOCALS
(switch
   {{$this get_user}
      get_controller_type}
   (kControllerVocals
      {$this toggle_vocal_style})
   (kControllerKeys TRUE)
   {$this toggle_lefty_flip})
(kState_ChoosePart
   (view
      {switch
         {{$this get_user}
            get_controller_type}
         (kControllerGuitar choose_part_guitar)
         (kControllerRealGuitar choose_part_real_guitar)
         (kControllerVocals choose_part_vocals)
         (kControllerKeys choose_part_keys)
         (kControllerDrum choose_part_drum)
         {fail
            "No choose part view for this controller type"}})
   (song_settings_flow TRUE)
   (part_unresolved TRUE)
   (shows_extended_mic_arrows TRUE)
   (update_remote_feedback
      ($focus_item)
      {choose_part.lst set_selected $focus_item})
   (enter
      {$this update_part_select_list}
   #ifndef RB3E
      {if {== {{$this get_user} get_controller_type} kControllerGuitar}
  {choose_part.lst
   set_data
   (overshell_guitar
    overshell_bass
    overshell_keys)}}
      {if {== {{$this get_user} get_controller_type} kControllerDrum}
  {choose_part.lst
   set_data
   (overshell_drums
    overshell_drums_pro)}}
      {if {== {{$this get_user} get_controller_type} kControllerVocals}
  {choose_part.lst
   set_data
   (overshell_vocal_solo
    overshell_vocal_harmony
    overshell_guitar
    overshell_bass
    overshell_keys
    overshell_drums)}}
    #endif
    )
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_guitar
            {$this select_part kTrackGuitar})
         (overshell_bass
            {$this select_part kTrackBass})
         (overshell_keys
            {$this select_part kTrackKeys})
         (overshell_real_guitar
            {$this select_part kTrackRealGuitar}
            {if
               {gamemode in_mode trainer}
               {gamemode set_mode pro_song_lessons_real_guitar}})
         (overshell_real_bass
            {$this select_part kTrackRealBass}
            {if
               {gamemode in_mode trainer}
               {gamemode set_mode pro_song_lessons_real_bass}})
         (overshell_real_keys
            {$this select_part kTrackRealKeys})
         (overshell_vocal_solo
            {$this select_vocal_part FALSE}
            {if
               {gamemode in_mode practice}
               {practice_panel set uses_harmony FALSE}})
         (overshell_vocal_harmony
            {$this select_vocal_part TRUE}
            {if
               {gamemode in_mode practice}
               {practice_panel set uses_harmony TRUE}})
         (overshell_drums
            {$this select_drum_part FALSE})
         (overshell_drums_pro
            {$this select_drum_part TRUE})})
   (SCROLL_MSG
      {$this update})
   (get_focus_is_harmony
      {if_else
         {$this focus_name}
         {if_else
            {==
               {{$this focus_name}
                  selected_sym}
               overshell_vocal_harmony}
            TRUE
            FALSE}
         FALSE})
   (get_focus_is_prodrums
      {if_else
         {$this focus_name}
         {if_else
            {==
               {{$this focus_name}
                  selected_sym}
               overshell_drums_pro}
            TRUE
            FALSE}
         FALSE})
   (get_focus_track_type
      {if_else
         {$this focus_name}
         {switch
            {{$this focus_name}
               selected_sym}
            (overshell_guitar kTrackGuitar)
            (overshell_bass kTrackBass)
            (overshell_keys kTrackKeys)
            (overshell_real_guitar kTrackRealGuitar)
            (overshell_real_bass kTrackRealBass)
            (overshell_real_keys kTrackRealKeys)
            (overshell_vocal_solo kTrackVocals)
            (overshell_vocal_harmony kTrackVocals)
            (overshell_drums kTrackDrum)
            (overshell_drums_pro kTrackDrum)
            kTrackNone}
         kTrackNone})
   (on_view_modify
      {TOGGLE_LEFTY_FLIP_AND_STATIC_VOCALS})
   (on_cancel
      {$this leave_choose_part}))
(kState_ChoosePartDenial
   (view confirm_action)
   (song_settings_flow TRUE)
   (part_unresolved TRUE)
   (update_view
      {if_else
         {==
            {critical_user_listener get_critical_user}
            {$this get_user}}
         {handle
            ($this set_confirm_message overshell_choose_part_denial)}
         {handle
            ($this set_confirm_message overshell_choose_part_denial_no_part)}})
   (update_remote_feedback
      ($focus_item)
      {confirm_action.lst set_selected $focus_item})
   (SELECT_MSG
      {$this show_song_options})
   (on_cancel
      {$this show_song_options}))
(kState_ChoosePartWarn
   (view confirm_action)
   (song_settings_flow TRUE)
   (part_unresolved TRUE)
   (update_view
      {handle
         ($this
            set_confirm_actions
            overshell_choose_part_warn
            (overshell_confirm_yes overshell_confirm_no))})
   (update_remote_feedback
      ($focus_item)
      {confirm_action.lst set_selected $focus_item})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {$this show_choose_part_wait})
         (overshell_confirm_no
            {$this leave_choose_part_wait})})
   (on_cancel
      {$this leave_choose_part_wait}))
(kState_NotBattlePartWarn
   (view confirm_action)
   (song_settings_flow TRUE)
   (part_unresolved TRUE)
   (update_view
      {handle
         ($this
            set_confirm_actions
            overshell_not_battle_part_warn
            (overshell_confirm_yes overshell_confirm_no))})
   (update_remote_feedback
      ($focus_item)
      {confirm_action.lst set_selected $focus_item})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {$this show_choose_part_wait})
         (overshell_confirm_no
            {$this leave_choose_part_wait})})
   (on_cancel
      {$this leave_choose_part_wait}))
(kState_ChoosePartWait
   (view
      {switch
         {{$this get_user}
            get_controller_type}
         (kControllerGuitar choose_part_guitar)
         (kControllerRealGuitar choose_part_real_guitar)
         (kControllerVocals choose_part_vocals)
         (kControllerKeys choose_part_keys)
         (kControllerDrum choose_part_drum)
         {fail
            "No choose part view for this controller type"}})
   (song_settings_flow TRUE)
   (part_unresolved TRUE)
   (shows_extended_mic_arrows TRUE)
   (update_remote_feedback
      ($focus_item)
      {choose_part.lst set_selected $focus_item})
   (on_view_modify
      {TOGGLE_LEFTY_FLIP_AND_STATIC_VOCALS})
   (on_cancel
      {$this leave_choose_part_wait}))
#define CYMBAL_SELECTION
(SELECT_MSG
   {cond
      ({==
            {$component selected_sym}
            overshell_cymbals_continue}
         {$this finish_cymbal_selection FALSE})
      ({==
            {$component selected_sym}
            overshell_lefty_flip}
         {do
            ($options
               {{$this get_user}
                  get_gameplay_options})
            ($lefty_flipped
               {$options get_lefty})
            {$options
               set_lefty
               {! $lefty_flipped}}
            {$this update_drum_lefty_check $options}
            {if
               {$user player}
               {{$user player}
                  update_lefty_flip}}})
      ({==
            {$component selected_sym}
            overshell_enable_hihat}
         {$this toggle_hihat_pedal}
         {enable_hihat.chk
            set
            checked
            {!
               {enable_hihat.chk get checked}}})
      (TRUE
         {do
            ($checkmark $selected)
            {set
               $selected
               {$component selected_sym}}
            {set
               $checkmark
               {sprintf
                  "%s.chk"
                  {substr
                     $selected
                     10
                     {strlen $selected}}}}
            {$this toggle_cymbal $selected}
            {$checkmark
               set
               checked
               {!
                  {$checkmark get checked}}}
            {$component refresh}})})
(kState_OptionsDrum
   (view options_drum)
   (enter
      {$this
         update_drum_lefty_check
         {{$this get_user}
            get_gameplay_options}}
      {$this update_enable_hihat_check}
      {green_cym.chk
         set
         checked
         {$this is_cymbal_selected overshell_green_cym}}
      {blue_cym.chk
         set
         checked
         {$this is_cymbal_selected overshell_blue_cym}}
      {yellow_cym.chk
         set
         checked
         {$this is_cymbal_selected overshell_yellow_cym}}
      {cymbal_message.lbl set text_token overshell_drum_message}
      {$this refresh_cymbal_provider})
   (CYMBAL_SELECTION)
   (on_cancel
      {$this finish_cymbal_selection FALSE}))
(kState_OptionsDrumInSongSettings
   (view options_drum)
   (song_settings_flow TRUE)
   (remote_status remote_status_drum_options)
   (enter
      {$this
         update_drum_lefty_check
         {{$this get_user}
            get_gameplay_options}}
      {$this update_enable_hihat_check}
      {cymbal_message.lbl set text_token overshell_cymbal_message}
      {$this refresh_cymbal_provider})
   (CYMBAL_SELECTION)
   (on_cancel
      {$this finish_cymbal_selection TRUE}))
(kState_OptionsDrumMessage
   (view confirm_action)
   (song_settings_flow TRUE)
   (remote_status remote_status_drum_options)
   (update_view
      {handle
         ($this set_confirm_message overshell_cymbals_in_options_msg)})
   (SELECT_MSG
      {$this dismiss_cymbal_message}))
(kState_ChooseDiff
   (view choose_diff)
   (song_settings_flow TRUE)
   (shows_extended_mic_arrows TRUE)
   (enter {if {! $firstdiff}
	     {set $firstdiff TRUE}
		 {choose_diff.lst set_selected 3}})
   (SELECT_MSG
      {switch
         {choose_diff.lst selected_sym}
         (overshell_easy
            {$this select_difficulty kDifficultyEasy})
         (overshell_medium
            {$this select_difficulty kDifficultyMedium})
         (overshell_hard
            {$this select_difficulty kDifficultyHard})
         (overshell_expert
            {if_else {modifier_mgr is_modifier_active mod_nobre}
            {{$this select_difficulty kDifficultyEasy} {do {set $imabigboy TRUE}}}
            {$this select_difficulty kDifficultyExpert}})})
   (update_remote_feedback
      ($focus_item)
      {choose_diff.lst set_selected $focus_item})
   (on_view_modify
      {TOGGLE_LEFTY_FLIP_AND_STATIC_VOCALS})
   (on_cancel
      {$this leave_choose_difficulty}))
(kState_ChooseDiffConfirm
   (view confirm_action)
   (song_settings_flow TRUE)
   (enter
      {handle
         ($this
            set_confirm_actions
            overshell_difficulty_confirm
            (overshell_continue overshell_restart overshell_cancel))}
      {handle
         ($this
            update_restart_allowed
            {{$this get_session_mgr}
               is_leader_local})})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_continue
            {$this confirm_choose_diff})
         (overshell_restart
            {$this confirm_choose_diff}
            {if_else
               {gamemode in_mode trainer}
               {{gamemode get game_panel}
                  restart_section}
               {session end_game kRestart}})
         (overshell_cancel
            {$this leave_difficulty_confirmation})})
   (on_cancel
      {$this leave_difficulty_confirmation}))
(kState_ReadyToPlay
   (view ready_to_play)
   (song_settings_flow TRUE)
   (ready_to_play TRUE)
   (on_cancel
      {$this leave_ready_to_play}))
(kState_ReadyToPlayWait
   (view ready_to_play)
   (song_settings_flow TRUE)
   (ready_to_play TRUE))
(kState_SongOptionsCancel
   (view cancel_song)
   (song_settings_flow TRUE)
   (part_unresolved TRUE)
   (update_view
      {$this
         update_cancel_song
         {gamemode in_mode party_shuffle}
         {{$this get_session_mgr}
            is_leader_local}})
   (update_remote_feedback
      ($focus_item)
      {cancel_song.lst set_selected $focus_item})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {if_else
               {session_mgr is_leader_local}
               {overshell end_override_flow kOverrideFlow_SongSettings TRUE}
               {do
                  {session_mgr disconnect}
                  {if
                     {overshell in_override_flow kOverrideFlow_SongSettings}
                     {overshell end_override_flow kOverrideFlow_SongSettings TRUE}}}})
         (overshell_confirm_no
            {$this show_song_options})
         (overshell_leave
            {$this attempt_remove_user})})
   (on_cancel
      {$this show_song_options}))
(kState_AutoSignInSony
   (view confirm_action)
   (register_online_flow TRUE)
   (update_view
      {handle
         ($this
            set_confirm_actions
            overshell_sign_in_fail_retry
            (overshell_sign_in_retry overshell_sign_in_cancel))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_sign_in_retry
            {platform_mgr run_net_start_utility})
         (overshell_sign_in_cancel
            {overshell end_override_flow kOverrideFlow_RegisterOnline TRUE})})
   (on_cancel
      {overshell end_override_flow kOverrideFlow_RegisterOnline TRUE}))
(kState_SignInSonyPrivilegeDenial
   (view confirm_action)
   (register_online_flow TRUE)
   (update_view
      {handle
         ($this set_confirm_message overshell_auto_sign_in_sony_restricted_privilege)})
   (SELECT_MSG
      {overshell end_override_flow kOverrideFlow_RegisterOnline TRUE})
   (on_cancel
      {overshell end_override_flow kOverrideFlow_RegisterOnline TRUE}))
(kState_AutoSignInRockCentral
   (view auto_sign_in_rock_central)
   (register_online_flow TRUE)
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_sign_in_cancel
            {overshell end_override_flow kOverrideFlow_RegisterOnline TRUE})})
   (on_cancel
      {overshell end_override_flow kOverrideFlow_RegisterOnline TRUE}))
#define SIGN_IN_TO_REGISTER_STATE
((view sign_in_to_register)
   (register_online_flow TRUE)
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_sign_in_continue
            {$this show_sign_in_wait})
         (overshell_sign_in
            {platform_mgr signin 1 TRUE})
         (overshell_sign_in_cancel
            {overshell end_override_flow kOverrideFlow_RegisterOnline TRUE})})
   (on_cancel
      {overshell end_override_flow kOverrideFlow_RegisterOnline TRUE}))
(kState_SignInToRegister
   SIGN_IN_TO_REGISTER_STATE
   (update_view
      {handle
         ($this setup_sign_in_to_register_list FALSE)}))
(kState_SignInToRegisterNoResolve
   SIGN_IN_TO_REGISTER_STATE
   (update_view
      {handle
         ($this setup_sign_in_to_register_list TRUE)}))
(kState_SignInWait
   (view sign_in_wait)
   (register_online_flow TRUE)
   (on_cancel
      {overshell end_override_flow kOverrideFlow_RegisterOnline TRUE}))
(kState_RegisteringOnline
   (view registering_online)
   (register_online_flow TRUE)
   (prevents_drop_out TRUE)
   (on_cancel
      {session_mgr disconnect}))
(kState_SignInFailRetry
   (view confirm_action)
   (register_online_flow TRUE)
   (update_view
      {handle
         ($this
            set_confirm_actions
            overshell_sign_in_fail_retry
            (overshell_sign_in_retry overshell_sign_in_cancel))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_sign_in_retry
            #ifdef HX_PS3
            {$this show_state kState_AutoSignInSony}
            #else
            {$this show_sign_in_wait}
            #endif)
         (overshell_sign_in_cancel
            {overshell end_override_flow kOverrideFlow_RegisterOnline TRUE})})
   (on_cancel
      {overshell end_override_flow kOverrideFlow_RegisterOnline TRUE}))
(kState_RegisterOnlineDenial
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message overshell_register_online_denial_auto_vocals)})
   (SELECT_MSG
      {$this show_options})
   (on_cancel
      {$this show_options}))
(kState_KickUsers
   (view kick_users)
   (requires_online_session TRUE)
   (requires_remote_users TRUE)
   (update_view
      {$this update_kick_users_list})
   (on_cancel
      {$this show_online_options})
   (SELECT_MSG
      {$this
         kick_user
         {users.lst selected_pos}}))
(kState_KickConfirmation
   (view confirm_action)
   (requires_online_session TRUE)
   (requires_remote_users TRUE)
   (enter
      {handle
         ($this
            set_confirm_actions
            overshell_kick_confirmation
            (overshell_confirm_yes overshell_confirm_no))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {$this confirm_kick})
         (overshell_confirm_no
            {$this leave_kick_confirmation})})
   (on_cancel
      {$this leave_kick_confirmation}))
(kState_MuteUsers
   (view mute_users)
   (requires_online_session TRUE)
   (requires_remote_users TRUE)
   (update_view
      {$this update_mute_users_list})
   (SELECT_MSG
      {$this
         toggle_mute_user
         {users.lst selected_pos}})
   (on_cancel
      {$this show_online_options}))
(kState_GamercardUsers
   (view gamercard_users)
   (requires_online_session TRUE)
   (update_view
      {$this update_gamercard_users_list})
   (SELECT_MSG
      {$this
         view_user_gamercard
         {users.lst selected_pos}})
   (on_cancel
      {$this show_online_options}))
(kState_InviteFriends
   (view invite_friends)
   (requires_online_session TRUE)
   (enter
      {$this update_friends_list})
   (update_view
      {$this update_friends_list})
   (on_cancel
      {$this show_online_options})
   (SELECT_MSG
      {$this
         invite_friend
         {invite_friends.lst selected_pos}}))
(kState_InviteFriendsDenial
   (view confirm_action)
   (requires_online_session TRUE)
   (update_view
      {handle
         ($this set_confirm_message error_invite_no_friends)})
   (on_cancel
      {$this show_online_options})
   (SELECT_MSG
      {$this show_online_options}))
(kState_EnterCalibration
   (view confirm_action)
   (enter
      {handle
         ($this
            set_confirm_actions
            overshell_enter_calibration
            (overshell_confirm_yes overshell_confirm_no))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {cal_welcome_screen set cancel_screen main_hub_screen}
            {cal_welcome_screen set confirm_screen main_hub_screen}
            {input_mgr set_user $user}
            {critical_user_listener set_critical_user $user}
            {ui_event_mgr trigger_event go_to_calibration}
            {$this leave_options})
         (overshell_confirm_no
            {$this show_options_av_settings})})
   (on_cancel
      {$this show_options_av_settings}))
(kState_ChooseCharEdit
   (view choose_char_edit)
   (choose_char_flow TRUE)
   (char_edit_flow TRUE)
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_rename_character
            {if
               #ifdef HX_PS3
               {!
                  {virtual_keyboard is_open}}
               #else
               TRUE
               #endif
               {virtual_keyboard
                  show_keyboard
                  $user
                  kCharNameLength
                  {localize create_char_vk_title}
                  {localize create_char_vk_desc}
                  {$this character_name}
                  $this}})
         (overshell_delete_character
            {$this attempt_show_char_delete})})
   (VIRTUAL_KEYBOARD_RESULT_MSG
      {if
         {&&
            $ok
            $this
            {!
               {==
                  $text
                  ""}}}
         {$this rename_character $text}
         {$this show_chars}
         {unless {|| {! $gotcha} {modifier_mgr is_modifier_active mod_auto_play}} {saveload_mgr autosave}}})
   (on_cancel
      {$this show_chars}))
(kState_ChooseCharDelete
   (view confirm_action)
   (choose_char_flow TRUE)
   (char_edit_flow TRUE)
   (enter
      {handle
         ($this
            set_confirm_actions
            overshell_delete_character_confirmation
            (overshell_confirm_yes overshell_confirm_no))}
      {handle
         ($this set_default_option overshell_confirm_no)})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {$this delete_character}
            {$this show_chars}
            {$this
               refresh_highlighted_char
               {chars.lst selected_pos}}
            {unless {|| {! $gotcha} {modifier_mgr is_modifier_active mod_auto_play}} {saveload_mgr autosave}})
         (overshell_confirm_no
            {$this leave_char_delete})})
   (on_cancel
      {$this leave_char_delete}))
(kState_ChooseCharDeleteDenial
   (view confirm_action)
   (choose_char_flow TRUE)
   (view choose_char_edit)
   (enter
      {handle
         ($this set_confirm_message overshell_delete_char_denial)})
   (SELECT_MSG
      {$this show_chars})
   (on_cancel
      {$this show_chars}))
(kState_EnterCharCreator
   (view confirm_action)
   (choose_char_flow TRUE)
   (enter
      {handle
         ($this
            set_confirm_actions
            overshell_enter_charactercreator
            (overshell_confirm_yes overshell_confirm_no))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {critical_user_listener set_critical_user $user}
            {closet_mgr set_user $user}
            {closet_mgr set_return_screen main_hub_screen}
            {$this leave_options}
            {ui_event_mgr trigger_event go_to_charactercreator})
         (overshell_confirm_no
            {$this show_chars})})
   (on_cancel
      {$this show_chars}))
(kState_EnterCredits
   (view confirm_action)
   (enter
      {handle
         ($this
            set_confirm_actions
            overshell_enter_credits
            (overshell_confirm_yes overshell_confirm_no))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {meta_performer set_credits_pending}
            {ui_event_mgr trigger_event quit_to_main_credits}
            {$this leave_options})
         (overshell_confirm_no
            {$this show_options_extras})})
   (on_cancel
      {$this show_options_extras}))
(kState_CreditsDenial
   (view confirm_action)
   (update_view
      {handle
         ($this set_confirm_message overshell_credits_denial_remote_players)})
   (SELECT_MSG
      {$this show_options_extras})
   (on_cancel
      {$this show_options_extras}))
(kState_CharCreatorDenialNoProfile
   (view confirm_action)
   (choose_char_flow TRUE)
   (enter
      {handle
         ($this
            set_confirm_actions
            overshell_sign_in_create_character
            (overshell_sign_in overshell_sign_in_cancel))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_sign_in
            {platform_mgr signin 1})
         (overshell_sign_in_cancel
            {$this show_chars})})
   (on_cancel
      {$this show_chars}))
(kState_CharCreatorDenialMaxChars
   (view confirm_action)
   (choose_char_flow TRUE)
   (update_view
      {set
         $max_characters
         {profile_mgr get_max_characters}}
      {handle
         ($this
            set_confirm_message_fmt
            (charcreator_full_profile_fmt $max_characters))})
   (SELECT_MSG
      {$this show_chars})
   (on_cancel
      {$this show_chars}))
(kState_CharCreatorDenial
   (view confirm_action)
   (choose_char_flow TRUE)
   (update_view
      {handle
         ($this set_confirm_message overshell_char_creator_denial_remote_players)})
   (SELECT_MSG
      {$this show_chars})
   (on_cancel
      {$this show_chars}))
(kState_CalibrationDenial
   (view confirm_action)
   (update_view
      {handle
         ($this set_confirm_message overshell_calibration_denial_remote_players)})
   (SELECT_MSG
      {$this show_options_av_settings})
   (on_cancel
      {$this show_options_av_settings}))
(kState_ReconnectController
   (view reconnect_controller)
   (prevents_override TRUE))
(kState_FirstTimeRG
   (view confirm_action)
   (prevents_override TRUE)
   (update_view
      {handle
         ($this
            set_confirm_actions
            overshell_first_time_rg
            (overshell_confirm_yes overshell_confirm_no))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {$this leave_options}
            {accomplishment_panel set_goal acc_guitartutorial01}
            {accomplishment_panel set_career_state kCareerState_Goal}
            {ui_event_mgr trigger_event go_to_campaign})
         (overshell_confirm_no
            {$this leave_options})})
   (on_cancel
      {$this leave_options}))
(kState_SecondTimeRG
   (view confirm_action)
   (prevents_override TRUE)
   (update_view
      {handle
         ($this
            set_confirm_actions
            overshell_second_time_rg
            (overshell_confirm_yes overshell_confirm_no))})
   (SELECT_MSG
      {switch
         {$component selected_sym}
         (overshell_confirm_yes
            {$this leave_options}
            {accomplishment_panel set_goal acc_guitartutorial03}
            {accomplishment_panel set_career_state kCareerState_Goal}
            {ui_event_mgr trigger_event go_to_campaign})
         (overshell_confirm_no
            {$this leave_options})})
   (on_cancel
      {$this leave_options}))