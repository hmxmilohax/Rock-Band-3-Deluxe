(dxState_TextureMenu
   (view
      {do
         ($options
            {array 0})
         {push_back $options os_fretboard}
         {push_back $options os_spotlight}
         {push_back $options os_emissive}
         {push_back $options os_gems}
         {push_back $options os_smashers}
         {push_back $options os_flames}
         {push_back $options os_sus}
         {push_back $options os_lanes}
         {push_back $options os_score_box}
         {push_back $options os_stars}
         {push_back $options os_font}
         {push_back $options os_crowdmeter}
         {push_back $options os_rails}
         {push_back $options os_odbar}
         {push_back $options os_multiring}
         {push_back $options os_keyboard}
         {push_back $options os_voxhw}
         {push_back $options os_voxarrow}
         {push_back $options os_voxnotes}
         {push_back $options os_voxod}
         {dx_state_setup dxState_TextureMenu FALSE}
      }
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_fretboard
            {set $dx_tracked_texture_loader highways}
            {$this show_state dxState_DTATextureLoader})
         (os_spotlight
            {set $dx_tracked_texture_loader spotlights}
            {$this show_state dxState_DTATextureLoader})
         (os_emissive
            {set $dx_tracked_texture_loader emissives}
            {$this show_state dxState_DTATextureLoader})
         (os_gems
            {set $dx_tracked_texture_loader gems}
            {$this show_state dxState_DTATextureLoader})
         (os_smashers
            {set $dx_tracked_texture_loader smashers}
            {$this show_state dxState_DTATextureLoader})
         (os_flames
            {set $dx_tracked_texture_loader flames}
            {$this show_state dxState_DTATextureLoader})
         (os_sus 
            {set $dx_tracked_texture_loader sustains}
            {$this show_state dxState_SustainSelection})
         (os_score_box
            {set $dx_tracked_texture_loader score_box}
            {$this show_state dxState_DTATextureLoader})
         (os_stars
            {set $dx_tracked_texture_loader stars}
            {$this show_state dxState_DTATextureLoader})
         (os_font
            {set $dx_tracked_texture_loader font}
            {$this show_state dxState_DTATextureLoader})
         (os_rails
            {set $dx_tracked_texture_loader rails}
            {$this show_state dxState_DTATextureLoader})
         (os_lanes
            {set $dx_tracked_texture_loader lanes}
            {$this show_state dxState_DTATextureLoader})
         (os_odbar
            {set $dx_tracked_texture_loader overdrive_bar}
            {$this show_state dxState_DTATextureLoader})
         (os_multiring
            {set $dx_tracked_texture_loader multiplier_ring}
            {$this show_state dxState_DTATextureLoader})
         (os_crowdmeter
            {set $dx_tracked_texture_loader crowd_meter}
            {$this show_state dxState_DTATextureLoader})
         (os_keyboard
            {set $dx_tracked_texture_loader keyboards}
            {$this show_state dxState_DTATextureLoader})
         (os_voxhw
            {set $dx_tracked_texture_loader voxhw}
            {$this show_state dxState_DTATextureLoader})
         (os_voxarrow
            {set $dx_tracked_texture_loader voxarrow}
            {$this show_state dxState_DTATextureLoader})
         (os_voxnotes
            {set $dx_tracked_texture_loader voxnotes}
            {$this show_state dxState_DTATextureLoader})
         (os_voxod
            {set $dx_tracked_texture_loader voxod}
            {$this show_state dxState_DTATextureLoader})
      }
   )
   (exit 
      {dx_state_pos_tracker}
      {set $dx_track_to_reset_choose_character_texture TRUE}
   )
   (on_cancel
      {$this show_state dxState_ThemeMenu}
    )
)
#define DX_TEXTURE_LOADER_HANDLER
(
   {do
      ($options
         {array 0})
      {set $dx_available_textures
         (emissives score_box stars font smashers flames rails lanes overdrive_bar highways spotlights multiplier_ring crowd_meter gems keyboards voxhw voxarrow voxnotes voxod)
      }
      {foreach $entry {file_list {sprint "ui/track/" $dx_tracked_texture_loader "/gen/*.png_ps3"}} {if {!= $entry ""} {push_back $options $entry}}}
      ($dx_current_texture_list_array
         {array 0})
      {set $dx_current_texture_list_array {file_list {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/" $dx_tracked_texture_loader "/gen/*.png_ps3"}}}
      {if {> {size $dx_current_texture_list_array} 0}
         {foreach $entry $dx_current_texture_list_array {if {!= $entry ""} {push_back $options $entry}}}
      }
      {if {== {size $options} 0} ;if nothing was found at all
         {set $options (cant find textures 'this is a bug')} ;fill the list so it doesnt crash
      }
      {dx_state_setup dxState_DTATextureLoader FALSE}
   }
)
(dxState_DTATextureLoader
   (view
      DX_TEXTURE_LOADER_HANDLER
      {overshell_view_chooser}
   )
   (enter
      {do
         {set $in_state FALSE}
         DX_TEXTURE_LOADER_HANDLER
         {$current_list set_selected 0}
         {game_options.grp add_object choose_character.mesh}
         {choose_character.mesh set_local_pos_index 2 175}
         {choose_character.mesh set_local_scale_index 0 0.2}
         {choose_character.mesh set_local_scale_index 2 0.4}
         {choose_character.mat set diffuse_tex choose_character.tex}
      }
      {if {== $dx_tracked_texture_loader emissives}
         {choose_character.tex iterate_refs $ref {$ref set color {pack_color $dx_overdrive_r $dx_overdrive_g $dx_overdrive_b}}}
         {choose_character.tex iterate_refs $ref {$ref set intensify TRUE}}
      }
   )
   (SCROLL_MSG
      {set $dx_list_scroll_texture {$component selected_sym}}
      {search_replace $dx_list_scroll_texture "'" "" $dx_list_scroll_texture}
      {choose_character.tex set_bitmap
         {if_else {file_exists {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/" $dx_tracked_texture_loader "/gen/" $dx_list_scroll_texture ".png_ps3"}}
            {sprint "GD:/dev_hdd0/game/BLUS30463/USRDIR/custom_textures/" $dx_tracked_texture_loader "/" $dx_list_scroll_texture ".png"}
            {sprint "ui/track/" $dx_tracked_texture_loader "/" $dx_list_scroll_texture ".png"}
         }
      }
      ;{$this update}
   )
   (SELECT_MSG
      {switch $dx_tracked_texture_loader
         (emissives
            {set $dx_tracked_emissive {$component selected_sym}}
            {search_replace $dx_tracked_emissive "'" "" $dx_tracked_emissive})
         (score_box
            {set $dx_score_box_needs_reset TRUE}
            {set $dx_score_box {$component selected_sym}}
            {search_replace $dx_score_box "'" "" $dx_score_box})
         (stars
            {set $dx_stars_needs_reset TRUE}
            {set $dx_stars {$component selected_sym}}
            {search_replace $dx_stars "'" "" $dx_stars})
         (font
            {set $dx_font_needs_reset TRUE}
            {set $dx_font {$component selected_sym}}
            {search_replace $dx_font "'" "" $dx_font})
         (smashers
            {set $dx_smasher_needs_reset TRUE}
            {set $dx_smasher {$component selected_sym}}
            {search_replace $dx_smasher "'" "" $dx_smasher})
         (flames
            {set $dx_flames_needs_reset TRUE}
            {set $dx_flames {$component selected_sym}}
            {search_replace $dx_flames "'" "" $dx_flames})
         (rails
            {set $dx_rails_needs_reset TRUE}
            {set $dx_rails {$component selected_sym}}
            {search_replace $dx_rails "'" "" $dx_rails})
         (lanes
            {set $dx_lanes_needs_reset TRUE}
            {set $dx_lanes {$component selected_sym}}
            {search_replace $dx_lanes "'" "" $dx_lanes})
         (overdrive_bar
            {set $dx_overdrive_bar_needs_reset TRUE}
            {set $dx_overdrive_bar {$component selected_sym}}
            {search_replace $dx_overdrive_bar "'" "" $dx_overdrive_bar})
         (highways
            {set $dx_tracked_highway {$component selected_sym}}
            {search_replace $dx_tracked_highway "'" "" $dx_tracked_highway})
         (spotlights
            {set $dx_tracked_spotlight {$component selected_sym}}
            {search_replace $dx_tracked_spotlight "'" "" $dx_tracked_spotlight})
         (multiplier_ring
            {set $dx_multiplier_ring_needs_reset TRUE}
            {set $dx_multiplier_ring {$component selected_sym}}
            {search_replace $dx_multiplier_ring "'" "" $dx_multiplier_ring})
         (crowd_meter
            {set $dx_crowd_meter_needs_reset TRUE}
            {set $dx_crowd_meter {$component selected_sym}}
            {search_replace $dx_crowd_meter "'" "" $dx_crowd_meter})
         (gems
            {set $dx_gem_needs_reset TRUE}
            {set $dx_gem {$component selected_sym}}
            {search_replace $dx_gem "'" "" $dx_gem})
         (keyboards
            {set $dx_keyboard_needs_reset TRUE}
            {set $dx_keyboard {$component selected_sym}}
            {search_replace $dx_keyboard "'" "" $dx_keyboard})
         (voxhw
            {set $dx_vocal_highway_needs_reset TRUE}
            {set $dx_vocal_highway {$component selected_sym}}
            {search_replace $dx_vocal_highway "'" "" $dx_vocal_highway})
         (voxarrow
            {set $dx_vocal_arrow_needs_reset TRUE}
            {set $dx_vocal_arrow {$component selected_sym}}
            {search_replace $dx_vocal_arrow "'" "" $dx_vocal_arrow})
         (voxnotes
            {set $dx_vocal_notes_needs_reset TRUE}
            {set $dx_vocal_notes {$component selected_sym}}
            {search_replace $dx_vocal_notes "'" "" $dx_vocal_notes})
         (voxod
            {set $dx_vocal_overdrive_needs_reset TRUE}
            {set $dx_vocal_overdrive {$component selected_sym}}
            {search_replace $dx_vocal_overdrive "'" "" $dx_vocal_overdrive})
      }
      {if_else
         {||
            {== $dx_tracked_texture_loader emissives}
            {== $dx_tracked_texture_loader spotlights}
            {== $dx_tracked_texture_loader highways}
         }
         {$this show_state dxState_InstrumentTextureChooser}
         {$this show_state dxState_TextureMenu}
         
      }
   )
   (exit 
      {dx_state_pos_tracker}
      {choose_character.mesh set_local_scale_index 0 0.5}
      {choose_character.mesh set_local_scale_index 2 1}
      {choose_character.mesh set_local_pos_index 2 300}
      {choose_character.tex iterate_refs $ref {$ref set color {pack_color 1.0 1.0 1.0}}}
      {choose_character.tex iterate_refs $ref {$ref set intensify 0}}
      {game_options.grp remove_object choose_character.mesh}
   )
   (on_cancel
      {set $dx_tracked_texture_loader FALSE}
      {$this show_state dxState_TextureMenu}
   )
)


(dxState_InstrumentTextureChooser
   (view
      {do
         ($options
            {array 0})
         {push_back $options all_instruments}
         {push_back $options guitar}
         {push_back $options bass}
         {push_back $options drums}
         {push_back $options keys}
         ;{push_back $options pro_guitar}
         ;{push_back $options pro_bass}
         {set $state_hold $previous_state}
         {dx_state_setup dxState_InstrumentTextureChooser FALSE}
      }
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (all_instruments
            {switch $dx_tracked_texture_loader
                (emissives
                    {set $dx_overdrive_guitar_needs_reset TRUE} {set $dx_overdrive_guitar $dx_tracked_emissive}
                    {set $dx_overdrive_bass_needs_reset TRUE} {set $dx_overdrive_bass $dx_tracked_emissive}
                    {set $dx_overdrive_drum_needs_reset TRUE} {set $dx_overdrive_drum $dx_tracked_emissive}
                    {set $dx_overdrive_keys_needs_reset TRUE} {set $dx_overdrive_keys $dx_tracked_emissive}
                )
                (highway
                    {set $dx_highway_guitar_needs_reset TRUE} {set $dx_highway_guitar $dx_tracked_highway}
                    {set $dx_highway_bass_needs_reset TRUE} {set $dx_highway_bass $dx_tracked_highway}
                    {set $dx_highway_drum_needs_reset TRUE} {set $dx_highway_drum $dx_tracked_highway}
                    {set $dx_highway_keys_needs_reset TRUE} {set $dx_highway_keys $dx_tracked_highway}
                )
                (spotlight
                    {set $dx_streak_guitar_needs_reset TRUE} {set $dx_streak_guitar $dx_tracked_spotlight}
                    {set $dx_streak_bass_needs_reset TRUE} {set $dx_streak_bass $dx_tracked_spotlight}
                    {set $dx_streak_drum_needs_reset TRUE} {set $dx_streak_drum $dx_tracked_spotlight}
                    {set $dx_streak_keys_needs_reset TRUE} {set $dx_streak_keys $dx_tracked_spotlight}
                )
            }
         )
         (guitar
            {switch $dx_tracked_texture_loader
                (emissives {set $dx_overdrive_guitar_needs_reset TRUE} {set $dx_overdrive_guitar $dx_tracked_emissive})
                (highway {set $dx_highway_guitar_needs_reset TRUE} {set $dx_highway_guitar $dx_tracked_highway})
                (spotlight {set $dx_streak_guitar_needs_reset TRUE} {set $dx_streak_guitar $dx_tracked_spotlight})
            }
         )
         (bass
            {switch $dx_tracked_texture_loader
                (emissives {set $dx_overdrive_bass_needs_reset TRUE} {set $dx_overdrive_bass $dx_tracked_emissive})
                (highway {set $dx_highway_bass_needs_reset TRUE} {set $dx_highway_bass $dx_tracked_highway})
                (spotlight {set $dx_streak_bass_needs_reset TRUE} {set $dx_streak_bass $dx_tracked_spotlight})
            }
         )
         (drums
            {switch $dx_tracked_texture_loader
                (emissives {set $dx_overdrive_drum_needs_reset TRUE} {set $dx_overdrive_drum $dx_tracked_emissive})
                (highway {set $dx_highway_drum_needs_reset TRUE} {set $dx_highway_drum $dx_tracked_highway})
                (spotlight {set $dx_streak_drum_needs_reset TRUE} {set $dx_streak_drum $dx_tracked_spotlight})
            }
         )
         (keys
            {switch $dx_tracked_texture_loader
                (emissives {set $dx_overdrive_keys_needs_reset TRUE} {set $dx_overdrive_keys $dx_tracked_emissive})
                (highway {set $dx_highway_keys_needs_reset TRUE} {set $dx_highway_keys $dx_tracked_highway})
                (spotlight {set $dx_streak_keys_needs_reset TRUE} {set $dx_streak_keys $dx_tracked_spotlight})
            }
         )
      }
      {$this show_state dxState_TextureMenu}
   )
   (exit 
      {dx_state_pos_tracker}
   )
   (on_cancel
      {$this show_state dxState_TextureMenu}
   )
)

(dxState_SustainSelection
   (view
      {do
         ($options
            {array 0})
         {push_back $options os_nosus}
         {push_back $options os_rb2sus}         
         {push_back $options os_rb3sus}         
         {push_back $options os_rb4sus}         
         {dx_state_setup dxState_SustainSelection FALSE}
      }
      {overshell_view_chooser}
   )
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_rb3sus
            {set $dx_sustain_needs_reset TRUE}
            {set $dx_sustain rb3})
         (os_rb2sus
            {set $dx_sustain_needs_reset TRUE}
            {set $dx_sustain rb2})
         (os_rb4sus
            {set $dx_sustain_needs_reset TRUE}
            {set $dx_sustain rb4})
         (os_nosus
            {set $dx_sustain_needs_reset FALSE}
            {set $dx_sustain empty}
         )
      }
   )
   (exit 
      {dx_state_pos_tracker}
   )   
   (on_cancel
      {$this show_state dxState_TextureMenu}
   )
)