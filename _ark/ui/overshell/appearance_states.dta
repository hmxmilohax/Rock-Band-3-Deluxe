(kState_RB3EAppearanceMenu
   (view online_options)
   (enter
   {online_options.lst set circular 0}
   {online_options.lst set_selected $rb3eappearanceval}
   {online_options.lst set_data 
   (
      os_theme
      os_osthm
      os_mtvpos
      os_angle
      os_setcol
   )})
   (SELECT_MSG
   {set $rb3eappearanceval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_theme
      {$this show_state kState_RB3EThemeMenu})
   (os_osthm
      {$this show_state kState_RB3EOvershellThemes})
   (os_mtvpos
      {$this show_state kState_RB3EMTVSetup})
   (os_flames
      {$this show_state kState_RB3ETrackThemes})
   (os_setcol
     {do {set $rb3eslider FALSE} {if_else {== {{$this get_user} get_controller_type} kControllerDrum}
     {$this show_state kState_RB3EDrumColorSelector} {if_else {== {{$this get_user} get_controller_type} kControllerKeys}
     {$this show_state kState_RB3EKeysColorWarning}
     {$this show_state kState_RB3EColorSelector}}}})
   (os_angle
     {$this show_state kState_RB3EAngleMenu}
   )
   })
   (on_cancel
      {options.lst set_selected 2}
      {$this show_state kState_RB3ESettings}))

(kState_RB3EThemeMenu
   (view options)
   (enter
   {options.lst set_selected $rb3ethemeval}
   {options.lst set_data 
   (
      os_thmreset
      os_rb3thm
      os_rb4thm
      os_rb2thm
      os_settex
   )})
   (SELECT_MSG
   {set $rb3ethemeval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_thmreset
      {$this show_state kState_RB3EThmResetMsg}
   )
   (os_rb3thm
      {set $emissivecustomtexture FALSE}
      {set $emissive none}
      {set $emissivegtrcustomtexture TRUE}
      {set $emissivegtr rb3_bass}
      {set $emissivebasscustomtexture TRUE}
      {set $emissivebass rb3_guitar}
      {set $emissivedrumcustomtexture TRUE}
      {set $emissivedrum rb3_drums}
      {set $emissivekeyscustomtexture TRUE}
      {set $emissivekeys rb3_keys}
      {set $spotlightcustomtexture FALSE}
      {set $spotlight none}
      {set $spotlightgtrcustomtexture TRUE}
      {set $spotlightgtr _spotlight_bass_track}
      {set $spotlightbasscustomtexture TRUE}
      {set $spotlightbass _spotlight_guitar_track}
      {set $spotlightdrumcustomtexture TRUE}
      {set $spotlightdrum _spotlight_drums_track}
      {set $spotlightkeyscustomtexture TRUE}
      {set $spotlightkeys _spotlight_prokeys_track}
      {set $highwaycustomtexture FALSE}
      {set $highway none}
      {set $highwaygtrcustomtexture TRUE}
      {set $highwaygtr _rb3_guitar}
      {set $highwaybasscustomtexture TRUE}
      {set $highwaybass _rb3_bass}
      {set $highwaydrumcustomtexture TRUE}
      {set $highwaydrum _rb3_drum}
      {set $highwaykeyscustomtexture TRUE}
      {set $highwaykeys _rb3_keys}
      {set $crowdmetercustomtexture TRUE}
      {set $crowdmeter rb3}
      {set $multiringcustomtexture TRUE}
      {set $multiring rb3}
      {set $odbarcustomtexture TRUE}
      {set $odbar rb3}
      {set $railscustomtexture TRUE}
      {set $rails rb3}
      {set $scorecustomtexture TRUE}
      {set $scoretex rb3}
      {set $flamescustomtexture TRUE}
      {set $flames rb3}
      {set $smashercustomtexture TRUE}
      {set $smasher rb3}
      {set $gemcustomtexture TRUE}
      {set $gem rb3}
      {set $sustaincustomtexture TRUE}
      {set $sustain rb3}
      {set $voxarrowcustomtexture TRUE}
      {set $voxarrow rb3}
      {set $voxhwcustomtexture TRUE}
      {set $voxhw rb3}
      {set $animatedgems FALSE}
      {set $animatedgemscustomtexture FALSE}
      {set $animatedgemname none}
      {set $animatedsmashers FALSE}
      {set $animatedsmasherscustomtexture FALSE}
      {set $animatedsmashername none}
   ;   {set $keyboardcustomtexture TRUE}
   ;   {set $keyboard none}
      {if {modifier_mgr is_modifier_active mod_nosustain}
         {modifier_mgr toggle_modifier_enabled mod_nosustain}}
      {if {modifier_mgr is_modifier_active mod_rb2sustain}
         {modifier_mgr toggle_modifier_enabled mod_rb2sustain}}
      {if {modifier_mgr is_modifier_active mod_rb4sustain}
         {modifier_mgr toggle_modifier_enabled mod_rb4sustain}}
   )
   (os_rb4thm
      {$this show_state kState_RB3ERB4ThemeWarn}
   )
   (os_rb2thm
      {set $emissivecustomtexture FALSE}
      {set $emissive none}
      {set $emissivegtrcustomtexture TRUE}
      {set $emissivegtr rb2_bass}
      {set $emissivebasscustomtexture TRUE}
      {set $emissivebass rb2_guitar}
      {set $emissivedrumcustomtexture TRUE}
      {set $emissivedrum rb2_drums}
      {set $emissivekeyscustomtexture TRUE}
      {set $emissivekeys rb2_bass}
      {set $spotlightcustomtexture TRUE}
      {set $spotlight rb2_bass_superstreak}
      {set $spotlightgtrcustomtexture FALSE}
      {set $spotlightgtr none}
      {set $spotlightbasscustomtexture FALSE}
      {set $spotlightbass none}
      {set $spotlightdrumcustomtexture FALSE}
      {set $spotlightdrum none}
      {set $spotlightkeyscustomtexture FALSE}
      {set $spotlightkeys none}
      {set $highwaycustomtexture TRUE}
      {set $highway rb2}
      {set $highwaygtrcustomtexture FALSE}
      {set $highwaygtr none}
      {set $highwaybasscustomtexture FALSE}
      {set $highwaybass none}
      {set $highwaydrumcustomtexture FALSE}
      {set $highwaydrum none}
      {set $highwaykeyscustomtexture FALSE}
      {set $highwaykeys none}
      {set $crowdmetercustomtexture TRUE}
      {set $crowdmeter rb2}
      {set $multiringcustomtexture TRUE}
      {set $multiring rb2}
      {set $odbarcustomtexture TRUE}
      {set $odbar rb2}
      {set $railscustomtexture TRUE}
      {set $rails rb2}
      {set $scorecustomtexture TRUE}
      {set $scoretex rb2}
      {set $flamescustomtexture TRUE}
      {set $flames rb2}
      {set $smashercustomtexture TRUE}
      {set $smasher rb2}
      {set $gemcustomtexture TRUE}
      {set $gem rb2}
      {set $sustaincustomtexture TRUE}
      {set $sustain rb2}
      {set $voxarrowcustomtexture TRUE}
      {set $voxarrow gdrb}
      {set $voxhwcustomtexture TRUE}
      {set $voxhw rb3}
      {set $animatedgems FALSE}
      {set $animatedgemscustomtexture FALSE}
      {set $animatedgemname none}
      {set $animatedsmashers FALSE}
      {set $animatedsmasherscustomtexture FALSE}
      {set $animatedsmashername none}
   ;   {set $keyboardcustomtexture TRUE}
   ;   {set $keyboard none}
      {if {modifier_mgr is_modifier_active mod_nosustain}
         {modifier_mgr toggle_modifier_enabled mod_nosustain}}
      {if {modifier_mgr is_modifier_active mod_rb4sustain}
         {modifier_mgr toggle_modifier_enabled mod_rb4sustain}}
      {unless {modifier_mgr is_modifier_active mod_rb2sustain}
         {modifier_mgr toggle_modifier_enabled mod_rb2sustain}}
   )
   (os_settex
     {$this show_state kState_RB3TextureMenu}
   )
   })
   (on_cancel
      {online_options.lst set_selected 0}
      {$this show_state kState_RB3EAppearanceMenu})
   (exit {online_options.lst set_selected 0}))

(kState_RB3ERB4ThemeWarn
   (view confirm_action)
   (enter
      {confirm_action.lst set_selected 1}
      {handle
         ($this set_confirm_actions os_rb4animmsg (overshell_continue overshell_cancel))})
   (SELECT_MSG
      {switch {$component selected_sym}
      (overshell_continue
         {set $emissivecustomtexture TRUE}
         {set $emissive rb4_guitar}
         {set $emissivegtrcustomtexture FALSE}
         {set $emissivegtr none}
         {set $emissivebasscustomtexture FALSE}
         {set $emissivebass none}
         {set $emissivedrumcustomtexture FALSE}
         {set $emissivedrum none}
         {set $emissivekeyscustomtexture FALSE}
         {set $emissivekeys none}
         {set $spotlightcustomtexture TRUE}
         {set $spotlight spotlight_rb4_rivals}
         {set $spotlightgtrcustomtexture FALSE}
         {set $spotlightgtr none}
         {set $spotlightbasscustomtexture FALSE}
         {set $spotlightbass none}
         {set $spotlightdrumcustomtexture FALSE}
         {set $spotlightdrum none}
         {set $spotlightkeyscustomtexture FALSE}
         {set $spotlightkeys none}
         {set $highwaycustomtexture TRUE}
         {set $highway rb4_black_rivals}
         {set $highwaygtrcustomtexture FALSE}
         {set $highwaygtr none}
         {set $highwaybasscustomtexture FALSE}
         {set $highwaybass none}
         {set $highwaydrumcustomtexture FALSE}
         {set $highwaydrum none}
         {set $highwaykeyscustomtexture FALSE}
         {set $highwaykeys none}
         {set $crowdmetercustomtexture TRUE}
         {set $crowdmeter rb4}
         {set $multiringcustomtexture TRUE}
         {set $multiring rb4}
         {set $odbarcustomtexture TRUE}
         {set $odbar rb4}
         {set $railscustomtexture TRUE}
         {set $rails rb4}
         {set $scorecustomtexture TRUE}
         {set $scoretex rb4}
         {set $flamescustomtexture TRUE}
         {set $flames rb4}
         {set $smashercustomtexture TRUE}
         {set $smasher rb4}
         {set $gemcustomtexture TRUE}
         {set $gem rb4}
         {set $sustaincustomtexture TRUE}
         {set $sustain rb4}
         {set $voxarrowcustomtexture TRUE}
         {set $voxarrow rivals}
         {set $voxhwcustomtexture TRUE}
         {set $voxhw rb4}
         {set $animatedgems TRUE}
         {set $animatedgemscustomtexture TRUE}
         {set $animatedgemname rb4}
         {set $animatedsmashers FALSE}
         {set $animatedsmasherscustomtexture FALSE}
         {set $animatedsmashername none}
      ;   {set $keyboardcustomtexture TRUE}
      ;   {set $keyboard none}
         {if {modifier_mgr is_modifier_active mod_nosustain}
            {modifier_mgr toggle_modifier_enabled mod_nosustain}}
         {if {modifier_mgr is_modifier_active mod_rb2sustain}
            {modifier_mgr toggle_modifier_enabled mod_rb2sustain}}
         {unless {modifier_mgr is_modifier_active mod_rb4sustain}
            {modifier_mgr toggle_modifier_enabled mod_rb4sustain}}
         {$this show_state kState_RB3EThemeMenu})
      (overshell_cancel
         {$this show_state kState_RB3EThemeMenu})})
      (on_cancel
      {$this show_state kState_RB3EThemeMenu}))

(kState_RB3EThmResetMsg
   (view confirm_action)
   (enter
      {confirm_action.lst set_selected 1}
      {handle
         ($this set_confirm_actions os_resetmsg (overshell_continue overshell_cancel))})
   (SELECT_MSG
      {switch {$component selected_sym}
      (overshell_continue
         {set $animatedgems FALSE}
         {set $emissivecustomtexture FALSE}
         {set $animatedsmashers FALSE}
         {set $animatedsmasherscustomtexture FALSE}
         {set $animatedsmashername none}
         {set $emissive none}
         {set $emissivegtrcustomtexture FALSE}
         {set $emissivegtr none}
         {set $emissivebasscustomtexture FALSE}
         {set $emissivebass none}
         {set $emissivedrumcustomtexture FALSE}
         {set $emissivedrum none}
         {set $emissivekeyscustomtexture FALSE}
         {set $emissivekeys none}
         {set $spotlightcustomtexture FALSE}
         {set $spotlight none}
         {set $spotlightgtrcustomtexture FALSE}
         {set $spotlightgtr none}
         {set $spotlightbasscustomtexture FALSE}
         {set $spotlightbass none}
         {set $spotlightdrumcustomtexture FALSE}
         {set $spotlightdrum none}
         {set $spotlightkeyscustomtexture FALSE}
         {set $spotlightkeys none}
         {set $highwaycustomtexture FALSE}
         {set $highway none}
         {set $highwaygtrcustomtexture FALSE}
         {set $highwaygtr none}
         {set $highwaybasscustomtexture FALSE}
         {set $highwaybass none}
         {set $highwaydrumcustomtexture FALSE}
         {set $highwaydrum none}
         {set $highwaykeyscustomtexture FALSE}
         {set $highwaykeys none}
         {set $crowdmetercustomtexture FALSE}
         {set $crowdmeter none}
         {set $multiringcustomtexture TRUE}
         {set $multiring rb3}
         {set $odbarcustomtexture FALSE}
         {set $odbar none}
         {set $railscustomtexture FALSE}
         {set $rails none}
         {set $scorecustomtexture FALSE}
         {set $scoretex none}
         {set $flamescustomtexture FALSE}
         {set $flames none}
         {set $smashercustomtexture FALSE}
         {set $smasher none}
         {set $gemcustomtexture FALSE}
         {set $gem none}
         {set $sustaincustomtexture FALSE}
         {set $sustain none}
         {set $voxarrowcustomtexture FALSE}
         {set $voxarrow none}
         {set $voxhwcustomtexture FALSE}
         {set $voxhw none}
         {set $keyboardcustomtexture FALSE}
         {set $keyboard none}
         {if {modifier_mgr is_modifier_active mod_nosustain}
            {modifier_mgr toggle_modifier_enabled mod_nosustain}}
         {if {modifier_mgr is_modifier_active mod_rb2sustain}
            {modifier_mgr toggle_modifier_enabled mod_rb2sustain}}
         {if {modifier_mgr is_modifier_active mod_rb4sustain}
            {modifier_mgr toggle_modifier_enabled mod_rb4sustain}}
         {$this show_state kState_RB3EThemeMenu})
      (overshell_cancel
         {$this show_state kState_RB3EThemeMenu})})
      (on_cancel
      {$this show_state kState_RB3EThemeMenu}))

(kState_RB3EOvershellThemes
   (view options)
   (enter
   {options.lst set_selected 0}
   {options.lst set_data (os_rb3os mod_rb4os mod_ps3os mod_xboxos mod_wiios)})
   (SELECT_MSG
  {switch
   {$component selected_sym}
               (os_rb3os
                  {if {modifier_mgr is_modifier_active mod_rb4os}
                     {modifier_mgr toggle_modifier_enabled mod_rb4os}
                     {$this show_state kState_RB3EOSResetWarn}})
               (mod_rb4os
                  {unless {modifier_mgr is_modifier_active mod_rb4os}
                     {modifier_mgr toggle_modifier_enabled mod_rb4os}
                     OVERSHELL_RB4OS
                     {overshell update_all}})
               (mod_xboxos
                  {modifier_mgr toggle_modifier_enabled mod_xboxos}
                  {if {modifier_mgr is_modifier_active mod_ps3os}
                     {modifier_mgr toggle_modifier_enabled mod_ps3os}}
                  {if {modifier_mgr is_modifier_active mod_wiios}
                     {modifier_mgr toggle_modifier_enabled mod_wiios}}
                  {overshell exit}
                  {overshell enter})
               (mod_ps3os
                  {modifier_mgr toggle_modifier_enabled mod_ps3os}
                  {if {modifier_mgr is_modifier_active mod_xboxos}
                     {modifier_mgr toggle_modifier_enabled mod_xboxos}}
                  {if {modifier_mgr is_modifier_active mod_wiios}
                     {modifier_mgr toggle_modifier_enabled mod_wiios}}
                  {overshell exit}
                  {overshell enter})
               (mod_wiios
                  {modifier_mgr toggle_modifier_enabled mod_wiios}
                  {if {modifier_mgr is_modifier_active mod_ps3os}
                     {modifier_mgr toggle_modifier_enabled mod_ps3os}}
                  {if {modifier_mgr is_modifier_active mod_xboxos}
                     {modifier_mgr toggle_modifier_enabled mod_xboxos}}
                  {overshell exit}
                  {overshell enter})}
               {options.lst set_data (os_rb3os mod_rb4os mod_ps3os mod_xboxos mod_wiios)})
   (on_cancel
      {$this show_state kState_RB3EAppearanceMenu})
   (exit
   {online_options.lst set_selected 1}))

(kState_RB3EOSResetWarn
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message {sprintf {localize os_bgwarn}})})
   (SELECT_MSG
      {set $fpsslider FALSE}
      {$this show_state kState_RB3EOvershellThemes}))

(kState_RB3EMTVSetup
   (view options_extras)
   (enter
   {set $mtvtracked 0}
   {options_extras.lst set_selected $rb3emtvval}
   {options_extras.lst set_data 
   (
      os_horizontal
      os_vertical
      os_zspace
   )})
   (SELECT_MSG
   {set $rb3emtvval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_horizontal
      {set $mtvtracked 0}
      {$this show_state kState_RB3EMTVXYZ})
   (os_vertical
      {set $mtvtracked 2}
      {$this show_state kState_RB3EMTVXYZ})
   (os_zspace
      {set $mtvtracked 1}
      {$this show_state kState_RB3EMTVXYZ})
   })
   (on_cancel
      {options_audio.lst set_selected 0}
      {$this show_state kState_RB3EAppearanceMenu}))

(kState_RB3EMTVXYZ
   (view options_audio)
   (enter
   {options_audio.lst set_selected $rb3emtvval}
   {options_audio.lst set_data 
   (
      os_100
      os_50
      os_25
      os_10
      os_1
      os_reset
      os_minus1
      os_minus10
      os_minus25
      os_minus50
      os_minus100
   )
   {options_audio.lst set scroll_time 0}})
   (SELECT_MSG
   {set $rb3emtvval {$component selected_sym}}
  {switch
   {$component selected_sym}
   (os_100
      {switch $mtvtracked
         (0 {set $mtvpos_0 {+ $mtvpos_0 100}})
         (1 {set $mtvpos_1 {- $mtvpos_1 100}})
         (2 {set $mtvpos_2 {+ $mtvpos_2 100}})
      }
   )
   (os_50
      {switch $mtvtracked
         (0 {set $mtvpos_0 {+ $mtvpos_0 50}})
         (1 {set $mtvpos_1 {- $mtvpos_1 50}})
         (2 {set $mtvpos_2 {+ $mtvpos_2 50}})
      }
   )
   (os_25
      {switch $mtvtracked
         (0 {set $mtvpos_0 {+ $mtvpos_0 25}})
         (1 {set $mtvpos_1 {- $mtvpos_1 25}})
         (2 {set $mtvpos_2 {+ $mtvpos_2 25}})
      }
   )
   (os_10
      {switch $mtvtracked
         (0 {set $mtvpos_0 {+ $mtvpos_0 10}})
         (1 {set $mtvpos_1 {- $mtvpos_1 10}})
         (2 {set $mtvpos_2 {+ $mtvpos_2 10}})
      }
   )
   (os_1
      {switch $mtvtracked
         (0 {set $mtvpos_0 {+ $mtvpos_0 1}})
         (1 {set $mtvpos_1 {- $mtvpos_1 1}})
         (2 {set $mtvpos_2 {+ $mtvpos_2 1}})
      }
   )
   (os_reset
      {switch $mtvtracked
         (0 {set $mtvpos_0 0})
         (1 {set $mtvpos_1 0})
         (2 {set $mtvpos_2 0})
      }
   )
   (os_minus100
      {switch $mtvtracked
         (0 {set $mtvpos_0 {- $mtvpos_0 100}})
         (1 {set $mtvpos_1 {+ $mtvpos_1 100}})
         (2 {set $mtvpos_2 {- $mtvpos_2 100}})
      }
   )
   (os_minus50
      {switch $mtvtracked
         (0 {set $mtvpos_0 {- $mtvpos_0 50}})
         (1 {set $mtvpos_1 {+ $mtvpos_1 50}})
         (2 {set $mtvpos_2 {- $mtvpos_2 50}})
      }
   )
   (os_minus25
      {switch $mtvtracked
         (0 {set $mtvpos_0 {- $mtvpos_0 25}})
         (1 {set $mtvpos_1 {+ $mtvpos_1 25}})
         (2 {set $mtvpos_2 {- $mtvpos_2 25}})
      }
   )
   (os_minus10
      {switch $mtvtracked
         (0 {set $mtvpos_0 {- $mtvpos_0 10}})
         (1 {set $mtvpos_1 {+ $mtvpos_1 10}})
         (2 {set $mtvpos_2 {- $mtvpos_2 10}})
      }
   )
   (os_minus1
      {switch $mtvtracked
         (0 {set $mtvpos_0 {- $mtvpos_0 1}})
         (1 {set $mtvpos_1 {+ $mtvpos_1 1}})
         (2 {set $mtvpos_2 {- $mtvpos_2 1}})
      }
   )
   }
   {{{gamemode get track_panel} find mtv_overlay} set_pos}
   )
   (on_cancel
      {options_audio.lst set scroll_time 0.25}
      {$this show_state kState_RB3EMTVSetup}))

(kState_RB3EAngleMenu
   (view #ifdef HX_PS3 options #else options_extras #endif)
   (enter
      {set $anglesld TRUE}
      {#ifdef HX_PS3 options.lst #else options_extras.lst #endif set_selected $rb3eangleval}
      {#ifdef HX_PS3 options.lst #else options_extras.lst #endif set_data (os_noang os_angmult)}
      {bg_music.sld set_num_steps 16} ;number of steps for track angle slider
      {bg_music.sld set_current {int {/ {- $multiangle 1} {/ 3 15}}}}
   )
   (update_view
      {handle
         ($this
            update_slider
            bg_music.sld
            "")})
   (SELECT_MSG
   {set $rb3eangleval {$component selected_sym}}
   {switch
   {$component selected_sym}
   (os_noang
      {set $forcemultiangle FALSE}
      {set $multiangle 1}
   )
   (os_angmult
      {set $forcemultiangle TRUE}
      {bg_music.sld store}
      {bg_music.sld set_showing TRUE}
      {$this set_focus bg_music.sld}
   )
   (os_p1
      {set $forcemultiangle TRUE}
      {set $multiangle 1}
   )
   (os_p2
      {set $forcemultiangle TRUE}
      {set $multiangle 2}
   )
   (os_p3
      {set $forcemultiangle TRUE}
      {set $multiangle 3}
   )
   (os_p4
      {set $forcemultiangle TRUE}
      {set $multiangle 4}
   )})
   (BUTTON_DOWN_MSG
      {if_else
         {find_elem
            ("instruments.sld"
               "bg_music.sld"
               "crowd.sld")
            {$this focus_name}}
         {switch
            $action
            ((kAction_Confirm kAction_Cancel)
               {{$this
                     find
                     {$this focus_name}}
                  confirm}
               {{$this
                     find
                     {$this focus_name}}
                  set_showing
                  FALSE}
                  {do {$this show_state kState_TrackAngleSliderMsg} {$this set_focus confirm_action.lst}})
            kDataUnhandled}
         kDataUnhandled})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component $user})
   (SCROLL_MSG
      {$this on_slider_change $component $user})
   (on_cancel
      {set $anglesld FALSE}
      {$this show_state kState_RB3EAppearanceMenu}))

(kState_TrackAngleSliderMsg
   (view confirm_action)
   (enter
      {handle
         ($this set_confirm_message
         {switch $multiangle 
            (1 {sprintf {localize os_angleset1} {int {+ {* -16.66 $multiangle} 116.66}}})
            (2 {sprintf {localize os_angleset2} {int {+ {* -16.66 $multiangle} 116.66}}})
            (3 {sprintf {localize os_angleset3} {int {+ {* -16.66 $multiangle} 116.66}}})
            (4 {sprintf {localize os_angleset4} {int {+ {* -16.66 $multiangle} 116.66}}})
            {sprintf {localize os_angleset} {int {+ {* -16.66 $multiangle} 116.66}}}
         }
         )
      }
   )
   (SELECT_MSG
      {$this show_state kState_RB3EAngleMenu}))
